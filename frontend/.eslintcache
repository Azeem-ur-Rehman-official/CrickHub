[{"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\index.js":"1","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\store.js":"2","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\App.js":"3","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\cartReducers.js":"4","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\orderReducers.js":"5","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\productReducers.js":"6","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\scheduleReducer.js":"7","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\teamReducer.js":"8","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\tournamentReducers.js":"9","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\userReducers.js":"10","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Home.js":"11","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\playerReducers.js":"12","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Addblogs.js":"13","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\BlogList.js":"14","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\AddFAQ.js":"15","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\FAQ.js":"16","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\NewProduct.js":"17","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\OrdersList.js":"18","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductReviews.js":"19","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\userActions.js":"20","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\SendNotification.js":"21","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Updateblog.js":"22","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateFaq.js":"23","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateProduct.js":"24","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProcessOrder.js":"25","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Dashboard.js":"26","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductsList.js":"27","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Cart.js":"28","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateUser.js":"29","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UsersList.js":"30","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\ConfirmOrder.js":"31","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Payment.js":"32","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Shipping.js":"33","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\ListOrders.js":"34","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\OrderDetails.js":"35","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BlogPage.js":"36","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BookNow.js":"37","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\OrderSuccess.js":"38","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ContactUs.js":"39","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Footer.js":"40","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\FAQ.js":"41","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Products.js":"42","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\SearchedProducts.js":"43","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Header.js":"44","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentSchedule.js":"45","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentTeams.js":"46","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentTeamSquad.js":"47","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ChattForum.js":"48","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCardDetail.js":"49","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\route\\ProtectedRoute.js":"50","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\JoinTournament.js":"51","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\AddSchedule.js":"52","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\LivePage.js":"53","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Dashboard.js":"54","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\ProductDetails.js":"55","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\AllTournaments.js":"56","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\CreateTeams.js":"57","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\CreateTournament.js":"58","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\JoinTournamentTeam.js":"59","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\PlayersList.js":"60","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\StartMatch.js":"61","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\TeamSchedule.js":"62","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\UpdateTeam.js":"63","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\TeamSquad.js":"64","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\UpdateSchedule.js":"65","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\UpdateTournament.js":"66","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\ForgotPassword.js":"67","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\UserProfile\\UserProfile.js":"68","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Login.js":"69","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Profile.js":"70","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\TeamsList.js":"71","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\NewPassword.js":"72","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Register.js":"73","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdatePassword.js":"74","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdateProfile.js":"75","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\ViewTournament.js":"76","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\productConstants.js":"77","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\cartConstants.js":"78","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\orderConstants.js":"79","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\userConstants.js":"80","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\scheduleConstant.js":"81","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\playersConstants.js":"82","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\tournamentConstants.js":"83","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\teamsConstant.js":"84","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Sidebar.js":"85","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Loader.js":"86","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MetaData.js":"87","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\playerActions.js":"88","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\TeamAction.js":"89","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\scheduleAction.js":"90","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\tournamentActions.js":"91","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\routes\\FetchData.js":"92","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\Toss\\MatchToss.js":"93","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\cartActions.js":"94","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\LiveMatches.js":"95","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\productActions.js":"96","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\TopHeader.js":"97","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Navbar.js":"98","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\Product.js":"99","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\FaqCard.js":"100","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCard.js":"101","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MiddleHeader.js":"102","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\orderActions.js":"103","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentList.js":"104","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\CheckoutSteps.js":"105","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\review\\ListReviews.js":"106","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Sidebar.js":"107","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\ChattComponent.js":"108","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\ProductsBanner.js":"109","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\WhychooseUS.js":"110","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\AboutUs.js":"111","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MySlider.js":"112","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\LiveScoreCard.js":"113","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\NotificationBox.js":"114","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Search.js":"115","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\footer\\Footer.jsx":"116","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\StartIning\\Ining.js":"117","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\StartIning\\LiveScoreIningCard.js":"118","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\Payment\\TournamentPayment.js":"119","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\Payment\\SubscriptionSuccess.js":"120","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\TopPlayers.js":"121","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\TopBatsman.js":"122","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\TopBowler.js":"123","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\PastMatches.js":"124"},{"size":652,"mtime":1650354286292,"results":"125","hashOfConfig":"126"},{"size":2747,"mtime":1654705153505,"results":"127","hashOfConfig":"126"},{"size":13870,"mtime":1656245937475,"results":"128","hashOfConfig":"126"},{"size":1092,"mtime":1642391957000,"results":"129","hashOfConfig":"126"},{"size":4375,"mtime":1642391957000,"results":"130","hashOfConfig":"126"},{"size":6961,"mtime":1642391957000,"results":"131","hashOfConfig":"126"},{"size":3839,"mtime":1655222790991,"results":"132","hashOfConfig":"126"},{"size":3637,"mtime":1654710421133,"results":"133","hashOfConfig":"126"},{"size":3967,"mtime":1652606728367,"results":"134","hashOfConfig":"126"},{"size":6373,"mtime":1642391957000,"results":"135","hashOfConfig":"126"},{"size":683,"mtime":1652553218738,"results":"136","hashOfConfig":"126"},{"size":3713,"mtime":1652606728956,"results":"137","hashOfConfig":"126"},{"size":4065,"mtime":1655300434410,"results":"138","hashOfConfig":"126"},{"size":3627,"mtime":1655300434410,"results":"139","hashOfConfig":"126"},{"size":2312,"mtime":1655300434410,"results":"140","hashOfConfig":"126"},{"size":3319,"mtime":1655300434325,"results":"141","hashOfConfig":"126"},{"size":7619,"mtime":1655987779198,"results":"142","hashOfConfig":"126"},{"size":3840,"mtime":1655300434322,"results":"143","hashOfConfig":"126"},{"size":3529,"mtime":1655385744335,"results":"144","hashOfConfig":"126"},{"size":6658,"mtime":1655033879977,"results":"145","hashOfConfig":"126"},{"size":2395,"mtime":1655300434322,"results":"146","hashOfConfig":"126"},{"size":4584,"mtime":1655300433566,"results":"147","hashOfConfig":"126"},{"size":2861,"mtime":1655300433730,"results":"148","hashOfConfig":"126"},{"size":8637,"mtime":1655987779653,"results":"149","hashOfConfig":"126"},{"size":5829,"mtime":1645963505458,"results":"150","hashOfConfig":"126"},{"size":11125,"mtime":1642849576422,"results":"151","hashOfConfig":"126"},{"size":3934,"mtime":1655300304690,"results":"152","hashOfConfig":"126"},{"size":5560,"mtime":1655288531797,"results":"153","hashOfConfig":"126"},{"size":4577,"mtime":1655300433572,"results":"154","hashOfConfig":"126"},{"size":3832,"mtime":1655300433565,"results":"155","hashOfConfig":"126"},{"size":3764,"mtime":1655994009771,"results":"156","hashOfConfig":"126"},{"size":4826,"mtime":1655983981030,"results":"157","hashOfConfig":"126"},{"size":3634,"mtime":1655300432920,"results":"158","hashOfConfig":"126"},{"size":2661,"mtime":1655300431306,"results":"159","hashOfConfig":"126"},{"size":3754,"mtime":1655300431306,"results":"160","hashOfConfig":"126"},{"size":1383,"mtime":1655284125154,"results":"161","hashOfConfig":"126"},{"size":12812,"mtime":1655386402796,"results":"162","hashOfConfig":"126"},{"size":792,"mtime":1655289408764,"results":"163","hashOfConfig":"126"},{"size":6552,"mtime":1655380801296,"results":"164","hashOfConfig":"126"},{"size":3350,"mtime":1655380221037,"results":"165","hashOfConfig":"126"},{"size":1627,"mtime":1642841952034,"results":"166","hashOfConfig":"126"},{"size":4996,"mtime":1655987778516,"results":"167","hashOfConfig":"126"},{"size":7409,"mtime":1655987778519,"results":"168","hashOfConfig":"126"},{"size":636,"mtime":1642391957000,"results":"169","hashOfConfig":"126"},{"size":3955,"mtime":1656315265145,"results":"170","hashOfConfig":"126"},{"size":3791,"mtime":1656315006837,"results":"171","hashOfConfig":"126"},{"size":3943,"mtime":1655300431306,"results":"172","hashOfConfig":"126"},{"size":392,"mtime":1655388423747,"results":"173","hashOfConfig":"126"},{"size":9945,"mtime":1655275156469,"results":"174","hashOfConfig":"126"},{"size":920,"mtime":1642391957000,"results":"175","hashOfConfig":"126"},{"size":4628,"mtime":1655386402790,"results":"176","hashOfConfig":"126"},{"size":9321,"mtime":1655386598397,"results":"177","hashOfConfig":"126"},{"size":331,"mtime":1656317196630,"results":"178","hashOfConfig":"126"},{"size":5643,"mtime":1656066873597,"results":"179","hashOfConfig":"126"},{"size":9927,"mtime":1655383868756,"results":"180","hashOfConfig":"126"},{"size":5159,"mtime":1655996702879,"results":"181","hashOfConfig":"126"},{"size":5962,"mtime":1655386400611,"results":"182","hashOfConfig":"126"},{"size":7312,"mtime":1656065817985,"results":"183","hashOfConfig":"126"},{"size":3359,"mtime":1655300429971,"results":"184","hashOfConfig":"126"},{"size":3626,"mtime":1655300429971,"results":"185","hashOfConfig":"126"},{"size":1559,"mtime":1655651888398,"results":"186","hashOfConfig":"126"},{"size":5050,"mtime":1656271397904,"results":"187","hashOfConfig":"126"},{"size":6631,"mtime":1655386402797,"results":"188","hashOfConfig":"126"},{"size":4332,"mtime":1655300430219,"results":"189","hashOfConfig":"126"},{"size":8710,"mtime":1655386402935,"results":"190","hashOfConfig":"126"},{"size":8102,"mtime":1655386402935,"results":"191","hashOfConfig":"126"},{"size":2101,"mtime":1655382846212,"results":"192","hashOfConfig":"126"},{"size":11615,"mtime":1655386404199,"results":"193","hashOfConfig":"126"},{"size":4770,"mtime":1655390606830,"results":"194","hashOfConfig":"126"},{"size":1950,"mtime":1655288824480,"results":"195","hashOfConfig":"126"},{"size":5689,"mtime":1656314976413,"results":"196","hashOfConfig":"126"},{"size":2512,"mtime":1655300425455,"results":"197","hashOfConfig":"126"},{"size":7744,"mtime":1655986680031,"results":"198","hashOfConfig":"126"},{"size":2632,"mtime":1655300424333,"results":"199","hashOfConfig":"126"},{"size":4270,"mtime":1655300424324,"results":"200","hashOfConfig":"126"},{"size":3248,"mtime":1652593346268,"results":"201","hashOfConfig":"126"},{"size":1905,"mtime":1642391957000,"results":"202","hashOfConfig":"126"},{"size":190,"mtime":1642391957000,"results":"203","hashOfConfig":"126"},{"size":1160,"mtime":1642391957000,"results":"204","hashOfConfig":"126"},{"size":2213,"mtime":1642391957000,"results":"205","hashOfConfig":"126"},{"size":1384,"mtime":1654704447471,"results":"206","hashOfConfig":"126"},{"size":1300,"mtime":1652259026134,"results":"207","hashOfConfig":"126"},{"size":1468,"mtime":1651145900072,"results":"208","hashOfConfig":"126"},{"size":1216,"mtime":1651144615431,"results":"209","hashOfConfig":"126"},{"size":1671,"mtime":1655120516304,"results":"210","hashOfConfig":"126"},{"size":331,"mtime":1655188780576,"results":"211","hashOfConfig":"126"},{"size":218,"mtime":1650273484654,"results":"212","hashOfConfig":"126"},{"size":3863,"mtime":1652264637267,"results":"213","hashOfConfig":"126"},{"size":4207,"mtime":1652601981747,"results":"214","hashOfConfig":"126"},{"size":4587,"mtime":1655233094560,"results":"215","hashOfConfig":"126"},{"size":4518,"mtime":1652277063068,"results":"216","hashOfConfig":"126"},{"size":448,"mtime":1642391957000,"results":"217","hashOfConfig":"126"},{"size":6274,"mtime":1655730584212,"results":"218","hashOfConfig":"126"},{"size":1141,"mtime":1642391957000,"results":"219","hashOfConfig":"126"},{"size":2489,"mtime":1655819787489,"results":"220","hashOfConfig":"126"},{"size":5453,"mtime":1654681602869,"results":"221","hashOfConfig":"126"},{"size":9663,"mtime":1655398309684,"results":"222","hashOfConfig":"126"},{"size":7369,"mtime":1655126175313,"results":"223","hashOfConfig":"126"},{"size":1340,"mtime":1655118340851,"results":"224","hashOfConfig":"126"},{"size":1026,"mtime":1655284706129,"results":"225","hashOfConfig":"126"},{"size":1077,"mtime":1655284155053,"results":"226","hashOfConfig":"126"},{"size":2057,"mtime":1655118663175,"results":"227","hashOfConfig":"126"},{"size":3664,"mtime":1642391957000,"results":"228","hashOfConfig":"126"},{"size":3594,"mtime":1655376257495,"results":"229","hashOfConfig":"126"},{"size":1980,"mtime":1655289691843,"results":"230","hashOfConfig":"126"},{"size":689,"mtime":1642391957000,"results":"231","hashOfConfig":"126"},{"size":1879,"mtime":1655121928085,"results":"232","hashOfConfig":"126"},{"size":11887,"mtime":1655388809038,"results":"233","hashOfConfig":"126"},{"size":345,"mtime":1655284912721,"results":"234","hashOfConfig":"126"},{"size":4651,"mtime":1652538955826,"results":"235","hashOfConfig":"126"},{"size":2813,"mtime":1652538166055,"results":"236","hashOfConfig":"126"},{"size":1992,"mtime":1654686960563,"results":"237","hashOfConfig":"126"},{"size":3538,"mtime":1656321577589,"results":"238","hashOfConfig":"126"},{"size":492,"mtime":1655381262299,"results":"239","hashOfConfig":"126"},{"size":913,"mtime":1652552179655,"results":"240","hashOfConfig":"126"},{"size":1513,"mtime":1642851797950,"results":"241","hashOfConfig":"126"},{"size":18145,"mtime":1656272388614,"results":"242","hashOfConfig":"126"},{"size":3647,"mtime":1656272787566,"results":"243","hashOfConfig":"126"},{"size":4754,"mtime":1656065493550,"results":"244","hashOfConfig":"126"},{"size":805,"mtime":1655995787677,"results":"245","hashOfConfig":"126"},{"size":314,"mtime":1656274600186,"results":"246","hashOfConfig":"126"},{"size":2735,"mtime":1656274242368,"results":"247","hashOfConfig":"126"},{"size":3038,"mtime":1656275373705,"results":"248","hashOfConfig":"126"},{"size":1682,"mtime":1656317160686,"results":"249","hashOfConfig":"126"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},"1jgqxoy",{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"252"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"252"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"252"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"252"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"252"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"252"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"252"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"252"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"252"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"252"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"252"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"252"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"252"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"355","usedDeprecatedRules":"252"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"252"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"252"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"252"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"252"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"374","usedDeprecatedRules":"252"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"252"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"252"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"252"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"252"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"399","usedDeprecatedRules":"252"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"252"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"252"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"408","usedDeprecatedRules":"252"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"252"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"252"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"252"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"252"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"252"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"252"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"252"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"252"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"252"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"252"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"252"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"252"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"252"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"252"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"252"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"252"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"252"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"252"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"252"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"252"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"252"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\index.js",[],["548","549"],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\store.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\App.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\scheduleReducer.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\teamReducer.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\tournamentReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Home.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\playerReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Addblogs.js",["550"],"import { useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst Addblogs = () => {\n  const alert = useAlert();\n  const [name, setName] = useState('');\n\n  const [description, setDescription] = useState('');\n\n  const [image, setimage] = useState('');\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('heading', name);\n    formData.set('description', description);\n    formData.set('image', image);\n    // console.log(`image : ${image}`);\n    postData('/api/v1/admin/blog/new', formData)\n      .then((res) => {\n        setName('');\n        setDescription('');\n        setimage('');\n        setimagePreview('/images/default_image.png');\n        alert.show('Blog added successfully');\n      })\n      .catch((err) => {\n        console.log(err.response);\n        alert.show('somthing went wrong');\n      });\n    // dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'image') {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setimagePreview(reader.result);\n          setimage(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  return (\n    <div>\n      <MetaData title={'Add Blog'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10 \">\n          <div>\n            <form\n              className=\"shadow-lg p-3 my-3 border-radius-20\"\n              onSubmit={submitHandler}\n            >\n              <h3 className=\"m-3\">Add New Blog</h3>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Heading</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"description_field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"description_field\"\n                  rows=\"8\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"image_upload\">Blog Image</label>\n                <div className=\" align-items-center\">\n                  <div>\n                    <figure className=\"image mr-3 item-rtl\">\n                      <img\n                        src={imagePreview}\n                        className=\"mt-3 mr-2 img-thumbnail\"\n                        width=\"300\"\n                        height=\"auto\"\n                        alt=\"image Preview\"\n                      />\n                    </figure>\n                  </div>\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      className=\"custom-file-input\"\n                      id=\"customFile\"\n                      accept=\"image/*\"\n                      onChange={onChange}\n                    />\n                    <label className=\"custom-file-label \" htmlFor=\"customFile\">\n                      Choose image\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <button type=\"submit\" className=\"btn update-btn mx-3 mt-4 mb-3 \">\n                Create\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Addblogs;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\BlogList.js",["551"],"import { MDBDataTable } from 'mdbreact';\nimport { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteData, getData } from '../../routes/FetchData';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst BlogList = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [BLOG, setBLOG] = useState([]);\n  const { loading } = useSelector((state) => state.allUsers);\n\n  const getAllData = () => {\n    getData(`/api/v1/blogs`)\n      .then((res) => {\n        // console.log(`data is ${res}`);\n        // console.log(res.data.blog);\n        setBLOG((r) => (r = res.data.blog));\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const deleteUserHandler = (id) => {\n    deleteData(`/api/v1/admin/blog/${id}`)\n      .then((res) => {\n        getAllData();\n        alert.show('Blog deleted successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Image',\n          field: 'image',\n        },\n        {\n          label: 'Heading',\n          field: 'heading',\n          sort: 'asc',\n        },\n        {\n          label: 'Description',\n          field: 'description',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    BLOG.forEach((user) => {\n      data.rows.push({\n        image: (\n          <>\n            <img\n              src={user.image.url}\n              alt={user.heaeding}\n              className=\"img-thumbnail\"\n              width=\"60\"\n              height=\"60\"\n            ></img>\n          </>\n        ),\n        heading: user.heading,\n        description: user.description.substring(0, 120) + '...',\n\n        actions: (\n          <Fragment>\n            <Link\n              to={`/blog-update/${user._id}`}\n              className=\"btn btn-primary py-1 px-2\"\n            >\n              <i className=\"fa fa-pencil\"></i>\n            </Link>\n            <button\n              className=\"btn btn-danger py-1 px-2 ml-2\"\n              onClick={() => deleteUserHandler(user._id)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Blogs'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"d-flex  mx-3\">\n              <h3 className=\"my-5\">Blogs</h3>\n              <Link\n                to=\"/admin/add/blogs\"\n                className=\"btn order-button ml-auto my-auto px-4\"\n              >\n                <i className=\"fa fa-plus\"></i> ADD\n              </Link>\n            </div>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <MDBDataTable\n                data={setUsers()}\n                className=\"px-3\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"50\"\n                bordered\n                striped\n                hover\n              />\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default BlogList;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\AddFAQ.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\FAQ.js",["552","553","554","555"],"import { MDBDataTable } from 'mdbreact';\nimport { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteData, getData } from '../../routes/FetchData';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst FAQ = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [FAQ, setFAQ] = useState([]);\n  const { loading, error, users } = useSelector((state) => state.allUsers);\n  const { isDeleted } = useSelector((state) => state.user);\n\n  const getAllData = () => {\n    getData(`/api/v1/faq`)\n      .then((res) => {\n        // console.log(`data is ${res}`);\n        // console.log(res.data.faqs);\n        setFAQ((r) => (r = res.data.faqs));\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const deleteUserHandler = (id) => {\n    deleteData(`/api/v1/admin/faq/${id}`)\n      .then((res) => {\n        getAllData();\n        alert.show('FAQ deleted successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Question',\n          field: 'question',\n          sort: 'asc',\n        },\n        {\n          label: 'Answer',\n          field: 'answer',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    FAQ.forEach((user) => {\n      data.rows.push({\n        question: user.question,\n        answer: user.answer,\n\n        actions: (\n          <Fragment>\n            <Link\n              to={`/faq-update/${user._id}`}\n              className=\"btn btn-primary py-1 px-2\"\n            >\n              <i className=\"fa fa-pencil\"></i>\n            </Link>\n            <button\n              className=\"btn btn-danger py-1 px-2 ml-2\"\n              onClick={() => deleteUserHandler(user._id)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'FAQs'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"d-flex mx-3\">\n              <h3 className=\"my-5\">All Questions</h3>\n              <Link\n                to=\"/admin/add/faq\"\n                className=\"btn order-button ml-auto my-auto px-4\"\n              >\n                <i className=\"fa fa-plus\"></i> ADD\n              </Link>\n            </div>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <MDBDataTable\n                data={setUsers()}\n                className=\"px-3\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"50\"\n                bordered\n                striped\n                hover\n              />\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FAQ;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\NewProduct.js",["556"],"import { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearErrors, newProduct } from '../../actions/productActions';\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\n\nconst NewProduct = ({ history }) => {\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(0);\n  const [seller, setSeller] = useState('');\n  const [images, setImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const [status, setStatus] = useState('upcoming');\n  const categories = [\n    'Cricket Clothing',\n    'Batting Equipment',\n    'Wicket Set',\n    'Wicket Keeping Equipment',\n    'Cricket Bats',\n    'Cricket Balls',\n    'Cricket Footwear',\n    'Halmets',\n    'Cricket Bowling Machines',\n  ];\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, success } = useSelector((state) => state.newProduct);\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      history.push('/admin/products');\n      alert.success('Product created successfully');\n      dispatch({ type: NEW_PRODUCT_RESET });\n    }\n  }, [dispatch, alert, error, success, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (name === '' || price === '' || description === '' || seller === '')\n      alert.error('Please Fill out all the Fields');\n    else {\n      const formData = new FormData();\n      formData.set('name', name);\n      formData.set('price', price);\n      formData.set('description', description);\n      formData.set('category', category);\n      formData.set('stock', stock);\n      formData.set('seller', seller);\n      formData.set('status', status);\n      images.forEach((image) => {\n        formData.append('images', image);\n      });\n\n      dispatch(newProduct(formData));\n    }\n  };\n\n  const onChange = (e) => {\n    const files = Array.from(e.target.files);\n\n    setImagesPreview([]);\n    setImages([]);\n\n    files.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview((oldArray) => [...oldArray, reader.result]);\n          setImages((oldArray) => [...oldArray, reader.result]);\n        }\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'New Product'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"wrapper my-3\">\n              <form\n                className=\"shadow-lg p-5 container-fluid border-radius-20\"\n                onSubmit={submitHandler}\n                encType=\"multipart/form-data\"\n              >\n                <h3 className=\"mb-4\">New Product</h3>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name_field\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name_field\"\n                    className=\"form-control\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"price_field\">Price</label>\n                  <input\n                    type=\"text\"\n                    id=\"price_field\"\n                    className=\"form-control\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"description_field\">Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"description_field\"\n                    rows=\"8\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  ></textarea>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"category_field\">Brand</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"category_field\"\n                    value={category}\n                    onChange={(e) => setCategory(e.target.value)}\n                  >\n                    {categories.map((category) => (\n                      <option key={category} value={category}>\n                        {category}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"stock_field\">Stock</label>\n                  <input\n                    type=\"number\"\n                    id=\"stock_field\"\n                    className=\"form-control\"\n                    value={stock}\n                    onChange={(e) => setStock(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"seller_field\">Seller Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"seller_field\"\n                    className=\"form-control\"\n                    value={seller}\n                    onChange={(e) => setSeller(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Images</label>\n\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      name=\"product_images\"\n                      className=\"custom-file-input\"\n                      id=\"customFile\"\n                      onChange={onChange}\n                      multiple\n                    />\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                      Choose Images\n                    </label>\n                  </div>\n\n                  {imagesPreview.map((img) => (\n                    <img\n                      src={img}\n                      key={img}\n                      alt=\"Images Preview\"\n                      className=\"mt-3 mr-2\"\n                      width=\"55\"\n                      height=\"52\"\n                    />\n                  ))}\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"category_field\">Status</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"category_field\"\n                    value={status}\n                    onChange={(e) => setStatus(e.target.value)}\n                  >\n                    <option value=\"upcoming\">Upcoming</option>\n                    <option value=\"published\">Published</option>\n                  </select>\n                </div>\n                <button\n                  id=\"login_button\"\n                  type=\"submit\"\n                  className=\"btn btn-block py-3 order-button\"\n                >\n                  CREATE\n                </button>\n              </form>\n            </div>\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default NewProduct;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\OrdersList.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductReviews.js",["557","558","559","560","561","562"],"import { MDBDataTable } from 'mdbreact';\nimport { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  clearErrors,\n  deleteReview,\n  getProductReviews,\n} from '../../actions/productActions';\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\n\nconst ProductReviews = ({ match, history }) => {\n  const [value, setValue] = useState('');\n  const [err, setErr] = useState(false);\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, reviews } = useSelector((state) => state.productReviews);\n  const { product } = useSelector((state) => state.productDetails);\n  const { isDeleted, error: deleteError } = useSelector(\n    (state) => state.review\n  );\n\n  const productId = match.params.id;\n\n  console.log(reviews);\n  useEffect(() => {\n    if (!reviews) {\n      dispatch(getProductReviews(productId));\n    }\n    if (reviews && reviews._id !== productId) {\n      dispatch(getProductReviews(productId));\n    }\n\n    if (!error) {\n      setErr(false);\n      dispatch(clearErrors());\n    } else {\n      setErr(true);\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Review deleted successfully');\n      dispatch({ type: DELETE_REVIEW_RESET });\n    }\n  }, [dispatch, alert, productId, reviews, error, isDeleted, deleteError]);\n\n  const deleteReviewHandler = (id) => {\n    dispatch(deleteReview(id, productId));\n  };\n\n  const setReviews = () => {\n    const data = {\n      columns: [\n        {\n          label: 'User',\n          field: 'user',\n          sort: 'asc',\n        },\n        {\n          label: 'Rating',\n          field: 'rating',\n          sort: 'asc',\n        },\n        {\n          label: 'Comment',\n          field: 'comment',\n          sort: 'asc',\n        },\n\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    reviews.reviews.forEach((review) => {\n      data.rows.push({\n        user: review.name,\n        rating: review.rating,\n        comment: review.comment,\n\n        actions: (\n          <button\n            className=\"btn btn-danger py-1 px-2 ml-2\"\n            onClick={() => deleteReviewHandler(review._id)}\n          >\n            <i className=\"fa fa-trash\"></i>\n          </button>\n        ),\n      });\n    });\n\n    return data;\n  };\n  function cancelHandle() {\n    setErr(false);\n    dispatch(clearErrors());\n  }\n  return (\n    <Fragment>\n      <MetaData title={'Product Reviews'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div className=\"wrapper my-3\">\n            <h3>{reviews && reviews.name}</h3>\n          </div>\n          <Fragment>\n            {reviews &&\n            reviews.reviews.length > 0 &&\n            reviews._id == productId ? (\n              <MDBDataTable\n                data={setReviews()}\n                className=\"px-3\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"50\"\n                bordered\n                striped\n                hover\n              />\n            ) : (\n              <p className=\"mt-5 text-center\">No Reviews.</p>\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProductReviews;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\userActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\SendNotification.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Updateblog.js",["563","564","565","566"],"import { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { withRouter } from 'react-router-dom';\nimport { patchData, postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst Updateblog = (props) => {\n  const alert = useAlert();\n  const [name, setName] = useState('');\n  const [blogsData, setblogsData] = useState();\n  const [description, setDescription] = useState('');\n\n  const [image, setimage] = useState('');\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\n  useEffect(() => {\n    const id = props.match.params.id;\n    // console.log(id);\n\n    postData(`/api/v1/single/blog`, { id })\n      .then((res) => {\n        setName(res.data.blog.heading);\n        setDescription(res.data.blog.description);\n        setimagePreview(res.data.blog.image.url);\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  }, []);\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('heading', name);\n    formData.set('description', description);\n    formData.set('image', image);\n    // console.log(`image : ${image}`);\n    patchData(`/api/v1/admin/blog/${props.match.params.id}`, formData)\n      .then((res) => {\n        setName('');\n        setDescription('');\n        setimage('');\n        setimagePreview('/images/default_image.png');\n        alert.show('Blog updated successfully');\n      })\n      .catch((err) => {\n        console.log(err.response);\n        alert.show('somthing went wrong');\n      });\n    // dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'image') {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setimagePreview(reader.result);\n          setimage(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  return (\n    <div>\n      <MetaData title={'Update Blog'} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10 \">\n          <div>\n            <h3 className=\"my-5\">Update Blog</h3>\n\n            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Heading</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"description_field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"description_field\"\n                  rows=\"8\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"image_upload\">Blog Image</label>\n                <div className=\" align-items-center\">\n                  <div>\n                    <figure className=\"image mr-3 item-rtl\">\n                      <img\n                        src={imagePreview}\n                        className=\"mt-3 mr-2 img-thumbnail\"\n                        width=\"300\"\n                        height=\"auto\"\n                        alt=\"image Preview\"\n                      />\n                    </figure>\n                  </div>\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      className=\"custom-file-input\"\n                      id=\"customFile\"\n                      accept=\"image/*\"\n                      onChange={onChange}\n                    />\n                    <label className=\"custom-file-label \" htmlFor=\"customFile\">\n                      Choose image\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <button type=\"submit\" className=\"btn update-btn mx-3 mt-4 mb-3 \">\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Updateblog);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateFaq.js",["567"],"import { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { withRouter } from 'react-router-dom';\nimport { patchData, postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst UpdateFaq = (props) => {\n  const alert = useAlert();\n  const [question, setQuestion] = useState('');\n\n  const [answer, setAnswer] = useState('');\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    // console.log(id);\n    // setLoading(true);\n    postData(`/api/v1/single/faq`, { id })\n      .then((res) => {\n        setQuestion(res.data.faqs.question);\n        setAnswer(res.data.faqs.answer);\n        // setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  }, []);\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('question', question);\n    formData.set('answer', answer);\n    patchData(`/api/v1/admin/faq/${props.match.params.id}`, formData)\n      .then((res) => {\n        setQuestion('');\n        setAnswer('');\n        alert.show('FAQ updated successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n    // dispatch(updateProfile(formData));\n  };\n  return (\n    <div>\n      <MetaData title={'Update FAQs'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div>\n            <form className=\"shadow-lg my-3 p-3\" onSubmit={submitHandler}>\n              <h3 className=\"m-3\">Update FAQ</h3>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Question</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"question\"\n                  value={question}\n                  onChange={(e) => setQuestion(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"description_field\">Answer</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"description_field\"\n                  rows=\"8\"\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                ></textarea>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"update-btn order-button mx-3 px-5\"\n              >\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(UpdateFaq);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateProduct.js",["568"],"import { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  clearErrors,\n  getProductDetails,\n  updateProduct,\n} from '../../actions/productActions';\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\n\nconst UpdateProduct = ({ match, history }) => {\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(0);\n  const [seller, setSeller] = useState('');\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('upcoming');\n  const [oldImages, setOldImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n\n  const categories = [\n    'Cricket Clothing',\n    'Batting Equipment',\n    'Wicket Set',\n    'Wicket Keeping Equipment',\n    'Cricket Bats',\n    'Cricket Balls',\n    'Cricket Footwear',\n    'Halmets',\n    'Cricket Bowling Machines',\n  ];\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, product } = useSelector((state) => state.productDetails);\n  const {\n    loading,\n    error: updateError,\n    isUpdated,\n  } = useSelector((state) => state.product);\n\n  const productId = match.params.id;\n\n  useEffect(() => {\n    if (product && product._id !== productId) {\n      dispatch(getProductDetails(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setDescription(product.description);\n      setCategory(product.category);\n      setSeller(product.seller);\n      setStock(product.stock);\n      setOldImages(product.images);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      history.push('/admin/products');\n      alert.success('Product updated successfully');\n      dispatch({ type: UPDATE_PRODUCT_RESET });\n    }\n  }, [\n    dispatch,\n    alert,\n    error,\n    isUpdated,\n    history,\n    updateError,\n    product,\n    productId,\n  ]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('price', price);\n    formData.set('description', description);\n    formData.set('category', category);\n    formData.set('stock', stock);\n    formData.set('seller', seller);\n    formData.set('status', status);\n    images.forEach((image) => {\n      formData.append('images', image);\n    });\n\n    dispatch(updateProduct(product._id, formData));\n  };\n\n  const onChange = (e) => {\n    const files = Array.from(e.target.files);\n\n    setImagesPreview([]);\n    setImages([]);\n    setOldImages([]);\n\n    files.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview((oldArray) => [...oldArray, reader.result]);\n          setImages((oldArray) => [...oldArray, reader.result]);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Update Product'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"wrapper my-3\">\n              <form\n                className=\"shadow-lg p-5 container-fluid border-radius-20\"\n                onSubmit={submitHandler}\n                encType=\"multipart/form-data\"\n              >\n                <h3 className=\"mb-4\">Update Product</h3>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name_field\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name_field\"\n                    className=\"form-control\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"price_field\">Price</label>\n                  <input\n                    type=\"text\"\n                    id=\"price_field\"\n                    className=\"form-control\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"description_field\">Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"description_field\"\n                    rows=\"8\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  ></textarea>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"category_field\">Brand</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"category_field\"\n                    value={category}\n                    onChange={(e) => setCategory(e.target.value)}\n                  >\n                    {categories.map((category) => (\n                      <option key={category} value={category}>\n                        {category}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"stock_field\">Stock</label>\n                  <input\n                    type=\"number\"\n                    id=\"stock_field\"\n                    className=\"form-control\"\n                    value={stock}\n                    onChange={(e) => setStock(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"seller_field\">Seller Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"seller_field\"\n                    className=\"form-control\"\n                    value={seller}\n                    onChange={(e) => setSeller(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Images</label>\n\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      name=\"product_images\"\n                      className=\"custom-file-input\"\n                      id=\"customFile\"\n                      onChange={onChange}\n                      multiple\n                    />\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                      Choose Images\n                    </label>\n                  </div>\n\n                  {oldImages &&\n                    oldImages.map((img) => (\n                      <img\n                        key={img}\n                        src={img.url}\n                        alt={img.url}\n                        className=\"mt-3 mr-2\"\n                        width=\"55\"\n                        height=\"52\"\n                      />\n                    ))}\n\n                  {imagesPreview.map((img) => (\n                    <img\n                      src={img}\n                      key={img}\n                      alt=\"Images Preview\"\n                      className=\"mt-3 mr-2\"\n                      width=\"55\"\n                      height=\"52\"\n                    />\n                  ))}\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"category_field\">Status</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"category_field\"\n                    value={status}\n                    onChange={(e) => setStatus(e.target.value)}\n                  >\n                    <option value=\"upcoming\">Upcoming</option>\n                    <option value=\"published\">Published</option>\n                  </select>\n                </div>\n                <button\n                  id=\"login_button\"\n                  type=\"submit\"\n                  className=\"btn btn-block py-3 order-button\"\n                >\n                  UPDATE\n                </button>\n              </form>\n            </div>\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateProduct;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Dashboard.js",["569"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { allOrders } from '../../actions/orderActions';\nimport { getAdminProducts } from '../../actions/productActions';\nimport { allUsers } from '../../actions/userActions';\nimport { getData } from '../../routes/FetchData';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  const [weeklyProfit, setWeeklyProfit] = useState([]);\n\n  const { products } = useSelector((state) => state.products);\n  const { users } = useSelector((state) => state.allUsers);\n  const { orders, totalAmount, loading } = useSelector(\n    (state) => state.allOrders\n  );\n\n  let outOfStock = 0;\n  products.forEach((product) => {\n    if (product.stock === 0) {\n      outOfStock += 1;\n    }\n  });\n\n  const getAllData = () => {\n    getData(`/api/v1/weekly`)\n      .then((res) => {\n        setWeeklyProfit((r) => (r = res.data.weeklyProf));\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n\n  // const updateData = (id, profit) => {\n  //   const formData = new FormData();\n  //   formData.set('profit', profit);\n  //   patchData(`/api/v1/admin/weekly/update`).then((res) => {\n  //     console.log(\"Updated with response\");\n  //     console.log(res);\n  //     // setWeeklyProfit(weeklyProfit.map((weekly) => {\n  //     //   if(weekly._id===res.data.weeklyProfitData._id) weekly.profit=res.data.weeklyProfitData.profit;\n  //     //   return weekly;\n  //     // }));\n  //   })\n  //   .catch((err) => console.log(err));\n  // }\n\n  useEffect(() => {\n    getAllData();\n    dispatch(getAdminProducts());\n    dispatch(allOrders());\n    dispatch(allUsers());\n  }, [dispatch]);\n\n  // const data = {\n  //   labels: ['January', 'February', 'March',\n  //            'April', 'May'],\n  //   datasets: [\n  //     {\n  //       label: 'Rainfall',\n  //       fill: false,\n  //       lineTension: 0.5,\n  //       backgroundColor: 'rgba(255,0,0,0.3)',\n  //       borderColor: 'rgba(0,0,255,1)',\n  //       borderWidth: 2,\n  //       data: [65, 59, 80, 81, 56]\n  //     }\n  //   ]\n  // }\n\n  // ChartJS.register(\n  //   CategoryScale,\n  //   LinearScale,\n  //   PointElement,\n  //   LineElement,\n  //   Title,\n  //   Tooltip,\n  //   Legend\n  // );\n\n  // const options = {\n  //   responsive: true,\n  //   plugins: {\n  //     legend: {\n  //       position: 'top',\n  //     },\n  //     title: {\n  //       display: true,\n  //       text: 'Weekly Prediction Report',\n  //       fontSize: 20,\n  //     },\n  //   },\n  // };\n\n  // const dayAsString = (dayIndex) => {\n  //   return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][dayIndex];\n  // }\n  // const getLabelforNextWeek = (startDate, daysToAdd) => {\n  //   var labels = [];\n\n  //   for (var i = 1; i <= daysToAdd; i++) {\n  //       var currentDate = new Date();\n  //       currentDate.setDate(startDate.getDate() + i);\n  //       labels[i-1] = dayAsString(currentDate.getDay());\n  //   }\n\n  //   return labels;\n  // }\n\n  // const labels = getLabelforNextWeek(new Date(), 7);\n\n  // var profitData = [];\n\n  // weeklyProfit.forEach((weekly) => {\n  //   profitData[labels.indexOf(weekly.day)] = weekly.profit;\n  // });\n\n  // const data = {\n  //   labels,\n  //   datasets: [\n  //     {\n  //       label: 'Profit',\n  //       data: profitData,\n  //       borderColor: 'rgb(255, 99, 132)',\n  //       backgroundColor: 'rgba(255, 99, 132, 0.5)',\n  //     }\n  //   ],\n  // };\n\n  // const predict = () => {\n  //   updateData();\n  // }\n\n  return (\n    <Fragment>\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <Fragment>\n              <MetaData title={'Admin Dashboard'} />\n              <div className=\"row pr-4\">\n                <div className=\"col-xl-12 col-sm-12 mb-3\">\n                  <div className=\"topCard o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Total Amount\n                        <br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pr-4\">\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Products\n                        <br /> <b>{products && products.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer clearfix small z-1\"\n                      to=\"/admin/products\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Orders\n                        <br /> <b>{orders && orders.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer clearfix small z-1\"\n                      to=\"/admin/orders\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Users\n                        <br /> <b>{users && users.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer clearfix small z-1\"\n                      to=\"/admin/users\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size cardDetail\">\n                        Out of Stock\n                        <br /> <b>{outOfStock}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <div className='container-fluid'>\n                <div className='row p-5'>\n                  <div className='col-sm-8 mx-auto'>\n                    <Chart data={data} options={options} />\n                  </div>\n                 \n                </div>\n              </div> */}\n              {/* //------------------------- */}\n              {/* <div className=\"row pr-4\">\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  bg-success o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Complaints\n                        <br /> <b>{0}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer  clearfix small z-1\"\n                      to=\"/admin/products\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  bg-warning o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Subscription\n                        <br /> <b>{orders && orders.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer  clearfix small z-1\"\n                      to=\"/admin/orders\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  bg-info o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Users\n                        <br /> <b>{users && users.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer  clearfix small z-1\"\n                      to=\"/admin/users\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size cardDetail\">\n                        Out of Stock\n                        <br /> <b>{outOfStock}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div> */}\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Dashboard;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Cart.js",["570"],"import { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions';\nimport MetaData from '../layout/MetaData';\n\nconst Cart = ({ history }) => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.auth);\n  const { cartItems } = useSelector((state) => state.cart);\n\n  const removeCartItemHandler = (id) => {\n    dispatch(removeItemFromCart(id));\n  };\n\n  const increaseQty = (id, quantity, stock) => {\n    const newQty = quantity + 1;\n\n    if (newQty > stock) return;\n\n    dispatch(addItemToCart(id, newQty));\n  };\n\n  const decreaseQty = (id, quantity) => {\n    const newQty = quantity - 1;\n\n    if (newQty <= 0) return;\n\n    dispatch(addItemToCart(id, newQty));\n  };\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\" data-aos=\"fade-up\" data-aos-delay=\"50\">\n        <MetaData title={'Your Cart'} />\n        {cartItems.length === 0 ? (\n          <h2 className=\" my-5 text-center\">Your Cart is Empty</h2>\n        ) : (\n          <Fragment>\n            <h2 className=\"mt-5\">\n              Your Cart: <b>{cartItems.length} items</b>\n            </h2>\n\n            <div className=\"row d-flex justify-content-between\">\n              <div className=\"col-12 col-lg-8\">\n                {cartItems.map((item) => (\n                  <Fragment>\n                    <hr />\n\n                    <div className=\"cart-item\" key={item.product}>\n                      <div className=\"row\">\n                        <div className=\"col-4 col-lg-3\">\n                          <img\n                            src={item.image}\n                            alt=\"Laptop\"\n                            height=\"90\"\n                            width=\"115\"\n                          />\n                        </div>\n\n                        <div className=\"col-5 col-lg-3\">\n                          <Link to={`/products/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </div>\n\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                          <p id=\"card_item_price\">Rs. {item.price}</p>\n                        </div>\n\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                          <div className=\"stockCounter d-inline\">\n                            <span\n                              className=\"btn btn-danger minus\"\n                              onClick={() =>\n                                decreaseQty(item.product, item.quantity)\n                              }\n                            >\n                              -\n                            </span>\n\n                            <input\n                              type=\"number\"\n                              className=\"form-control count d-inline\"\n                              value={item.quantity}\n                              readOnly\n                            />\n\n                            <span\n                              className=\"btn btn-primary plus\"\n                              onClick={() =>\n                                increaseQty(\n                                  item.product,\n                                  item.quantity,\n                                  item.stock\n                                )\n                              }\n                            >\n                              +\n                            </span>\n                          </div>\n                        </div>\n\n                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                          <i\n                            id=\"delete_cart_item\"\n                            className=\"fa fa-trash btn btn-danger\"\n                            onClick={() => removeCartItemHandler(item.product)}\n                          ></i>\n                        </div>\n                      </div>\n                    </div>\n                    <hr />\n                  </Fragment>\n                ))}\n              </div>\n\n              <div className=\"col-12 col-lg-3 my-4\">\n                <div id=\"order_summary\">\n                  <h4>Your Cart</h4>\n                  <hr />\n                  <p>\n                    Subtotal:{' '}\n                    <span className=\"order-summary-values\">\n                      {cartItems.reduce(\n                        (acc, item) => acc + Number(item.quantity),\n                        0\n                      )}{' '}\n                      (Units)\n                    </span>\n                  </p>\n\n                  <p>\n                    Est. total:{' '}\n                    <span className=\"order-summary-values\">\n                      Rs.{' '}\n                      {cartItems\n                        .reduce(\n                          (acc, item) => acc + item.quantity * item.price,\n                          0\n                        )\n                        .toFixed(2)}\n                    </span>\n                  </p>\n\n                  <hr />\n                  <button\n                    id=\"checkout_btn\"\n                    className=\"btn btn-primary btn-block\"\n                    onClick={checkoutHandler}\n                  >\n                    Check out\n                  </button>\n                </div>\n              </div>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Cart;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateUser.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UsersList.js",["571"],"import { MDBDataTable } from 'mdbreact';\nimport { Fragment, useEffect } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { allUsers, clearErrors, deleteUser } from '../../actions/userActions';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\n\nconst UsersList = ({ history }) => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, users } = useSelector((state) => state.allUsers);\n  const { user } = useSelector((state) => state.auth);\n  const { isDeleted } = useSelector((state) => state.user);\n  const Blocked = 'Blocked';\n  const Active = 'Active';\n\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('User deleted successfully');\n      history.push('/admin/users');\n      dispatch({ type: DELETE_USER_RESET });\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n\n  const deleteUserHandler = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Avatar',\n          field: 'image',\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc',\n        },\n        {\n          label: 'Email',\n          field: 'email',\n          sort: 'asc',\n        },\n        {\n          label: 'Role',\n          field: 'role',\n          sort: 'asc',\n        },\n        {\n          label: 'Status',\n          field: 'status',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    users.forEach((user) => {\n      data.rows.push({\n        image: (\n          <>\n            <img\n              src={user.avatar.url}\n              alt={user.name}\n              className=\"avatar2\"\n            ></img>\n          </>\n        ),\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        status: (\n          <>\n            {user.status ? (\n              <p className=\"text-success\">{Active}</p>\n            ) : (\n              <p className=\"text-danger\">{Blocked}</p>\n            )}\n          </>\n        ),\n\n        actions: (\n          <Fragment>\n            {user && user.role !== 'admin' ? (\n              <>\n                <Link\n                  to={`/admin/user/${user._id}`}\n                  className=\"btn btn-primary py-1 px-2\"\n                >\n                  <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button\n                  className=\"btn btn-danger py-1 px-2 ml-2\"\n                  onClick={() => deleteUserHandler(user._id)}\n                >\n                  <i className=\"fa fa-trash\"></i>\n                </button>\n              </>\n            ) : null}\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Users'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <h3 className=\"m-3\">All Users</h3>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <MDBDataTable\n                data={setUsers()}\n                className=\"px-3\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"50\"\n                bordered\n                striped\n                hover\n              />\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UsersList;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Shipping.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\OrderDetails.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BlogPage.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BookNow.js",[],["572","573"],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ContactUs.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\FAQ.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Products.js",["574","575","576","577","578","579"],"import Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../../actions/productActions';\r\nimport '../css/product.css';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport Product from '../product/Product';\r\nimport ProductsBanner from '../Sections/ProductsBanner';\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst Products = ({ match }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 50000]);\r\n  const [range, setRange] = useState(1, 50000);\r\n  const [category, setCategory] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [status, setstatus] = useState('published');\r\n  const categories = [\r\n    'Cricket Clothing',\r\n    'Batting Equipment',\r\n    'Wicket Set',\r\n    'Wicket Keeping Equipment',\r\n    'Cricket Bats',\r\n    'Cricket Balls',\r\n    'Cricket Footwear',\r\n    'Halmets',\r\n    'Sport Shoes',\r\n    'Cricket Bowling Machines',\r\n  ];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n    // console.log(price);\r\n    dispatch(\r\n      getProducts(keyword, currentPage, price, category, rating, status)\r\n    );\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    keyword,\r\n    currentPage,\r\n    range,\r\n    category,\r\n    rating,\r\n    status,\r\n  ]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  let count = filteredProductsCount;\r\n  if (keyword) {\r\n    count = filteredProductsCount;\r\n  }\r\n  function filterHandler() {\r\n    setRange(price);\r\n  }\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <ProductsBanner />\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={'Products'} />\r\n            <div className=\"row\">\r\n              <div className=\"col-2 compare2 ml-5\">\r\n                <select\r\n                  className=\"form-control \"\r\n                  id=\"category_field\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                >\r\n                  <option value=\"default\" className=\"text-danger firstOption\">\r\n                    Select Brand\r\n                  </option>\r\n                  {categories.map((value, id) => (\r\n                    <>\r\n                      <option key={id} value={value._id}>\r\n                        {value}\r\n                      </option>\r\n                    </>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {category ? (\r\n                <h3\r\n                  id=\"products_heading\"\r\n                  className=\"col-8 text-center mb-4 text-uppercase\"\r\n                >\r\n                  {category}\r\n                </h3>\r\n              ) : (\r\n                <h3\r\n                  id=\"products_heading\"\r\n                  className=\"col-8 text-center mb-4 text-uppercase\"\r\n                >\r\n                  Latest Products\r\n                </h3>\r\n              )}\r\n            </div>\r\n            <section id=\"products\" className=\"container my-5\">\r\n              <div className=\"row\" data-aos=\"fade-up\" data-aos-delay=\"50\">\r\n                {products && products.length > 0 ? (\r\n                  <>\r\n                    {products.map((product) => (\r\n                      <Product key={product._id} product={product} />\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <div className=\"container my-5 text-center\">\r\n                    <div className=\"notFound\">\r\n                      <h5>No Product Found</h5>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </section>\r\n\r\n            {resPerPage <= count && (\r\n              <div className=\"d-flex justify-content-center mt-5\">\r\n                <Pagination\r\n                  activePage={currentPage}\r\n                  itemsCountPerPage={resPerPage}\r\n                  totalItemsCount={productsCount}\r\n                  onChange={setCurrentPageNo}\r\n                  nextPageText={'Next'}\r\n                  prevPageText={'Prev'}\r\n                  firstPageText={'First'}\r\n                  lastPageText={'Last'}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                />\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\SearchedProducts.js",["580","581","582"],"import Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../../actions/productActions';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport Product from '../product/Product';\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst SearchedProducts = ({ match }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 50000]);\r\n  const [range, setRange] = useState(1, 50000);\r\n  const [category, setCategory] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [status, setstatus] = useState('published');\r\n  const categories = [\r\n    'Cricket Clothing',\r\n    'Batting Equipment',\r\n    'Wicket Set',\r\n    'Wicket Keeping Equipment',\r\n    'Cricket Bats',\r\n    'Cricket Balls',\r\n    'Cricket Footwear',\r\n    'Halmets',\r\n    'Sport Shoes',\r\n    'Cricket Bowling Machines',\r\n  ];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n    // console.log(price);\r\n    dispatch(\r\n      getProducts(keyword, currentPage, price, category, rating, status)\r\n    );\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    keyword,\r\n    currentPage,\r\n    range,\r\n    category,\r\n    rating,\r\n    status,\r\n  ]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  let count = filteredProductsCount;\r\n  if (keyword) {\r\n    count = filteredProductsCount;\r\n  }\r\n  function filterHandler() {\r\n    setRange(price);\r\n  }\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={'Products'} />\r\n\r\n            <section id=\"products\" className=\"container my-5\">\r\n              <h3 id=\"products_heading\" className=\"text-center mb-4\">\r\n                Latest Products\r\n              </h3>\r\n\r\n              <div className=\"row\">\r\n                {keyword ? (\r\n                  <Fragment>\r\n                    <div className=\"col-6 col-md-3 px-3\">\r\n                      <div>\r\n                        <div className=\"pr-5\">\r\n                          <Range\r\n                            min={1}\r\n                            max={50000}\r\n                            defaultValue={[1, 50000]}\r\n                            tipFormatter={(value) => `Rs.${value}`}\r\n                            tipProps={{\r\n                              placement: 'top',\r\n                              visible: true,\r\n                            }}\r\n                            value={price}\r\n                            onChange={(price) => setPrice(price)}\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"Filter order-button px-5 mt-5\"\r\n                          onClick={filterHandler}\r\n                        >\r\n                          Filter\r\n                        </button>\r\n\r\n                        <hr className=\"my-5\" />\r\n\r\n                        <div className=\"my-5\">\r\n                          <h4 className=\"mb-3\">Brand</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {categories &&\r\n                              categories.map((category) => (\r\n                                <li\r\n                                  style={{\r\n                                    cursor: 'pointer',\r\n                                    listStyleType: 'none',\r\n                                  }}\r\n                                  key={category}\r\n                                  onClick={() => setCategory(category)}\r\n                                >\r\n                                  {category}\r\n                                </li>\r\n                              ))}\r\n                          </ul>\r\n                        </div>\r\n\r\n                        <hr className=\"my-3\" />\r\n                        <div className=\"mt-5\">\r\n                          <h4 className=\"mb-3\">Ratings</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                              <li\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  listStyleType: 'none',\r\n                                }}\r\n                                key={star}\r\n                                onClick={() => setRating(star)}\r\n                              >\r\n                                <div className=\"rating-outer\">\r\n                                  <div\r\n                                    className=\"rating-inner\"\r\n                                    style={{\r\n                                      width: `${star * 20}%`,\r\n                                    }}\r\n                                  ></div>\r\n                                </div>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {products.length != 0 ? (\r\n                      <div className=\"col-6 col-md-9\">\r\n                        <div className=\"row\">\r\n                          {products.map((product) => (\r\n                            <Product\r\n                              key={product._id}\r\n                              product={product}\r\n                              col={4}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"col-9 my-5 text-center\">\r\n                        <div className=\"notFound text-center\">\r\n                          <h5 className=\"text-center\">No Product Found</h5>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Fragment>\r\n                ) : (\r\n                  products.map((product) => (\r\n                    <Product key={product._id} product={product} />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </section>\r\n\r\n            {resPerPage <= count && (\r\n              <div className=\"d-flex justify-content-center mt-5\">\r\n                <Pagination\r\n                  activePage={currentPage}\r\n                  itemsCountPerPage={resPerPage}\r\n                  totalItemsCount={productsCount}\r\n                  onChange={setCurrentPageNo}\r\n                  nextPageText={'Next'}\r\n                  prevPageText={'Prev'}\r\n                  firstPageText={'First'}\r\n                  lastPageText={'Last'}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                />\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchedProducts;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Header.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentSchedule.js",["583","584","585"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  adminDeleteSchdules,\r\n  clearErrors,\r\n  getSingleTournamentSchdules,\r\n} from '../../../actions/scheduleAction';\r\nimport { DELETE_SCHEDULE_RESET } from '../../../constants/scheduleConstant';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nconst TournamentSchedule = ({ match, history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, schedules } = useSelector((state) => state.Schedules);\r\n  console.log('schedule');\r\n  console.log(schedules);\r\n\r\n  const { error: deleteError, isDeleted } = useSelector(\r\n    (state) => state.Schedule\r\n  );\r\n  const tournamentId = match.params.id;\r\n  useEffect(() => {\r\n    if (schedules) dispatch(getSingleTournamentSchdules(tournamentId));\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success('Product deleted successfully');\r\n      history.push(`/view/schedule/${tournamentId}`);\r\n      dispatch({ type: DELETE_SCHEDULE_RESET });\r\n    }\r\n  }, [dispatch, alert, error, history]);\r\n\r\n  const deletescheduleHandler = (id) => {\r\n    dispatch(adminDeleteSchdules(id));\r\n  };\r\n\r\n  const setschedules = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'TeamA',\r\n          field: 'teamA',\r\n        },\r\n        {\r\n          label: 'VS',\r\n          field: 'vs',\r\n        },\r\n        {\r\n          label: 'TeamB',\r\n          field: 'teamB',\r\n        },\r\n\r\n        {\r\n          label: 'Date & Time',\r\n          field: 'date',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Location',\r\n          field: 'location',\r\n          sort: 'asc',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    schedules.forEach((schedule) => {\r\n      data.rows.push({\r\n        teamA: schedule.team_A_id.name,\r\n        vs: <p>VS</p>,\r\n        teamB: schedule.team_B_id.name,\r\n        date: new Date(schedule.MatchDateTime).toLocaleString(),\r\n        location: (\r\n          <>\r\n            <a\r\n              href={schedule.locationLink}\r\n              target=\"_blank\"\r\n              className=\"text-primary\"\r\n            >\r\n              {schedule.locationName}\r\n              <i className=\"fa fa-location-arrow mx-1 text-primary\"></i>\r\n            </a>\r\n          </>\r\n        ),\r\n\r\n        actions: (\r\n          <Fragment>\r\n            {/* <Link\r\n              to={`/update/schedule/${schedule._id}`}\r\n              className=\"btn btn-primary py-1 px-2 ml-2\"\r\n            >\r\n              <i className=\"fa fa-pencil\"></i>\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-danger py-1 px-2 ml-2\"\r\n              onClick={() => deletescheduleHandler(schedule._id)}\r\n            >\r\n              <i className=\"fa fa-trash\"></i>\r\n            </button> */}\r\n          </Fragment>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'schedule-List'} />\r\n      <div className=\"row mx-auto container\">\r\n        <div className=\"col-12 col-md-12\">\r\n          <Fragment>\r\n            <div className=\"d-flex  mx-3\">\r\n              <h3 className=\"my-5\">Team Schedule</h3>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={setschedules()}\r\n                className=\"px-3\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TournamentSchedule;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentTeams.js",["586","587"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  adminDeleteTeams,\r\n  clearErrors,\r\n  getSingleTournamentTeams,\r\n} from '../../../actions/TeamAction';\r\nimport { getTournamentDetails } from '../../../actions/tournamentActions';\r\nimport { DELETE_TEAM_RESET } from '../../../constants/teamsConstant';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nconst TournamentTeams = ({ match, history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const [noTeams, setNoTeams] = useState(0);\r\n\r\n  const { loading, error, Teams } = useSelector((state) => state.Teams);\r\n  const { error: errorDetail, tournament } = useSelector(\r\n    (state) => state.TournamentDetail\r\n  );\r\n\r\n  const { error: deleteError, isDeleted } = useSelector((state) => state.Team);\r\n  const tournamentId = match.params.id;\r\n  useEffect(() => {\r\n    if (tournament && tournament._id !== tournamentId) {\r\n      dispatch(getTournamentDetails(tournamentId));\r\n    } else {\r\n      setNoTeams(tournament.noTeams);\r\n    }\r\n    dispatch(getSingleTournamentTeams(tournamentId));\r\n    if (error) {\r\n      //alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (errorDetail) {\r\n      //alert.error(errorDetail);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isDeleted) {\r\n      alert.success('Product deleted successfully');\r\n      history.push(`/view/team/${tournamentId}`);\r\n      dispatch({ type: DELETE_TEAM_RESET });\r\n    }\r\n  }, [dispatch, alert, error, deleteError, isDeleted, history, noTeams]);\r\n\r\n  const deleteteamHandler = (id) => {\r\n    dispatch(adminDeleteTeams(id));\r\n  };\r\n\r\n  const setTeams = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Image',\r\n          field: 'image',\r\n        },\r\n\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n          sort: 'asc',\r\n        },\r\n\r\n        {\r\n          label: 'Owner',\r\n          field: 'owner',\r\n        },\r\n        {\r\n          label: 'Loss',\r\n          field: 'loss',\r\n        },\r\n        {\r\n          label: 'Wins',\r\n          field: 'wins',\r\n        },\r\n        {\r\n          label: 'Points',\r\n          field: 'points',\r\n          sort: 'asc',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    Teams.forEach((team) => {\r\n      data.rows.push({\r\n        image: (\r\n          <>\r\n            <img\r\n              src={team.image.url}\r\n              alt={team.name}\r\n              className=\"img-thumbnail\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n            ></img>\r\n          </>\r\n        ),\r\n\r\n        name: team.name,\r\n        loss: team.lossMatch,\r\n        wins: team.winMatch,\r\n        points: team.winMatch - team.lossMatch,\r\n        owner: team.ownerName,\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Team-List'} />\r\n      <div className=\"container row mx-auto\">\r\n        <div className=\"col-12 col-md-12\">\r\n          <Fragment>\r\n            <div className=\"d-flex  mx-3\">\r\n              <h3 className=\"my-5\">All Teams</h3>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={setTeams()}\r\n                className=\"px-3\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TournamentTeams;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentTeamSquad.js",["588","589","590","591"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteData, getData, patchData } from '../../../routes/FetchData';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nconst TournamentTeamSquad = ({ match }) => {\r\n  const alert = useAlert();\r\n\r\n  const [SquadData, setSquadData] = useState([]);\r\n  const { loading, error, users } = useSelector((state) => state.allUsers);\r\n\r\n  const teamId = match.params.id;\r\n  const getAllData = () => {\r\n    getData(`/api/v1/get/all/team/squad/${teamId}`)\r\n      .then((res) => {\r\n        // console.log(`data is ${res}`);\r\n        // console.log(res.data.SquadDatas);\r\n        setSquadData((r) => (r = res.data.join));\r\n      })\r\n      .catch((err) => console.log(err.response.data.msg));\r\n  };\r\n  useEffect(() => {\r\n    getAllData();\r\n  }, []);\r\n\r\n  const deleteUserHandler = (id) => {\r\n    deleteData(`/api/v1/admin/team/squad/${id}`)\r\n      .then((res) => {\r\n        getAllData();\r\n        alert.show('SquadData deleted successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        alert.show('somthing went wrong');\r\n      });\r\n  };\r\n  const requestHandler = (id) => {\r\n    patchData(`/api/v1/admin/team/squad/${id}`)\r\n      .then((res) => {\r\n        getAllData();\r\n        alert.show('Request Accepted Successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        alert.show('somthing went wrong');\r\n      });\r\n  };\r\n\r\n  const setUsers = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Image',\r\n          field: 'image',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Player Role',\r\n          field: 'playerRole',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Team Role',\r\n          field: 'teamRole',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Team Request',\r\n          field: 'request',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Actions',\r\n          field: 'actions',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    SquadData.forEach((user) => {\r\n      data.rows.push({\r\n        image: (\r\n          <>\r\n            <img\r\n              src={user.user.imageLink}\r\n              alt={user.user.name}\r\n              className=\"img-thumbnail\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n            ></img>\r\n          </>\r\n        ),\r\n        name: user.user.name,\r\n        playerRole: user.user.playerRole,\r\n        teamRole: user.teamRole,\r\n        request: user.teamStatus,\r\n\r\n        actions: (\r\n          <Fragment>\r\n            <button\r\n              className=\"btn btn-primary py-1 px-2 ml-2\"\r\n              onClick={() => deleteUserHandler(user._id)}\r\n            >\r\n              Detail\r\n              <i className=\"fa fa-eye ml-1\"></i>\r\n            </button>\r\n          </Fragment>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'SquadDatas'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-12\">\r\n          <Fragment>\r\n            <div className=\"d-flex mx-3\">\r\n              <h3 className=\"my-5\">Team Squad</h3>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={setUsers()}\r\n                className=\"px-3\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TournamentTeamSquad;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ChattForum.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCardDetail.js",["592","593","594"],"import { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getData, postData } from '../../../routes/FetchData';\nimport Loader from '../../layout/Loader';\nconst BlogCardDetail = (props) => {\n  // console.log(props);\n  const [name, setname] = useState('');\n  const [email, setemail] = useState('');\n  const [comment, setcomment] = useState('');\n  const [blogsData, setblogsData] = useState();\n  const [refresh, setrefresh] = useState(false);\n  var logDiscription;\n  if (blogsData) {\n    blogsData.map((val) => {\n      if (val._id === props.match.params.id) {\n        logDiscription = val.description.split(/#+/);\n        console.log(logDiscription);\n      }\n    });\n  }\n\n  useEffect(() => {\n    // setLoading(true);\n    getData(`/api/v1/blogs`)\n      .then((res) => {\n        // console.log(res.data.blog);\n        setblogsData((r) => (r = res.data.blog));\n        // setLoading(false);\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  }, [refresh]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('comment', comment);\n    formData.set('blogId', props.match.params.id);\n    postData('/api/v1/blog/review', formData)\n      .then((res) => {\n        setname('');\n        setemail('');\n        setcomment('');\n        setrefresh(!refresh);\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n  return (\n    <>\n      {blogsData ? (\n        <>\n          {blogsData.map((data) => {\n            return (\n              <>\n                {data._id === props.match.params.id ? (\n                  <section className=\"blog-details-area ptb-50\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                          <div className=\"blog-details-desc\">\n                            <div className=\"article-image\">\n                              {/* <img src={} alt=\"image\" /> */}\n                            </div>\n\n                            <div className=\"article-content\">\n                              <div className=\"details-content\">\n                                <span className=\"blog-image\">\n                                  <img\n                                    src={data.image.url}\n                                    alt={data.heading}\n                                    className=\"img-thumbnail\"\n                                  />\n                                </span>\n                                <h3 className=\"text-uppercase\">\n                                  <a href=\"/blog-details\">{data.heading}</a>\n                                </h3>\n                                <div className=\"post-meta\">\n                                  <a href=\"#\">Admin</a>{' '}\n                                  {new Date(data.createdAt).toDateString()}\n                                </div>\n\n                                <p className=\"text-justify\">\n                                  {logDiscription.map((val, id) => {\n                                    return (\n                                      <p className=\"text-justify\" key={id}>\n                                        {val}\n                                      </p>\n                                    );\n                                  })}\n                                </p>\n                              </div>\n                            </div>\n\n                            <div className=\"comments-area\">\n                              <h3 className=\"comments-title\">\n                                Comments ({data.numOfReviews})\n                              </h3>\n\n                              <ol className=\"comment-list\">\n                                <li className=\"comment\">\n                                  {data.reviews.map((val) => {\n                                    return (\n                                      <div className=\"comment-body bg-darken-1\">\n                                        <footer className=\"comment-meta\">\n                                          <div className=\"comment-author vcard\">\n                                            <img\n                                              src=\"https://www.w3schools.com/w3images/avatar2.png\"\n                                              alt=\"Avatar\"\n                                              class=\"avatar\"\n                                              width=\"50\"\n                                              className=\"rounded-circle mr-2\"\n                                            />\n                                            <b className=\"fn\">{val.name}</b>\n                                          </div>\n                                          <p className=\"fn\">\n                                            <b>Email : </b>\n                                            {val.email}\n                                          </p>\n                                          <div className=\"comment-metadata\">\n                                            <a href=\"#\">\n                                              <span>\n                                                <b>Date : </b>\n                                                {new Date(\n                                                  val.createdAt\n                                                ).toDateString()}\n                                              </span>\n                                            </a>\n                                          </div>\n                                        </footer>\n                                        <div className=\"comment-content\">\n                                          <p>\n                                            <b>Comment :</b> {val.comment}\n                                          </p>\n                                        </div>\n                                        <div className=\"reply\"></div>\n                                      </div>\n                                    );\n                                  })}\n                                </li>\n                              </ol>\n\n                              <div className=\"comment-respond\">\n                                <h3 className=\"comment-reply-title\">\n                                  Leave A Reply\n                                </h3>\n\n                                <form\n                                  className=\"comment-form\"\n                                  onSubmit={submitHandler}\n                                >\n                                  <p className=\"comment-notes\">\n                                    <span id=\"email-notes\">\n                                      Your email address will not be published.\n                                    </span>\n                                    Required fields are marked\n                                    <span className=\"required\">*</span>\n                                  </p>\n                                  <p className=\"comment-form-author\">\n                                    <label>Name</label>\n                                    <input\n                                      type=\"text\"\n                                      id=\"author\"\n                                      name=\"author\"\n                                      value={name}\n                                      onChange={(e) => setname(e.target.value)}\n                                      required=\"required\"\n                                    />\n                                  </p>\n                                  <p className=\"comment-form-email\">\n                                    <label>Email</label>\n                                    <input\n                                      type=\"email\"\n                                      id=\"email\"\n                                      name=\"email\"\n                                      value={email}\n                                      onChange={(e) => setemail(e.target.value)}\n                                      required=\"required\"\n                                    />\n                                  </p>\n\n                                  <p className=\"comment-form-comment\">\n                                    <label>Comment</label>\n                                    <textarea\n                                      name=\"comment\"\n                                      id=\"comment\"\n                                      cols=\"45\"\n                                      rows=\"5\"\n                                      maxlength=\"65525\"\n                                      required=\"required\"\n                                      value={comment}\n                                      onChange={(e) =>\n                                        setcomment(e.target.value)\n                                      }\n                                    ></textarea>\n                                  </p>\n\n                                  <p className=\"form-submit\">\n                                    <input\n                                      type=\"submit\"\n                                      name=\"submit\"\n                                      id=\"submit\"\n                                      className=\"submit\"\n                                      value=\"Post A Comment\"\n                                    />\n                                  </p>\n                                </form>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                ) : null}\n              </>\n            );\n          })}\n        </>\n      ) : (\n        <>\n          <Loader />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(BlogCardDetail);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\JoinTournament.js",["595"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { getData, postData } from '../../routes/FetchData';\r\nimport MetaData from '../layout/MetaData';\r\nimport Sidebar from './Sidebar';\r\nconst JoinTournament = ({ match }) => {\r\n  const alert = useAlert();\r\n  const [teamID, setTeamID] = useState('');\r\n  const [user, setUser] = useState('');\r\n  const [playerRole, setplayerRole] = useState('');\r\n\r\n  const tournamentId = match.params.id;\r\n\r\n  const getProfileData = () => {\r\n    getData('/api/v1/tournament/single/player/profile')\r\n      .then((res) => {\r\n        setUser(res.data.player._id);\r\n        // setId(res.data.player._id);\r\n      })\r\n      .catch((err) => {\r\n        alert.show(' First Register as a Player');\r\n      });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set('user', user);\r\n    formData.set('join_id', teamID);\r\n    formData.set('tournament_id', tournamentId);\r\n    formData.set('teamRole', playerRole);\r\n\r\n    // console.log(formData);\r\n    postData('/api/v1/join/tournament/team', formData)\r\n      .then((res) => {\r\n        setTeamID('');\r\n\r\n        alert.show('Your request has submitted successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.message);\r\n        alert.show(err.response.data.message);\r\n      });\r\n\r\n    // dispatch(updateProfile(formData));\r\n  };\r\n  useEffect(() => {\r\n    getProfileData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MetaData title={'Join Tournament'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"container py-5 col-12 col-md-10\">\r\n          <div className=\"container form-top\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                <h3 className=\"mb-4 text-center\">Join Tournament Team</h3>\r\n                <div className=\"panel panel-danger\">\r\n                  <div className=\"panel-body\">\r\n                    <form\r\n                      id=\"reused_form\"\r\n                      data-aos=\"fade-up\"\r\n                      data-aos-delay=\"50\"\r\n                      onSubmit={submitHandler}\r\n                    >\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                          Authentication Id\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"teamID\"\r\n                          id=\"teamID\"\r\n                          value={teamID}\r\n                          onChange={(e) => setTeamID(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Please Enter your team Id\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Team\r\n                          Role\r\n                        </label>\r\n                        <select\r\n                          id=\"playerRole\"\r\n                          name=\"playerRole\"\r\n                          value={playerRole}\r\n                          onChange={(e) => setplayerRole(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"NA\">NA</option>\r\n                          <option value=\"Captan\">Captan</option>\r\n                          <option value=\"Wicket Keeper\">Wicket Keeper</option>\r\n                          <option value=\"Bowler\">Bowler</option>\r\n                          <option value=\"Batsman\">Batsman</option>\r\n                          <option value=\"All Rounder\">All Rounder</option>\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          className=\"btn btn-raised btn-block btn-danger\"\r\n                          type=\"submit\"\r\n                          id=\"post\"\r\n                        >\r\n                          Join Team\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinTournament;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\AddSchedule.js",["596","597"],"import { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearErrors, newSchdules } from '../../../actions/scheduleAction';\r\nimport { getSingleTournamentTeams } from '../../../actions/TeamAction';\r\nimport { NEW_SCHEDULE_RESET } from '../../../constants/scheduleConstant';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst AddSchedule = ({ match, history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const [teamA, setTeamA] = useState('');\r\n  const [matchType, setMatchType] = useState('simple');\r\n  const [teamB, setTeamB] = useState('');\r\n  const [locationName, setLocationName] = useState('');\r\n\r\n  const [date, setDate] = useState();\r\n  const [locationLink, setLocationLink] = useState('');\r\n\r\n  const {\r\n    loading,\r\n    error: schedualError,\r\n    Teams,\r\n  } = useSelector((state) => state.Teams);\r\n  const { error, success } = useSelector((state) => state.newSchedule);\r\n\r\n  const tournamentId = match.params.id;\r\n  useEffect(() => {\r\n    dispatch(getSingleTournamentTeams(tournamentId));\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (schedualError) {\r\n      alert.error(schedualError);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (success) {\r\n      history.push(`/create/tournament/schedule/${tournamentId}`);\r\n      alert.success('Schedule created successfully');\r\n      dispatch({ type: NEW_SCHEDULE_RESET });\r\n    }\r\n  }, [dispatch, alert, error, history, success]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      teamA === '' ||\r\n      teamB === '' ||\r\n      locationName === '' ||\r\n      locationLink === '' ||\r\n      date === ''\r\n    )\r\n      alert.error('Please Fill out all the Fields');\r\n    else {\r\n      const formData = new FormData();\r\n      formData.set('team_A_id', teamA);\r\n      formData.set('team_B_id', teamB);\r\n      formData.set('matchType', matchType);\r\n      formData.set('locationName', locationName);\r\n      formData.set('locationLink', locationLink);\r\n      formData.set('tournament_id', tournamentId);\r\n      formData.set('MatchDateTime', date);\r\n      console.log(formData);\r\n      dispatch(newSchdules(formData));\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Team-List'} />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"row m-0\">\r\n          <div className=\"col-12 col-md-2 m-0 p-0\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"container py-5 col-12 col-md-10\">\r\n            <div className=\"container form-top\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                  <h3 className=\"mb-4 text-center\">Create Schedule</h3>\r\n\r\n                  <div className=\"panel panel-danger\">\r\n                    <div className=\"panel-body\">\r\n                      <form\r\n                        id=\"reused_form\"\r\n                        data-aos=\"fade-up\"\r\n                        data-aos-delay=\"50\"\r\n                        onSubmit={submitHandler}\r\n                      >\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"team_field\">Slect Team-A</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"team_field\"\r\n                            value={teamA}\r\n                            onChange={(e) => {\r\n                              setTeamA(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value=\"select\">Select</option>\r\n                            {Teams &&\r\n                              Teams.map((team) => (\r\n                                <option key={team._id} value={team.name}>\r\n                                  {team.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"team_field\">Slect Team-B</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"team_field\"\r\n                            value={teamB}\r\n                            onChange={(e) => {\r\n                              setTeamB(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value=\"select\">Select</option>\r\n                            {Teams &&\r\n                              Teams.map((team) => (\r\n                                <option key={team._id} value={team.name}>\r\n                                  {team.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                            Location Name\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={locationName}\r\n                            onChange={(e) => setLocationName(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Location Name\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                            Location Link\r\n                            <i\r\n                              className=\"fa fa-location-arrow ml-3 mr-1 text-primary\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                            <a\r\n                              target=\"_blank\"\r\n                              className=\"text-primary\"\r\n                              href=\"https://www.google.com/maps/place/Pakistan/@30.0681241,60.3233711,5z/data=!3m1!4b1!4m5!3m4!1s0x38db52d2f8fd751f:0x46b7a1f7e614925c!8m2!3d30.375321!4d69.345116\"\r\n                            >\r\n                              Google map\r\n                            </a>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={locationLink}\r\n                            onChange={(e) => setLocationLink(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Share your Location from google map\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            <i className=\"fa fa-clock\" aria-hidden=\"true\"></i>{' '}\r\n                            Date\r\n                          </label>\r\n                          <input\r\n                            type=\"datetime-local\"\r\n                            name=\"date\"\r\n                            id=\"date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Date\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"match_type\">Match Type</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"match_type\"\r\n                            value={matchType}\r\n                            onChange={(e) => {\r\n                              setMatchType(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value=\"simple\">simple</option>\r\n                            <option value=\"quarter-final\">Quarter Final</option>\r\n                            <option value=\"semi-final\">Semi Final</option>\r\n                            <option value=\"final\">Final</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <button\r\n                            className=\"btn btn-raised btn-block btn-success\"\r\n                            type=\"submit\"\r\n                            id=\"post\"\r\n                          >\r\n                            Create Schedule\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddSchedule;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\LivePage.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Dashboard.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\AllTournaments.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\CreateTeams.js",["598","599","600"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearErrors, newTeams } from '../../../actions/TeamAction';\r\nimport { NEW_TEAM_RESET } from '../../../constants/teamsConstant';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst CreateTeams = ({ match, history }) => {\r\n  const alert = useAlert();\r\n  const [name, setName] = useState('');\r\n  const [tournament_id, setTournament_id] = useState(0);\r\n  const [ownerName, setOwnerName] = useState('');\r\n\r\n  const [image, setimage] = useState('');\r\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, error, success } = useSelector((state) => state.newTeam);\r\n\r\n  const formData = new FormData();\r\n  const teamId = match.params.id;\r\n  const PostData = () => {\r\n    dispatch(newTeams(formData));\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    formData.set('name', name);\r\n    formData.set('tournament_id', tournament_id);\r\n    formData.set('ownerName', ownerName);\r\n\r\n    formData.set('image', image);\r\n    formData.set('tournament_id', teamId);\r\n\r\n    PostData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      history.push(`/view/team/${teamId}`);\r\n      alert.success('Team created successfully');\r\n      dispatch({ type: NEW_TEAM_RESET });\r\n    }\r\n  }, [dispatch, alert, error, success, history]);\r\n  const onChange = (e) => {\r\n    if (e.target.name === 'image') {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setimagePreview(reader.result);\r\n          setimage(reader.result);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <MetaData title={'FAQs'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"container py-5 col-12 col-md-10\">\r\n          <div className=\"container form-top\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                <h3 className=\"mb-4 text-center\">Create New Team</h3>\r\n                <div className=\"panel panel-danger\">\r\n                  <div className=\"panel-body\">\r\n                    <form\r\n                      id=\"reused_form\"\r\n                      data-aos=\"fade-up\"\r\n                      data-aos-delay=\"50\"\r\n                      onSubmit={submitHandler}\r\n                    >\r\n                      <div className=\"form-group \">\r\n                        <div className=\" align-items-center\">\r\n                          <div>\r\n                            <figure className=\"avatar mb-4 \">\r\n                              <img\r\n                                src={imagePreview}\r\n                                className=\"mt-3 mr-2 rounded-circle\"\r\n                                alt=\"Avatar Preview\"\r\n                              />\r\n                            </figure>\r\n                          </div>\r\n                          <div className=\"custom-file\">\r\n                            <input\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              className=\"custom-file-input\"\r\n                              id=\"customFile\"\r\n                              accept=\"image/*\"\r\n                              onChange={onChange}\r\n                            />\r\n                            <label\r\n                              className=\"custom-file-label \"\r\n                              htmlFor=\"customFile\"\r\n                            >\r\n                              Choose image\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Team\r\n                          Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter Name\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                          Owner Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"ownerName\"\r\n                          id=\"ownerName\"\r\n                          value={ownerName}\r\n                          onChange={(e) => setOwnerName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Name\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          className=\"btn btn-raised btn-block btn-success\"\r\n                          type=\"submit\"\r\n                          id=\"post\"\r\n                        >\r\n                          Create Team\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTeams;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\CreateTournament.js",["601"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  clearErrors,\r\n  newTournaments,\r\n} from '../../../actions/tournamentActions';\r\nimport { NEW_TOURNAMENT_RESET } from '../../../constants/tournamentConstants';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst CreateTournament = ({ history }) => {\r\n  const alert = useAlert();\r\n  const [name, setName] = useState('');\r\n  const [noTeams, setnoTeams] = useState(0);\r\n  const [date, setDate] = useState('');\r\n  const [endDate, setendDate] = useState('');\r\n  const [image, setimage] = useState('');\r\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, error, success } = useSelector(\r\n    (state) => state.newTournament\r\n  );\r\n\r\n  const formData = new FormData();\r\n  const PostData = () => {\r\n    dispatch(newTournaments(formData));\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    formData.set('name', name);\r\n    formData.set('noTeams', noTeams);\r\n    formData.set('startingDate', date);\r\n    formData.set('endingDate', endDate);\r\n    formData.set('image', image);\r\n\r\n    PostData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      history.push('/my/alltournaments');\r\n      alert.success('Tournament created successfully');\r\n      dispatch({ type: NEW_TOURNAMENT_RESET });\r\n    }\r\n  }, [dispatch, alert, error, success, history]);\r\n  const onChange = (e) => {\r\n    if (e.target.name === 'image') {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setimagePreview(reader.result);\r\n          setimage(reader.result);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <MetaData title={'Create-Tournament'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"container py-5 col-12 col-md-10\">\r\n          <div className=\"container form-top\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                <h3 className=\"mb-4 text-center\">Create New Tournament</h3>\r\n                <div className=\"panel panel-danger\">\r\n                  <div className=\"panel-body\">\r\n                    <form\r\n                      id=\"reused_form\"\r\n                      data-aos=\"fade-up\"\r\n                      data-aos-delay=\"50\"\r\n                      onSubmit={submitHandler}\r\n                    >\r\n                      <div className=\"form-group \">\r\n                        <div className=\" align-items-center\">\r\n                          <div>\r\n                            <figure className=\"avatar mb-4 \">\r\n                              <img\r\n                                src={imagePreview}\r\n                                className=\"mt-3 mr-2 rounded-circle\"\r\n                                alt=\"Avatar Preview\"\r\n                              />\r\n                            </figure>\r\n                          </div>\r\n                          <div className=\"custom-file\">\r\n                            <input\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              className=\"custom-file-input\"\r\n                              id=\"customFile\"\r\n                              accept=\"image/*\"\r\n                              onChange={onChange}\r\n                            />\r\n                            <label\r\n                              className=\"custom-file-label \"\r\n                              htmlFor=\"customFile\"\r\n                            >\r\n                              Choose image\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter Name\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-users\" aria-hidden=\"true\"></i> No\r\n                          of Teams\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"noTeams\"\r\n                          id=\"noTeams\"\r\n                          value={noTeams}\r\n                          onChange={(e) => setnoTeams(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter noTeams\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-clock\" aria-hidden=\"true\"></i>{' '}\r\n                          Starting Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"date\"\r\n                          id=\"date\"\r\n                          value={date}\r\n                          onChange={(e) => setDate(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Date\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-clock\" aria-hidden=\"true\"></i>{' '}\r\n                          Ending Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"date\"\r\n                          id=\"date\"\r\n                          value={endDate}\r\n                          onChange={(e) => setendDate(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Ending Date\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          className=\"btn btn-raised btn-block btn-success\"\r\n                          type=\"submit\"\r\n                          id=\"post\"\r\n                        >\r\n                          Create Tournament\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTournament;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\JoinTournamentTeam.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\PlayersList.js",["602","603","604"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  adminDeletePlayers,\r\n  clearErrors,\r\n  getPlayers,\r\n} from '../../../actions/playerActions';\r\nimport { DELETE_PLAYER_RESET } from '../../../constants/playersConstants';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst PlayersList = ({ history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const { loading, error, Players } = useSelector((state) => state.Players);\r\n\r\n  const { error: deleteError, isDeleted } = useSelector(\r\n    (state) => state.Player\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getPlayers());\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success('Player deleted successfully');\r\n      history.push('/tournament/players/profile');\r\n      dispatch({ type: DELETE_PLAYER_RESET });\r\n    }\r\n  }, [dispatch, alert, error, isDeleted, history]);\r\n\r\n  const deletePlayerHandler = (id) => {\r\n    dispatch(adminDeletePlayers(id));\r\n  };\r\n\r\n  const settournaments = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Image',\r\n          field: 'image',\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'DOB',\r\n          field: 'dob',\r\n          sort: 'asc',\r\n        },\r\n\r\n        {\r\n          label: 'Actions',\r\n          field: 'actions',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    Players.forEach((player) => {\r\n      data.rows.push({\r\n        image: (\r\n          <>\r\n            <img\r\n              src={player.user_id.avatar.url}\r\n              alt={player.name}\r\n              className=\"img-thumbnail\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n            ></img>\r\n          </>\r\n        ),\r\n        email: player.user_id.email,\r\n        name: player.name,\r\n        dob: new Date(player.DOB).toDateString(),\r\n\r\n        actions: (\r\n          <Fragment>\r\n            <Link\r\n              to={`/admin/tournaments/${player._id}`}\r\n              className=\"btn btn-primary py-1 px-2\"\r\n            >\r\n              <i className=\"fa fa-eye\"></i>\r\n            </Link>\r\n          </Fragment>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Players-List'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <div className=\"d-flex  mx-3\">\r\n              <h3 className=\"my-5\">Players</h3>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={settournaments()}\r\n                className=\"px-3\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayersList;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\StartMatch.js",["605","606"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getData } from '../../../routes/FetchData';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nimport Ining from './StartIning/Ining';\r\nimport MatchToss from './Toss/MatchToss';\r\nconst StartMatch = ({ match, history }) => {\r\n  const alert = useAlert();\r\n\r\n  const [toss, setToss] = useState(false);\r\n  const [matchData, setMatchData] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const scheduleId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    getData(`/api/v1/get/all/tournament/match/single/inings/${scheduleId}`)\r\n      .then((res) => {\r\n        setMatchData(res.data.ining);\r\n      })\r\n      .catch((err) => {\r\n        setToss(!toss);\r\n      });\r\n  }, [dispatch, alert, , history]);\r\n\r\n  return (\r\n    <div>\r\n      <MetaData title={'FAQs'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-12 col-md-10\">\r\n          <div>\r\n            {toss ? <MatchToss scheduleId={scheduleId}></MatchToss> : null}\r\n            {matchData ? (\r\n              <div className=\"\">\r\n                <Ining scheduleId={scheduleId} Ining={matchData} />\r\n              </div>\r\n            ) : (\r\n              !toss && <Loader />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartMatch;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\TeamSchedule.js",["607","608"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  adminDeleteSchdules,\r\n  clearErrors,\r\n  getSingleTournamentSchdules,\r\n} from '../../../actions/scheduleAction';\r\nimport { DELETE_SCHEDULE_RESET } from '../../../constants/scheduleConstant';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst TeamSchedule = ({ match, history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, schedules } = useSelector((state) => state.Schedules);\r\n  console.log('schedule');\r\n  console.log(schedules);\r\n\r\n  const { error: deleteError, isDeleted } = useSelector(\r\n    (state) => state.Schedule\r\n  );\r\n  const tournamentId = match.params.id;\r\n  useEffect(() => {\r\n    if (schedules) dispatch(getSingleTournamentSchdules(tournamentId));\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success('Schedule deleted successfully');\r\n      history.push(`/create/tournament/schedule/${tournamentId}`);\r\n      dispatch({ type: DELETE_SCHEDULE_RESET });\r\n    }\r\n  }, [dispatch, alert, error, isDeleted, history]);\r\n\r\n  const deletescheduleHandler = (id) => {\r\n    dispatch(adminDeleteSchdules(id));\r\n  };\r\n\r\n  const setschedules = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'TeamA',\r\n          field: 'teamA',\r\n        },\r\n        {\r\n          label: 'VS',\r\n          field: 'vs',\r\n        },\r\n        {\r\n          label: 'TeamB',\r\n          field: 'teamB',\r\n        },\r\n\r\n        {\r\n          label: 'Date & Time',\r\n          field: 'date',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Location',\r\n          field: 'location',\r\n          sort: 'asc',\r\n        },\r\n\r\n        {\r\n          label: 'Actions',\r\n          field: 'actions',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    schedules.forEach((schedule) => {\r\n      data.rows.push({\r\n        teamA: schedule.team_A_id.name,\r\n        vs: <p>VS</p>,\r\n        teamB: schedule.team_B_id.name,\r\n        date: new Date(schedule.MatchDateTime).toLocaleString(),\r\n        location: (\r\n          <>\r\n            <a\r\n              href={schedule.locationLink}\r\n              target=\"_blank\"\r\n              className=\"text-primary\"\r\n            >\r\n              {schedule.locationName}\r\n              <i className=\"fa fa-location-arrow mx-1 text-primary\"></i>\r\n            </a>\r\n          </>\r\n        ),\r\n\r\n        actions: (\r\n          <Fragment>\r\n            {!schedule.MatchCompleted ? (\r\n              <Link\r\n                to={`/tournament/match/start/${schedule._id}`}\r\n                className=\"btn btn-primary py-1 px-2 ml-2\"\r\n              >\r\n                {schedule.toss ? <>Start Match</> : <>Toss</>}\r\n              </Link>\r\n            ) : (\r\n              <Link\r\n                to={`/tournament/match/start/${schedule._id}`}\r\n                className=\"btn btn-primary py-1 px-2 ml-2\"\r\n              >\r\n                Results\r\n              </Link>\r\n            )}\r\n\r\n            <Link\r\n              to={`/update/schedule/${schedule._id}`}\r\n              className=\"btn btn-primary py-1 px-2 ml-2\"\r\n            >\r\n              <i className=\"fa fa-pencil\"></i>\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-danger py-1 px-2 ml-2\"\r\n              onClick={() => deletescheduleHandler(schedule._id)}\r\n            >\r\n              <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n          </Fragment>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'schedule-List'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <div className=\"d-flex  mx-3\">\r\n              <h3 className=\"my-5\">All schedules</h3>\r\n            </div>\r\n            <div className=\"d-flex mx-3\">\r\n              <Link\r\n                to={`/add/tournament/schedules/${tournamentId}`}\r\n                className=\"btn order-button ml-auto my-auto px-4 \"\r\n              >\r\n                Create <i className=\"fa fa-plus\"></i>\r\n              </Link>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={setschedules()}\r\n                className=\"px-3\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeamSchedule;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\UpdateTeam.js",["609","610","611"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  clearErrors,\r\n  getTeamDetails,\r\n  updateTeams,\r\n} from '../../../actions/TeamAction';\r\nimport { UPDATE_TEAM_RESET } from '../../../constants/teamsConstant';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst UpdateTeam = ({ match, history }) => {\r\n  const alert = useAlert();\r\n\r\n  const [name, setName] = useState('');\r\n  const [tournament_id, setTournament_id] = useState(0);\r\n  const [ownerName, setOwnerName] = useState('');\r\n\r\n  const [image, setimage] = useState('');\r\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const { error, team } = useSelector((state) => state.TeamDetail);\r\n  const { error: updateError, isUpdated } = useSelector((state) => state.Team);\r\n  const teamId = match.params.id;\r\n  const formData = new FormData();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    formData.set('name', name);\r\n    formData.set('tournament_id', tournament_id);\r\n    formData.set('ownerName', ownerName);\r\n\r\n    formData.set('team_id', teamId);\r\n    if (image == '') {\r\n      formData.set('public_id', team.image.public_id);\r\n      formData.set('image', image);\r\n    } else formData.set('image', image);\r\n\r\n    UpdateData();\r\n  };\r\n  const UpdateData = () => {\r\n    dispatch(updateTeams(teamId, formData));\r\n  };\r\n  useEffect(() => {\r\n    if (team && team._id !== teamId) {\r\n      dispatch(getTeamDetails(teamId));\r\n    } else {\r\n      setName(team.name);\r\n      setOwnerName(team.ownerName);\r\n\r\n      setTournament_id(team.tournament_id);\r\n      setimagePreview(team.image.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      history.push(`/view/team/${tournament_id}`);\r\n      alert.success('team updated successfully');\r\n      dispatch({ type: UPDATE_TEAM_RESET });\r\n    }\r\n  }, [dispatch, alert, error, isUpdated, updateError, team, history]);\r\n  const onChange = (e) => {\r\n    if (e.target.name === 'image') {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setimagePreview(reader.result);\r\n          setimage(reader.result);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <MetaData title={'FAQs'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"container py-5 col-12 col-md-10\">\r\n          <div className=\"container form-top\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                <h3 className=\"mb-4 text-center\">Update Team</h3>\r\n                <div className=\"panel panel-danger\">\r\n                  <div className=\"panel-body\">\r\n                    <form\r\n                      id=\"reused_form\"\r\n                      data-aos=\"fade-up\"\r\n                      data-aos-delay=\"50\"\r\n                      onSubmit={submitHandler}\r\n                    >\r\n                      <div className=\"form-group \">\r\n                        <div className=\" align-items-center\">\r\n                          <div>\r\n                            <figure className=\"avatar mb-4 \">\r\n                              <img\r\n                                src={imagePreview}\r\n                                className=\"mt-3 mr-2 rounded-circle\"\r\n                                alt=\"Avatar Preview\"\r\n                              />\r\n                            </figure>\r\n                          </div>\r\n                          <div className=\"custom-file\">\r\n                            <input\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              className=\"custom-file-input\"\r\n                              id=\"customFile\"\r\n                              accept=\"image/*\"\r\n                              onChange={onChange}\r\n                            />\r\n                            <label\r\n                              className=\"custom-file-label \"\r\n                              htmlFor=\"customFile\"\r\n                            >\r\n                              Choose image\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Team\r\n                          Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter Name\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                          Owner Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"ownerName\"\r\n                          id=\"ownerName\"\r\n                          value={ownerName}\r\n                          onChange={(e) => setOwnerName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Name\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          className=\"btn btn-raised btn-block btn-danger\"\r\n                          type=\"submit\"\r\n                          id=\"post\"\r\n                        >\r\n                          Update\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTeam;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\TeamSquad.js",["612","613","614","615"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteData, getData, patchData } from '../../../routes/FetchData';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst TeamSquad = ({ match }) => {\r\n  const alert = useAlert();\r\n\r\n  const [SquadData, setSquadData] = useState([]);\r\n  const { loading, error, users } = useSelector((state) => state.allUsers);\r\n\r\n  const teamId = match.params.id;\r\n  const getAllData = () => {\r\n    getData(`/api/v1/get/all/team/squad/${teamId}`)\r\n      .then((res) => {\r\n        // console.log(`data is ${res}`);\r\n        // console.log(res.data.SquadDatas);\r\n        setSquadData((r) => (r = res.data.join));\r\n      })\r\n      .catch((err) => console.log(err.response.data.msg));\r\n  };\r\n  useEffect(() => {\r\n    getAllData();\r\n  }, []);\r\n\r\n  const deleteUserHandler = (id) => {\r\n    deleteData(`/api/v1/admin/team/squad/${id}`)\r\n      .then((res) => {\r\n        getAllData();\r\n        alert.show('SquadData deleted successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        alert.show('somthing went wrong');\r\n      });\r\n  };\r\n  const requestHandler = (id) => {\r\n    patchData(`/api/v1/admin/team/squad/${id}`)\r\n      .then((res) => {\r\n        getAllData();\r\n        alert.show('Request Accepted Successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        alert.show('somthing went wrong');\r\n      });\r\n  };\r\n\r\n  const setUsers = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Image',\r\n          field: 'image',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Player Role',\r\n          field: 'playerRole',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Team Role',\r\n          field: 'teamRole',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Team Request',\r\n          field: 'request',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Actions',\r\n          field: 'actions',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    SquadData.forEach((user) => {\r\n      data.rows.push({\r\n        image: (\r\n          <>\r\n            <img\r\n              src={user.user.imageLink}\r\n              alt={user.user.name}\r\n              className=\"img-thumbnail\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n            ></img>\r\n          </>\r\n        ),\r\n        name: user.user.name,\r\n        playerRole: user.user.playerRole,\r\n        teamRole: user.teamRole,\r\n        request: user.teamStatus,\r\n\r\n        actions: (\r\n          <Fragment>\r\n            {user.teamStatus == 'Accepted' ? (\r\n              <></>\r\n            ) : (\r\n              <button\r\n                onClick={() => requestHandler(user._id)}\r\n                className=\"btn btn-primary py-1 px-2\"\r\n              >\r\n                Accept\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"btn btn-danger py-1 px-2 ml-2\"\r\n              onClick={() => deleteUserHandler(user._id)}\r\n            >\r\n              <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n          </Fragment>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'SquadDatas'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <div className=\"d-flex mx-3\">\r\n              <h3 className=\"my-5\">Team Squad</h3>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={setUsers()}\r\n                className=\"px-3\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeamSquad;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\UpdateSchedule.js",["616","617","618","619","620"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  clearErrors,\r\n  getScheduleDetails,\r\n  UpdateSchedules,\r\n} from '../../../actions/scheduleAction';\r\nimport { getSingleTournamentTeams } from '../../../actions/TeamAction';\r\nimport { UPDATE_SCHEDULE_RESET } from '../../../constants/scheduleConstant';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst UpdateSchedule = ({ match, history }) => {\r\n  const alert = useAlert();\r\n\r\n  const [teamA, setTeamA] = useState('');\r\n\r\n  const [teamB, setTeamB] = useState('');\r\n  const [locationName, setLocationName] = useState('');\r\n  const [tournamentId, setTournamentId] = useState('');\r\n  const [date, setDate] = useState();\r\n  const [locationLink, setLocationLink] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { error, schedule } = useSelector((state) => state.ScheduleDetail);\r\n  console.log(schedule);\r\n  const {\r\n    loading,\r\n    error: schedualError,\r\n    Teams,\r\n  } = useSelector((state) => state.Teams);\r\n  const { error: updateError, isUpdated } = useSelector(\r\n    (state) => state.Schedule\r\n  );\r\n  const scheduleId = match.params.id;\r\n  const formData = new FormData();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      teamA === '' ||\r\n      teamB === '' ||\r\n      locationName === '' ||\r\n      locationLink === '' ||\r\n      date === ''\r\n    )\r\n      alert.error('Please Fill out all the Fields');\r\n    else {\r\n      const formData = new FormData();\r\n      formData.set('team_A_id', teamA);\r\n      formData.set('team_B_id', teamB);\r\n      formData.set('locationName', locationName);\r\n      formData.set('locationLink', locationLink);\r\n      formData.set('tournament_id', tournamentId);\r\n      formData.set('MatchDateTime', date);\r\n\r\n      dispatch(UpdateSchedules(scheduleId, formData));\r\n    }\r\n  };\r\n  const UpdateData = () => {\r\n    dispatch(UpdateSchedules(scheduleId, formData));\r\n  };\r\n  useEffect(() => {\r\n    if (schedule && schedule._id !== scheduleId) {\r\n      dispatch(getScheduleDetails(scheduleId));\r\n    } else {\r\n      setTeamA(schedule.team_A_id);\r\n      setTeamB(schedule.team_B_id);\r\n      setLocationName(schedule.locationName);\r\n      setLocationLink(schedule.locationLink);\r\n\r\n      setTournamentId(schedule.tournament_id);\r\n      dispatch(getSingleTournamentTeams(schedule.tournament_id));\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      history.push(`/create/tournament/schedule/${tournamentId}`);\r\n      alert.success('schedule updated successfully');\r\n      dispatch({ type: UPDATE_SCHEDULE_RESET });\r\n    }\r\n  }, [dispatch, alert, error, isUpdated, updateError, schedule, history]);\r\n\r\n  return (\r\n    <div>\r\n      <MetaData title={'FAQs'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"container py-5 col-12 col-md-10\">\r\n          <div className=\"container form-top\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                <h3 className=\"mb-4 text-center\">Update Team</h3>\r\n                <div className=\"panel panel-danger\">\r\n                  <div className=\"panel-body\">\r\n                    <form\r\n                      id=\"reused_form\"\r\n                      data-aos=\"fade-up\"\r\n                      data-aos-delay=\"50\"\r\n                      onSubmit={submitHandler}\r\n                    >\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"team_field\">Slect Team-A</label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          id=\"team_field\"\r\n                          value={teamA}\r\n                          onChange={(e) => {\r\n                            setTeamA(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"select\">Select</option>\r\n                          {Teams &&\r\n                            Teams.map((team) => (\r\n                              <option key={team._id} value={team.name}>\r\n                                {team.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"team_field\">Slect Team-B</label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          id=\"team_field\"\r\n                          value={teamB}\r\n                          onChange={(e) => {\r\n                            setTeamB(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"select\">Select</option>\r\n                          {Teams &&\r\n                            Teams.map((team) => (\r\n                              <option key={team._id} value={team.name}>\r\n                                {team.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                          Location Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={locationName}\r\n                          onChange={(e) => setLocationName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Location Name\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                          Location Link\r\n                          <i\r\n                            className=\"fa fa-location-arrow ml-3 mr-1 text-primary\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                          <a\r\n                            target=\"_blank\"\r\n                            className=\"text-primary\"\r\n                            href=\"https://www.google.com/maps/place/Pakistan/@30.0681241,60.3233711,5z/data=!3m1!4b1!4m5!3m4!1s0x38db52d2f8fd751f:0x46b7a1f7e614925c!8m2!3d30.375321!4d69.345116\"\r\n                          >\r\n                            Google map\r\n                          </a>\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={locationLink}\r\n                          onChange={(e) => setLocationLink(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Share your Location from google map\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-clock\" aria-hidden=\"true\"></i>{' '}\r\n                          Date\r\n                        </label>\r\n                        <input\r\n                          type=\"datetime-local\"\r\n                          name=\"date\"\r\n                          id=\"date\"\r\n                          value={date}\r\n                          onChange={(e) => setDate(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Date\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          className=\"btn btn-raised btn-block btn-danger\"\r\n                          type=\"submit\"\r\n                          id=\"post\"\r\n                        >\r\n                          Update Schedule\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateSchedule;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\UpdateTournament.js",["621","622","623"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  clearErrors,\r\n  getTournamentDetails,\r\n  updateTournaments,\r\n} from '../../../actions/tournamentActions';\r\nimport { UPDATE_TOURNAMENT_RESET } from '../../../constants/tournamentConstants';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst UpdateTournament = ({ match, history }) => {\r\n  const alert = useAlert();\r\n  const [name, setName] = useState('');\r\n  const [noTeams, setnoTeams] = useState(0);\r\n  const [date, setDate] = useState('');\r\n  const [endDate, setendDate] = useState('');\r\n  const [image, setimage] = useState('');\r\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const { error, tournament } = useSelector((state) => state.TournamentDetail);\r\n  const { error: updateError, isUpdated } = useSelector(\r\n    (state) => state.Tournament\r\n  );\r\n  const tournamentId = match.params.id;\r\n  const formData = new FormData();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    formData.set('name', name);\r\n    formData.set('noTeams', noTeams);\r\n    formData.set('startingDate', date);\r\n    formData.set('endingDate', endDate);\r\n    formData.set('user', tournament.user);\r\n    if (image == '') {\r\n      formData.set('public_id', tournament.image.public_id);\r\n      formData.set('image', image);\r\n    } else formData.set('image', image);\r\n\r\n    UpdateData();\r\n  };\r\n  const UpdateData = () => {\r\n    dispatch(updateTournaments(tournament._id, formData));\r\n  };\r\n  useEffect(() => {\r\n    if (tournament && tournament._id !== tournamentId) {\r\n      dispatch(getTournamentDetails(tournamentId));\r\n    } else {\r\n      setName(tournament.name);\r\n      setnoTeams(tournament.noTeams);\r\n      setDate(tournament.startingDate);\r\n      setendDate(tournament.endingDate);\r\n      setimagePreview(tournament.image.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      history.push('/my/alltournaments');\r\n      alert.success('tournament updated successfully');\r\n      dispatch({ type: UPDATE_TOURNAMENT_RESET });\r\n    }\r\n  }, [dispatch, alert, error, isUpdated, updateError, tournament, history]);\r\n  const onChange = (e) => {\r\n    if (e.target.name === 'image') {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setimagePreview(reader.result);\r\n          setimage(reader.result);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <MetaData title={'FAQs'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"container py-5 col-12 col-md-10\">\r\n          <div className=\"container form-top\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                <h3 className=\"mb-4 text-center\">Update Tournament</h3>\r\n                <div className=\"panel panel-danger\">\r\n                  <div className=\"panel-body\">\r\n                    <form\r\n                      id=\"reused_form\"\r\n                      data-aos=\"fade-up\"\r\n                      data-aos-delay=\"50\"\r\n                      onSubmit={submitHandler}\r\n                    >\r\n                      <div className=\"form-group \">\r\n                        <div className=\" align-items-center\">\r\n                          <div>\r\n                            <figure className=\"avatar mb-4 \">\r\n                              <img\r\n                                src={imagePreview}\r\n                                className=\"mt-3 mr-2 rounded-circle\"\r\n                                alt=\"Avatar Preview\"\r\n                              />\r\n                            </figure>\r\n                          </div>\r\n                          <div className=\"custom-file\">\r\n                            <input\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              className=\"custom-file-input\"\r\n                              id=\"customFile\"\r\n                              accept=\"image/*\"\r\n                              onChange={onChange}\r\n                            />\r\n                            <label\r\n                              className=\"custom-file-label \"\r\n                              htmlFor=\"customFile\"\r\n                            >\r\n                              Choose image\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter Name\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-users\" aria-hidden=\"true\"></i> No\r\n                          of Teams\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"noTeams\"\r\n                          id=\"noTeams\"\r\n                          value={noTeams}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter noTeams\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-clock\" aria-hidden=\"true\"></i>{' '}\r\n                          Starting Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"date\"\r\n                          id=\"date\"\r\n                          value={date}\r\n                          onChange={(e) => setDate(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Date\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-clock\" aria-hidden=\"true\"></i>{' '}\r\n                          Ending Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"date\"\r\n                          id=\"date\"\r\n                          value={endDate}\r\n                          onChange={(e) => setendDate(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Ending Date\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          className=\"btn btn-raised btn-block btn-danger\"\r\n                          type=\"submit\"\r\n                          id=\"post\"\r\n                        >\r\n                          Update Tournament\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTournament;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\UserProfile\\UserProfile.js",["624"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector } from 'react-redux';\r\nimport { getData, patchData, postData } from '../../../routes/FetchData';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst UserProfile = () => {\r\n  const alert = useAlert();\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [DOB, setDOB] = useState('');\r\n  const [fatherName, setfatherName] = useState('');\r\n  const [gender, setgender] = useState('');\r\n  const [playerRole, setplayerRole] = useState('NA');\r\n\r\n  const [battingStyle, setBattingStyle] = useState('NA');\r\n  const [bowlingStyle, setbowlingStyle] = useState('NA');\r\n  const [bowlingDirection, setbowlingDirection] = useState('NA');\r\n  const [update, setUpdate] = useState(false);\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const formData = new FormData();\r\n  useEffect(() => {\r\n    setName(user.name);\r\n    getProfileData();\r\n  }, [user]);\r\n  const getProfileData = () => {\r\n    getData('/api/v1/tournament/single/player/profile')\r\n      .then((res) => {\r\n        setUpdate(!update);\r\n        setId(res.data.player._id);\r\n        setName(res.data.player.name);\r\n        setfatherName(res.data.player.fatherName);\r\n        setgender(res.data.player.gender);\r\n        setBattingStyle(res.data.player.battingStyle);\r\n        setbowlingStyle(res.data.player.bowlingStyle);\r\n        setbowlingDirection(res.data.player.bowlingDirection);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const createProfile = () => {\r\n    postData('/api/v1/tournament/player/profile', formData)\r\n      .then((res) => {\r\n        setUpdate(!update);\r\n\r\n        alert.show('Profile Created successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        alert.show('somthing went wrong');\r\n      });\r\n  };\r\n  const updateProfile = () => {\r\n    patchData(`/api/v1/tournament/player/profile/${id}`, formData)\r\n      .then((res) => {\r\n        alert.show('Profile Updated successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.message);\r\n        alert.show(err.response.data.message);\r\n      });\r\n  };\r\n  //window.alert(gender);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    formData.set('name', name);\r\n    formData.set('fatherName', fatherName);\r\n    formData.set('gender', gender);\r\n    formData.set('imageLink', user.avatar.url);\r\n    formData.set('playerRole', playerRole);\r\n    formData.set('DOB', DOB);\r\n    formData.set('battingStyle', battingStyle);\r\n    formData.set('bowlingStyle', bowlingStyle);\r\n    formData.set('bowlingDirection', bowlingDirection);\r\n\r\n    if (update) updateProfile();\r\n    else createProfile();\r\n    // console.log(formData);\r\n\r\n    // dispatch(updateProfile(formData));\r\n  };\r\n  return (\r\n    <div>\r\n      <MetaData title={'FAQs'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"container py-5 col-12 col-md-10\">\r\n          <div className=\"container form-top\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n                <h3 className=\"mb-4 text-center\">Player Profile</h3>\r\n                <div className=\"panel panel-danger\">\r\n                  <div className=\"panel-body\">\r\n                    <form\r\n                      id=\"reused_form\"\r\n                      data-aos=\"fade-up\"\r\n                      data-aos-delay=\"50\"\r\n                      onSubmit={submitHandler}\r\n                    >\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Name\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter Name\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-user\" aria-hidden=\"true\"></i>{' '}\r\n                          fatherName\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"fatherName\"\r\n                          id=\"fatherName\"\r\n                          value={fatherName}\r\n                          onChange={(e) => setfatherName(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter fatherName\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-gender\" aria-hidden=\"true\"></i>{' '}\r\n                          Gender\r\n                        </label>\r\n                        <div class=\"form-check\">\r\n                          <label class=\"form-check-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              class=\"form-check-input\"\r\n                              name=\"optradio\"\r\n                              z\r\n                              value=\"male\"\r\n                              defaultChecked\r\n                              onChange={(e) => setgender(e.target.value)}\r\n                            />\r\n                            Male\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                          <label class=\"form-check-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              class=\"form-check-input\"\r\n                              name=\"optradio\"\r\n                              value=\"female\"\r\n                              onChange={(e) => setgender(e.target.value)}\r\n                            />\r\n                            Female\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i className=\"fa fa-clock\" aria-hidden=\"true\"></i> DOB\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"SOB\"\r\n                          id=\"DOB\"\r\n                          value={DOB}\r\n                          onChange={(e) => setDOB(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Select Date\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i aria-hidden=\"true\"></i> Player Role\r\n                        </label>\r\n                        <select\r\n                          id=\"playerRole\"\r\n                          name=\"playerRole\"\r\n                          value={playerRole}\r\n                          onChange={(e) => setplayerRole(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"NA\">NA</option>\r\n                          <option value=\"Wicket Keeper\">Wicket Keeper</option>\r\n                          <option value=\"Bowler\">Bowler</option>\r\n                          <option value=\"Batsman\">Batsman</option>\r\n                          <option value=\"All Rounder\">All Rounder</option>\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i aria-hidden=\"true\"></i> Batting Style\r\n                        </label>\r\n                        <select\r\n                          id=\"Batting Style\"\r\n                          name=\"Batting Style\"\r\n                          value={battingStyle}\r\n                          onChange={(e) => setBattingStyle(e.target.value)}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Timet\"\r\n                        >\r\n                          <option value=\"NA\" defaultValue={'NA'}>\r\n                            NA\r\n                          </option>\r\n                          <option value=\"Left Arm\">Left Arm</option>\r\n                          <option value=\"Right Arm\">Right Arm</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i aria-hidden=\"true\"></i>Bowling Style\r\n                        </label>\r\n                        <select\r\n                          id=\"Bowling Style\"\r\n                          name=\"Bowling Style\"\r\n                          className=\"form-control\"\r\n                          value={bowlingStyle}\r\n                          onChange={(e) => setbowlingStyle(e.target.value)}\r\n                          placeholder=\"Timet\"\r\n                        >\r\n                          <option value=\"NA\">NA</option>\r\n                          <option value=\"Fast\">Fast</option>\r\n                          <option value=\"Medium\">Medium</option>\r\n                          <option value=\"Spin\">Spin</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <i aria-hidden=\"true\"></i>Bowling Direction\r\n                        </label>\r\n                        <select\r\n                          id=\"bowlingDirection\"\r\n                          name=\"bowlingDirection\"\r\n                          className=\"form-control\"\r\n                          value={bowlingDirection}\r\n                          onChange={(e) => setbowlingDirection(e.target.value)}\r\n                        >\r\n                          <option value=\"NA\">NA</option>\r\n                          <option value=\"leg spin\">Leg Spin</option>\r\n                          <option value=\"off spin\">Off Spin</option>\r\n                          <option value=\"gogly\">Gogly</option>\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        {update ? (\r\n                          <button\r\n                            className=\"btn btn-raised btn-block btn-danger\"\r\n                            type=\"submit\"\r\n                            id=\"post\"\r\n                          >\r\n                            Update\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn btn-raised btn-block btn-danger\"\r\n                            type=\"submit\"\r\n                            id=\"post\"\r\n                          >\r\n                            Create\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Login.js",["625","626","627","628","629"],"import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { clearErrors, login } from '../../actions/userActions';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nconst Login = ({ history, location }) => {\n  const [validation, setValidation] = useState(0);\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user, isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n  let redirect = '';\n  if (!isAuthenticated || user.role !== 'admin')\n    redirect = location.search ? location.search.split('=')[1] : '/';\n  else\n    redirect = location.search ? location.search.split('=')[1] : '/dashboard';\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(redirect);\n    }\n  }, [dispatch, isAuthenticated, history]);\n  useEffect(() => {\n    if (error) {\n      dispatch(clearErrors());\n    }\n  }, []);\n\n  const defaulValues = {\n    email: '',\n    password: '',\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Please enter your Email'),\n    password: Yup.string().required('Please enter your password'),\n  });\n  const submitHandler = (values) => {\n    const formData = new FormData();\n    dispatch(clearErrors());\n    formData.set('email', values.email);\n    formData.set('password', values.password);\n    console.log();\n    dispatch(login(formData));\n  };\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title={'Login'} />\n          <div className=\"my-5\">\n            <div className=\"container\" data-aos=\"fade-up\" data-aos-delay=\"50\">\n              <div className=\"row\">\n                <div className=\"col-lg-3\"></div>\n                <div className=\"col-lg-6\">\n                  <Formik\n                    initialValues={defaulValues}\n                    validationSchema={validationSchema}\n                    onSubmit={submitHandler}\n                  >\n                    <Form className=\"shadow-lg border-radius-20 p-4\">\n                      {error ? (\n                        <label htmlFor=\"email_field\">\n                          <p className=\"text-danger\">\n                            Email or Password is invalid\n                          </p>\n                        </label>\n                      ) : null}\n                      <h3 className=\"mb-3 text-center\">Login</h3>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email_field\">Email</label>\n                        <Field\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email_field\"\n                          className=\"form-control\"\n                        />\n                        <p className=\"text-danger\">\n                          <ErrorMessage name=\"email\" />\n                        </p>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Password</label>\n                        <Field\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"password_field\"\n                          className=\"form-control\"\n                        />\n                        <p className=\"text-danger\">\n                          <ErrorMessage name=\"password\" />\n                        </p>\n                      </div>\n\n                      <div className=\"text-right\">\n                        <Link to=\"/password/forgot\" className=\"mb-4\">\n                          Forgot Password?\n                        </Link>\n                      </div>\n                      <div className=\"text-center mt-4\">\n                        <button\n                          id=\"login_button\"\n                          type=\"submit\"\n                          className=\" order-button px-5\"\n                        >\n                          LOGIN\n                        </button>\n                      </div>\n                      <div className=\"text-center\">\n                        <Link to=\"/register\" className=\"mt-3 btn\">\n                          Create a new account\n                        </Link>\n                      </div>\n                    </Form>\n                  </Formik>\n                </div>\n                <div className=\"col-lg-3\"></div>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Login;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\TeamsList.js",["630"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  adminDeleteTeams,\r\n  clearErrors,\r\n  getSingleTournamentTeams,\r\n} from '../../../actions/TeamAction';\r\nimport { getTournamentDetails } from '../../../actions/tournamentActions';\r\nimport { DELETE_TEAM_RESET } from '../../../constants/teamsConstant';\r\nimport Loader from '../../layout/Loader';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\nconst TeamsList = ({ match, history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const [noTeams, setNoTeams] = useState(0);\r\n\r\n  const { loading, error, Teams } = useSelector((state) => state.Teams);\r\n  const { error: errorDetail, tournament } = useSelector(\r\n    (state) => state.TournamentDetail\r\n  );\r\n\r\n  const { error: deleteError, isDeleted } = useSelector((state) => state.Team);\r\n  const tournamentId = match.params.id;\r\n  useEffect(() => {\r\n    if (tournament && tournament._id !== tournamentId) {\r\n      dispatch(getTournamentDetails(tournamentId));\r\n    } else {\r\n      setNoTeams(tournament.noTeams);\r\n    }\r\n    dispatch(getSingleTournamentTeams(tournamentId));\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (errorDetail) {\r\n      alert.error(errorDetail);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isDeleted) {\r\n      alert.success('Product deleted successfully');\r\n      history.push(`/view/team/${tournamentId}`);\r\n      dispatch({ type: DELETE_TEAM_RESET });\r\n    }\r\n  }, [dispatch, alert, error, deleteError, isDeleted, history, noTeams]);\r\n\r\n  const deleteteamHandler = (id) => {\r\n    dispatch(adminDeleteTeams(id));\r\n  };\r\n\r\n  const setTeams = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Image',\r\n          field: 'image',\r\n        },\r\n        {\r\n          label: 'Joining Key',\r\n          field: 'id',\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n          sort: 'asc',\r\n        },\r\n\r\n        {\r\n          label: 'Owner',\r\n          field: 'owner',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Loss',\r\n          field: 'loss',\r\n        },\r\n        {\r\n          label: 'Wins',\r\n          field: 'wins',\r\n        },\r\n        {\r\n          label: 'Points',\r\n          field: 'points',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Actions',\r\n          field: 'actions',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    Teams.forEach((team) => {\r\n      data.rows.push({\r\n        image: (\r\n          <>\r\n            <img\r\n              src={team.image.url}\r\n              alt={team.name}\r\n              className=\"img-thumbnail\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n            ></img>\r\n          </>\r\n        ),\r\n        id: team._id,\r\n        name: team.name,\r\n        loss: team.lossMatch,\r\n        wins: team.winMatch,\r\n        points: team.winMatch - team.lossMatch,\r\n        owner: team.ownerName,\r\n\r\n        actions: (\r\n          <Fragment>\r\n            <Link\r\n              to={`/tournament/team/squad/${team._id}`}\r\n              className=\"btn btn-primary py-1 px-2\"\r\n            >\r\n              Squad\r\n              <i className=\"fa fa-eye ml-2\"></i>\r\n            </Link>\r\n            <Link\r\n              to={`/update/team/${team._id}`}\r\n              className=\"btn btn-primary py-1 px-2 ml-2\"\r\n            >\r\n              <i className=\"fa fa-pencil\"></i>\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-danger py-1 px-2 ml-2\"\r\n              onClick={() => deleteteamHandler(team._id)}\r\n            >\r\n              <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n          </Fragment>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Team-List'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 m-0 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <div className=\"d-flex  mx-3\">\r\n              <h3 className=\"my-5\">All Teams</h3>\r\n              {Teams.length <= noTeams ? (\r\n                <Link\r\n                  to={`/create/teams/${tournamentId}`}\r\n                  className=\"btn order-button ml-auto my-auto px-4\"\r\n                >\r\n                  Create <i className=\"fa fa-plus\"></i>\r\n                </Link>\r\n              ) : (\r\n                <Link className=\"btn order-button ml-auto my-auto px-4\">\r\n                  Team Full <i className=\"fa fa-plus\"></i>\r\n                </Link>\r\n              )}\r\n            </div>\r\n            <div className=\"d-flex mx-3\">\r\n              <Link\r\n                to={`/create/tournament/schedule/${tournamentId}`}\r\n                className=\"btn order-button ml-auto my-auto px-4 \"\r\n              >\r\n                Schedule <i className=\"fa fa-pencil\"></i>\r\n              </Link>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={setTeams()}\r\n                className=\"px-3\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeamsList;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Register.js",["631"],"import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { clearErrors, register } from '../../actions/userActions';\nimport MetaData from '../layout/MetaData';\n\nconst Register = ({ history }) => {\n  const defaulValues = {\n    name: '',\n    email: '',\n    address: '',\n    avatar: '',\n    city: '',\n    phone: '',\n    password: '',\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'Name should be at least 3 character long')\n      .required('Please enter your name'),\n    avatar: Yup.string().required('File is required'),\n    email: Yup.string()\n      .email('Invalid email')\n      .required('Please enter your email'),\n    address: Yup.string().required('Please enter your Address'),\n    city: Yup.string().required('Please enter your city'),\n    phone: Yup.number()\n      .required()\n      .positive()\n      .integer()\n      .min(1111111111, 'Phone number should be at least 11 digits')\n      .required('Please enter your phone number'),\n    password: Yup.string()\n      .min(6, 'Password should be at least 6 character long')\n      .required('Please enter your password'),\n  });\n\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n\n    if (error) {\n      // alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, isAuthenticated, error, history]);\n\n  const submitHandler = (values) => {\n    dispatch(clearErrors());\n\n    const formData = new FormData();\n    formData.set('name', values.name);\n    formData.set('email', values.email);\n    formData.set('address', values.address);\n    formData.set('country', values.country);\n    formData.set('city', values.city);\n    formData.set('phone', values.phone);\n    formData.set('password', values.password);\n    formData.set('avatar', values.avatar);\n    dispatch(register(formData));\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Register User'} />\n      <div className=\"container my-5\">\n        <Formik\n          initialValues={defaulValues}\n          validationSchema={validationSchema}\n          onSubmit={submitHandler}\n        >\n          {({ errors, touched, setFieldValue }) => (\n            <Form\n              className=\"shadow-lg p-4 border-radius-20 myBackground\"\n              data-aos=\"fade-up\"\n              data-aos-delay=\"50\"\n              encType=\"multipart/form-data\"\n            >\n              <h3 className=\"mb-3 text-center\">Register</h3>\n\n              <div className=\"row mt-5\">\n                <div className=\"col-lg-4\">\n                  <div className=\"form-group\">\n                    <div className=\"d-flex align-items-center\">\n                      <figure className=\"avatar\">\n                        <img\n                          src={avatarPreview}\n                          className=\"rounded-circle\"\n                          alt=\"Avatar Preview\"\n                        />\n                        <input\n                          type=\"file\"\n                          name=\"avatar\"\n                          className=\"hidden-file-input\"\n                          id=\"customFile\"\n                          accept=\"images/*\"\n                          onChange={(e) => {\n                            const reader = new FileReader();\n\n                            reader.onload = (e) => {\n                              if (reader.readyState === 2) {\n                                setFieldValue('avatar', reader.result);\n                                setAvatarPreview(reader.result);\n                              }\n                            };\n\n                            reader.readAsDataURL(e.target.files[0]);\n                          }}\n                        />\n                        <p className=\"text-danger text-center mt-2\">\n                          <ErrorMessage name=\"avatar\" />\n                        </p>\n                      </figure>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-7\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email_field\">Name</label>\n                    <Field\n                      type=\"name\"\n                      id=\"name_field\"\n                      className=\"form-control\"\n                      name=\"name\"\n                    />\n                    <p className=\"text-danger\">\n                      <ErrorMessage name=\"name\" />\n                    </p>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email_field\">Email</label>\n                    <Field\n                      type=\"email\"\n                      id=\"email_field\"\n                      className=\"form-control\"\n                      name=\"email\"\n                    />\n                    <p className=\"text-danger\">\n                      <ErrorMessage name=\"email\" />\n                    </p>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email_field\">Address</label>\n                    <Field\n                      type=\"txt\"\n                      id=\"address_field\"\n                      className=\"form-control\"\n                      name=\"address\"\n                    />\n                    <p className=\"text-danger\">\n                      <ErrorMessage name=\"address\" />\n                    </p>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email_field\">City</label>\n                    <Field\n                      type=\"txt\"\n                      id=\"city_field\"\n                      className=\"form-control\"\n                      name=\"city\"\n                    />\n                    <p className=\"text-danger\">\n                      <ErrorMessage name=\"city\" />\n                    </p>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email_field\">Phone</label>\n                    <Field\n                      type=\"number\"\n                      id=\"phone_field\"\n                      className=\"form-control\"\n                      name=\"phone\"\n                    />\n                    <p className=\"text-danger\">\n                      <ErrorMessage name=\"phone\" />\n                    </p>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password_field\">Password</label>\n                    <Field\n                      type=\"password\"\n                      id=\"password_field\"\n                      className=\"form-control\"\n                      name=\"password\"\n                    />\n                    <p className=\"text-danger\">\n                      <ErrorMessage name=\"password\" />\n                    </p>\n                  </div>\n\n                  <div className=\"text-center mt-5 mb-4\">\n                    <button\n                      id=\"register_button\"\n                      type=\"submit\"\n                      className=\"order-button px-5\"\n                      disabled={loading ? true : false}\n                    >\n                      REGISTER\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdateProfile.js",["632"],"import { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  clearErrors,\n  loadUser,\n  updateProfile,\n} from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\nimport MetaData from '../layout/MetaData';\n\nconst UpdateProfile = ({ history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.auth);\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      dispatch(loadUser());\n\n      history.push('/profile');\n\n      dispatch({\n        type: UPDATE_PROFILE_RESET,\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('avatar', avatar);\n\n    dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  return (\n    <Fragment>\n      <MetaData title={'Update Profile'} />\n\n      <div className=\"row wrapper\">\n        <div className=\"col-10 col-lg-5\">\n          <form\n            className=\"shadow-lg\"\n            onSubmit={submitHandler}\n            encType=\"multipart/form-data\"\n            data-aos=\"fade-up\"\n            data-aos-delay=\"50\"\n          >\n            <h3 className=\"mt-2 mb-5\">Update Profile</h3>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email_field\">Name</label>\n              <input\n                type=\"name\"\n                id=\"name_field\"\n                className=\"form-control\"\n                name=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email_field\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email_field\"\n                className=\"form-control\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"avatar_upload\">Avatar</label>\n              <div className=\"d-flex align-items-center\">\n                <div>\n                  <figure className=\"avatar mr-3 item-rtl\">\n                    <img\n                      src={avatarPreview}\n                      className=\"rounded-circle\"\n                      alt=\"Avatar Preview\"\n                    />\n                  </figure>\n                </div>\n                <div className=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    name=\"avatar\"\n                    className=\"custom-file-input\"\n                    id=\"customFile\"\n                    accept=\"image/*\"\n                    onChange={onChange}\n                  />\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                    Choose Avatar\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn update-btn btn-block mt-4 mb-3\"\n              disabled={loading ? true : false}\n            >\n              Update\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateProfile;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\ViewTournament.js",["633","634"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  clearErrors,\r\n  getTournamentDetails,\r\n} from '../../../actions/tournamentActions';\r\nimport MetaData from '../../layout/MetaData';\r\nimport Sidebar from '../Sidebar';\r\n\r\nconst ViewTournament = ({ match, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [noTeams, setnoTeams] = useState(0);\r\n  const [date, setDate] = useState('');\r\n  const [endDate, setendDate] = useState('');\r\n  const [image, setimage] = useState('');\r\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { error, tournament } = useSelector((state) => state.TournamentDetail);\r\n  const tournamentId = match.params.id;\r\n  console.log(tournament);\r\n  useEffect(() => {\r\n    if (tournament && tournament._id !== tournamentId) {\r\n      dispatch(getTournamentDetails(tournamentId));\r\n    } else {\r\n      setName(tournament.name);\r\n      setnoTeams(tournament.noTeams);\r\n      setDate(tournament.startingDate);\r\n      setendDate(tournament.endingDate);\r\n      setimagePreview(tournament.image.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, alert, error, tournamentId, tournament]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`tournament # ${tournament && tournament._id}`} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-2 p-0\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <div className=\"row d-flex justify-content-around\">\r\n              <div className=\"col-12 col-lg-7 order-details my-5\">\r\n                <h4 className=\"mb-2 \">Tournament Info</h4>\r\n                <figure className=\"avatar mb-4 \">\r\n                  <img\r\n                    src={imagePreview}\r\n                    className=\"mt-1 mr-2 rounded-circle\"\r\n                    alt=\"Avatar Preview\"\r\n                  />\r\n                </figure>\r\n                <p>\r\n                  <b>Name:</b> {name}\r\n                </p>\r\n                <p>\r\n                  <b>Teams Allowed:</b> {noTeams}\r\n                </p>\r\n                <p>\r\n                  <b>Registered Teams: </b>\r\n                </p>\r\n                <p className=\"mb-4\">\r\n                  <b>Starting Date: </b>\r\n                  {new Date(date).toDateString()}\r\n                </p>\r\n                <p>\r\n                  <b>Ending Date:</b> {new Date(endDate).toDateString()}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-lg-3 mt-5\">\r\n                <Link\r\n                  to={`/view/team/${tournament._id}`}\r\n                  className=\"btn btn-primary py-1 px-2\"\r\n                >\r\n                  Manage Teams\r\n                  <i className=\"fa fa-angle-double-right ml-3\"></i>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewTournament;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\productConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\userConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\scheduleConstant.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\playersConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\tournamentConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\teamsConstant.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Sidebar.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\playerActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\TeamAction.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\scheduleAction.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\tournamentActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\routes\\FetchData.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\Toss\\MatchToss.js",["635","636","637","638","639","640","641"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  clearErrors,\r\n  getScheduleDetails,\r\n} from '../../../../actions/scheduleAction';\r\nimport { getSingleTournamentTeams } from '../../../../actions/TeamAction';\r\nimport { postData } from '../../../../routes/FetchData';\r\nconst MatchToss = (props) => {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const [teamA, setTeamA] = useState('');\r\n  const [teamB, setTeamB] = useState('');\r\n  const [toss, setToss] = useState('');\r\n\r\n  const [tossDecision, setTossDecision] = useState('');\r\n  const [tournamentId, setTournamentId] = useState('');\r\n  const [overs, setOvers] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const { error, schedule } = useSelector((state) => state.ScheduleDetail);\r\n  console.log(schedule);\r\n  const {\r\n    loading,\r\n    error: schedualError,\r\n    Teams,\r\n  } = useSelector((state) => state.Teams);\r\n  const { error: updateError, isUpdated } = useSelector(\r\n    (state) => state.Schedule\r\n  );\r\n\r\n  const formData = new FormData();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (teamA === '' || tossDecision === '' || overs === '')\r\n      alert.error('Please Fill out all the Fields');\r\n    else {\r\n      const formData = new FormData();\r\n      formData.set('team_A_id', schedule.team_A_id);\r\n      formData.set('team_B_id', schedule.team_B_id);\r\n      formData.set('toss', toss);\r\n      formData.set('tossDecision', tossDecision);\r\n      formData.set('schedule', props.scheduleId);\r\n\r\n      formData.set('overs', overs);\r\n      formData.set('tournament', schedule.tournament_id);\r\n\r\n      postData('/api/v1/tournament/match/ining/create', formData)\r\n        .then((res) => {\r\n          history.goBack();\r\n          alert.show(\r\n            `${toss} win the toss and decided to ${tossDecision} first`\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n          alert.show('somthing went wrong');\r\n        });\r\n    }\r\n  };\r\n  const SendData = () => {\r\n    postData('/api/v1/tournament/match/ining/create', formData)\r\n      .then((res) => {\r\n        alert.show(`${toss} win the toss and decided to ${tossDecision} first`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        alert.show('somthing went wrong');\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (schedule && schedule._id !== props.scheduleId) {\r\n      dispatch(getScheduleDetails(props.scheduleId));\r\n    } else {\r\n      setTeamA(schedule.team_A_id);\r\n      setTeamB(schedule.team_B_id);\r\n\r\n      setTournamentId(schedule.tournament_id);\r\n      dispatch(getSingleTournamentTeams(schedule.tournament_id));\r\n    }\r\n\r\n    if (error) {\r\n      // alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    // if (updateError) {\r\n    //   alert.error(updateError);\r\n    //   dispatch(clearErrors());\r\n    // }\r\n\r\n    // if (isUpdated) {\r\n    //   history.push(`/create/tournament/schedule/${tournamentId}`);\r\n    //   alert.success('schedule updated successfully');\r\n    //   dispatch({ type: UPDATE_SCHEDULE_RESET });\r\n    // }\r\n  }, [dispatch, alert, error, isUpdated, updateError, schedule]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-md-offset-3 col-sm-12 col-xs-12\">\r\n          <h3 className=\"mb-4 text-center\">Start Match</h3>\r\n          <div className=\"panel panel-danger\">\r\n            <div className=\"panel-body\">\r\n              <form\r\n                id=\"reused_form\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-delay=\"50\"\r\n                onSubmit={submitHandler}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"team_field\">Toss Wining Team</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"team_field\"\r\n                    value={toss}\r\n                    onChange={(e) => {\r\n                      setToss(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"select\">Select</option>\r\n                    {Teams &&\r\n                      Teams.map(\r\n                        (team) =>\r\n                          (teamA == team._id || teamB == team._id) && (\r\n                            <option key={team._id} value={team.name}>\r\n                              {team.name}\r\n                            </option>\r\n                          )\r\n                      )}\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"team_field\">Toss Decision</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"team_field\"\r\n                    value={tossDecision}\r\n                    onChange={(e) => {\r\n                      setTossDecision(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"null\"></option>\r\n                    <option value=\"bat\">Bat</option>\r\n                    <option value=\"bowl\">Bowl</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    <i className=\"fa fa-clock\" aria-hidden=\"true\"></i> Overs\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"number\"\r\n                    id=\"number\"\r\n                    value={overs}\r\n                    onChange={(e) => setOvers(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Choose Overs\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    className=\"btn btn-raised btn-block btn-success\"\r\n                    type=\"submit\"\r\n                    id=\"post\"\r\n                  >\r\n                    Toss\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchToss;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\cartActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\LiveMatches.js",["642","643","644","645","646"],"import { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport { getData } from '../../../routes/FetchData';\r\nimport MetaData from '../../layout/MetaData';\r\nimport LiveScoreCard from '../cards/LiveScoreCard';\r\nconst LiveMatches = ({ history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const [matchData, setMatchData] = useState();\r\n  const [socket, setSocket] = useState(null);\r\n  const [load, setLoad] = useState(false);\r\n  const [liveLoad, setliveLoad] = useState(true);\r\n  console.log(matchData);\r\n  useEffect(() => {\r\n    // socket live connection\r\n    const socket = io();\r\n    setSocket(socket);\r\n    return () => socket.close();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('sendLiveScore', (msg) => {\r\n        if (msg.success == true)\r\n          getData('/api/v1/get/all/tournament/match/inings')\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              setMatchData(res.data.ining);\r\n              setLoad(!load);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n      });\r\n\r\n      return () => socket.off('sendLiveScore');\r\n    }\r\n  }, [socket]);\r\n  useEffect(() => {\r\n    getData('/api/v1/get/all/tournament/match/inings')\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setMatchData(res.data.ining);\r\n        setLoad(!load);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [dispatch, alert]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Tournament-List'} />\r\n      {matchData && (\r\n        <div className=\"row m-0\">\r\n          <div className=\"col-12 col-md-12\">\r\n            <Fragment>\r\n              {/* <div className=\"d-flex mx-3\">\r\n                <h3 className=\"my-2\">Live Matches</h3>\r\n              </div> */}\r\n              <div className=\"row d-flex align-content-center py-5\">\r\n                {matchData &&\r\n                  matchData.map((val, id) => {\r\n                    return <LiveScoreCard payload={val} key={id} />;\r\n                  })}\r\n              </div>\r\n\r\n              {/* {matchData &&\r\n                matchData.map((val, id) => {\r\n                  return <p key={id}>{val._id}</p>;\r\n                })} */}\r\n            </Fragment>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LiveMatches;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\productActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\TopHeader.js",["647","648"],"import StyledBadge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { logout } from '../../actions/userActions';\nimport logo from '../../assets/img/Logo.gif';\nimport { patchData, postData } from '../../routes/FetchData';\nimport '../css/header.css';\nimport NotificationBox from './NotificationBox';\n\nconst TopHeader = () => {\n  const [dialog, setDialog] = useState(false);\n  const [valid, setValid] = useState(false);\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [heading, setHeading] = useState('');\n  const [content, setContent] = useState('');\n  const [id, setId] = useState('');\n  const [userdata, setUserdata] = useState(null);\n  const { user, loading } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    postData('/api/v1/user/notification', heading)\n      .then((res) => {\n        setUserdata(res.data.user);\n      })\n      .catch((err) => console.log(err));\n  }, [valid, user]);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    alert.success('Logged out successfully.');\n    window.location.reload(true);\n  };\n\n  const setNotification = (val1, val2, val3) => {\n    setHeading(val1);\n    setContent(val2);\n    if (val3 !== id) setId(val3);\n    setDialog(true);\n  };\n\n  // console.log(userdata);\n  const ShowNotification = () => {\n    // console.log(id);\n\n    patchData(`/api/v1/notification/status/${id}`)\n      .then((res) => setValid(!valid))\n      .catch((err) => console.log(err));\n    setDialog(false);\n  };\n\n  return (\n    <div className=\"top-header-area\" id=\"top-header-area\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3 col-sm-6 d-flex\">\n            <div className=\"top-header-content my-auto d-none d-md-block\">\n              <span>\n                <i className=\"fa fa-check\"></i>\n                Enjoy the game & chase you dreams\n              </span>\n            </div>\n            <div className=\"middle-header-logo d-block d-md-none\">\n              <Link to=\"/\">\n                <img\n                  src={logo}\n                  alt=\"CrickHub\"\n                  className=\"img-fluid\"\n                  style={{\n                    maxHeight: '45px',\n                    backgroundColor: 'white',\n                    padding: '4px',\n                    borderRadius: '5px',\n                  }}\n                />\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"col-9 col-sm-6 text-right\">\n            <ul className=\"top-header-optional\">\n              <li>\n                {user ? (\n                  <div className=\"d-flex\">\n                    <div className=\"dropdown\">\n                      <Link\n                        to=\"#\"\n                        className=\"btn dropdown-toggle text-white media\"\n                        type=\"button\"\n                        id=\"dropDownMenuButton\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        style={{ paddingRight: '2rem' }}\n                      >\n                        <img\n                          className=\"mr-3\"\n                          style={{\n                            maxHeight: '30px',\n                            borderRadius: '50%',\n                            border: '1px solid #F8921C',\n                          }}\n                          src={user.avatar && user.avatar.url}\n                          alt={user && user.name}\n                        />\n                        <div className=\"media-body my-auto\">\n                          <h5 className=\"mt-0 text-light\">\n                            {user && user.name}\n                          </h5>\n                        </div>\n                      </Link>\n\n                      <div\n                        className=\"dropdown-menu profile-menu text-dark\"\n                        aria-labelledby=\"dropDownMenuButton\"\n                      >\n                        {user && user.role === 'admin' && (\n                          <Link className=\"dropdown-item\" to=\"/dashboard\">\n                            Dashboard\n                          </Link>\n                        )}\n                        <Link\n                          className=\"dropdown-item\"\n                          to=\"/tournament/dashboard\"\n                        >\n                          Tournaments\n                        </Link>\n                        <Link className=\"dropdown-item\" to=\"/orders/me\">\n                          Orders\n                        </Link>\n                        <Link className=\"dropdown-item\" to=\"/profile\">\n                          Profile\n                        </Link>\n                        <Link\n                          className=\"dropdown-item text-danger\"\n                          to=\"/\"\n                          onClick={logoutHandler}\n                        >\n                          Logout\n                        </Link>\n                      </div>\n                    </div>\n                    {userdata &&\n                      userdata.notifications &&\n                      userdata.notifications.length > 0 &&\n                      user.role != 'admin' && (\n                        <div className=\"ml-2 dropdown\">\n                          <Link\n                            style={{ textDecoration: 'none' }}\n                            className=\"btn dropdown-toggle text-white media\"\n                            type=\"button\"\n                            id=\"dropDownMenuButton2\"\n                            data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\"\n                            aria-expanded=\"false\"\n                          >\n                            <Link>\n                              <IconButton\n                                aria-label=\"cart\"\n                                className=\"cartItem\"\n                                style={{ color: '#ffff', padding: '0px 20px' }}\n                              >\n                                <StyledBadge\n                                  badgeContent={userdata.notifications.reduce(\n                                    (sum, val) => {\n                                      return (\n                                        sum + (val.status === 'unread' ? 1 : 0)\n                                      );\n                                    },\n                                    0\n                                  )}\n                                  color=\"secondary\"\n                                >\n                                  <NotificationsIcon />\n                                </StyledBadge>\n                              </IconButton>\n                            </Link>\n                          </Link>\n\n                          <div\n                            className=\"dropdown-menu notification-bar text-dark\"\n                            aria-labelledby=\"dropDownMenuButton2\"\n                          >\n                            {userdata.notifications.map((val) => (\n                              <>\n                                {val.status === 'read' ? (\n                                  <Link\n                                    className=\"dropdown-item read\"\n                                    onClick={() =>\n                                      setNotification(\n                                        val.heading,\n                                        val.content,\n                                        id\n                                      )\n                                    }\n                                  >\n                                    {val.heading}\n                                  </Link>\n                                ) : (\n                                  <Link\n                                    className=\"dropdown-item unread\"\n                                    onClick={() =>\n                                      setNotification(\n                                        val.heading,\n                                        val.content,\n                                        val._id\n                                      )\n                                    }\n                                  >\n                                    {val.heading} <span> ◉ </span>\n                                  </Link>\n                                )}\n                              </>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                ) : (\n                  !loading && (\n                    <div style={{ minWidth: '125px' }}>\n                      <Link to=\"/login\" className=\"text-light\">\n                        <i className=\"fa fa-lock\"></i>\n                        Login\n                      </Link>\n                      {'  |  '}\n                      <Link to=\"/register\" className=\"text-light\">\n                        Register\n                      </Link>\n                    </div>\n                  )\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {dialog === true ? (\n        <NotificationBox\n          box={ShowNotification}\n          heading={heading}\n          content={content}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default withRouter(TopHeader);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Navbar.js",["649"],"import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n  const [visible, setVisible] = useState(false);\n  const [active, setActive] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const location = useLocation();\n\n  const toggleHotline = () => {\n    setActive(!active);\n  };\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handleScroll = () => {\n    const currentScrollPos = window.pageYOffset;\n\n    if (currentScrollPos > 90) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [visible, handleScroll, location]);\n\n  return (\n    <div\n      className={`navbar-area mb-2 ${\n        visible ? 'is-sticky sticky-active container-fluid' : 'container'\n      }`}\n    >\n      <div className={`main-navbar container ${showMenu && 'show'}`}>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-md navbar-light\">\n            <div className=\"collapse navbar-collapse mean-menu\">\n              <ul className=\"navbar-nav responsive-menu\">\n                <li\n                  className={\n                    location.pathname === '/' ? 'nav-item active' : 'nav-item'\n                  }\n                >\n                  <Link to=\"/\" className=\"nav-link\">\n                    HOME\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/products'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/products\" className=\"nav-link\">\n                    PRODUCTS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/discusion'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/discusion\" className=\"nav-link\">\n                    DISCUSSION FORUM\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/tournaments/matches/live'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link\n                    to=\"/tournaments/matches/live\"\n                    className=\"nav-link liveDot\"\n                  >\n                    LIVE\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/blogs'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/blogs\" className=\"nav-link\">\n                    BLOGS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/contactus'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/contactus\" className=\"nav-link\">\n                    CONTACT US\n                  </Link>\n                </li>\n              </ul>\n\n              <div className=\"others-option d-flex align-items-center\">\n                <div className=\"option-item respo-nav\">\n                  <span>\n                    Hotline:\n                    <a href=\"tel:923024885436\">(+92) 302 – 4885436</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n\n      <div className=\"others-option-for-responsive\">\n        <div className=\"container\">\n          <div className=\"responsive-logo\">\n            <span>Econix</span>\n          </div>\n          <div className=\"dot-menu\" onClick={() => toggleHotline()}>\n            <div className=\"inner\">\n              <div className=\"circle circle-one\"></div>\n              <div className=\"circle circle-two\"></div>\n              <div className=\"circle circle-three\"></div>\n            </div>\n          </div>\n\n          <div className=\"hamburger-menu\" onClick={() => toggleMenu()}>\n            {showMenu ? (\n              <span className=\"x-icon\">x</span>\n            ) : (\n              <i className=\"bx bx-menu\"></i>\n            )}\n          </div>\n\n          <div className={active ? 'active container' : 'container'}>\n            <div className=\"option-inner\">\n              <ul className=\"navbar-nav responsive-menu\">\n                <li\n                  className={\n                    location.pathname === '/' ? 'nav-item active' : 'nav-item'\n                  }\n                >\n                  <Link to=\"/\" className=\"nav-link\">\n                    HOME\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/services'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/services\" className=\"nav-link\">\n                    SERVICES\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/discusion'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/discusion\" className=\"nav-link\">\n                    DISCUSSION FORUM\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/tournaments/matches/live'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link\n                    to=\"/tournaments/matches/live\"\n                    className=\"nav-link liveDot\"\n                  >\n                    LIVE\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/blogs'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/blogs\" className=\"nav-link\">\n                    BLOGS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/contactus'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/contactus\" className=\"nav-link\">\n                    CONTACT US\n                  </Link>\n                </li>\n              </ul>\n              <div className=\"others-option d-flex align-items-center\">\n                <div className=\"option-item\">\n                  <span>\n                    Hotline:\n                    <a href=\"tel:16545676789\">(+1) 654 567 – 6789</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\Product.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\FaqCard.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCard.js",["650","651"],"import { Link } from 'react-router-dom';\n\nconst BlogCard = (props) => {\n  {\n    /* <div className=\"cardHeading\">\n      <h2>Heading : {props.heading}</h2>\n      <p>Discription : {props.description}</p>\n      <span>Image</span>\n      <img src={props.image} alt=\"image\"></img>\n    </div> */\n  }\n  return (\n    <div className=\"col-lg-4 col-md-6\" data-aos=\"fade-up\" data-aos-delay=\"50\">\n      <div className=\"single-blog\">\n        <div className=\"blog-image\">\n          <Link to={'/blog-details/' + props._id}>\n            <img src={props.image} alt=\"image\" />\n          </Link>\n        </div>\n        <div className=\"blog-content\">\n          <h3 className=\"text-uppercase\">\n            <Link to={'/blog-details/' + props._id}>{props.heading}</Link>\n          </h3>\n          <div className=\"post-meta\">\n            {new Date(props.createdAt).toDateString()}\n          </div>\n          <p>\n            {props.description.substring(0, 100)}\n            {props.description.length > 100 && '...'}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogCard;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MiddleHeader.js",["652"],"import StyledBadge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { useSelector } from 'react-redux';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport logo from '../../assets/img/Logo.gif';\nimport Search from './Search';\n\nconst MiddleHeader = () => {\n  const { cartItems } = useSelector((state) => state.cart);\n\n  return (\n    <div className=\"middle-header-area\">\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-sm-3 d-none d-md-block\">\n            <div className=\"middle-header-logo\">\n              <Link to=\"/\">\n                <img\n                  src={logo}\n                  className=\"img-fluid\"\n                  style={{ maxHeight: '50px' }}\n                />\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"col-9 col-md-6\">\n            <div className=\"middle-header-search\">\n              <Route render={({ history }) => <Search history={history} />} />\n            </div>\n          </div>\n\n          <div className=\"col-3\">\n            <ul className=\"middle-header-optional\">\n              <Link\n                className=\"cardLink\"\n                to=\"/cart\"\n                style={{ textDecoration: 'none', width: '45px' }}\n              >\n                <Link className=\"cardLink\" to=\"/cart\">\n                  <IconButton\n                    aria-label=\"cart\"\n                    className=\"cartItem cardLink\"\n                    style={{ color: '#17204A' }}\n                  >\n                    <StyledBadge\n                      badgeContent={cartItems.length}\n                      color=\"secondary\"\n                    >\n                      <ShoppingCartIcon />\n                    </StyledBadge>\n                  </IconButton>\n                </Link>\n              </Link>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(MiddleHeader);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\orderActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\TournamentList.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\review\\ListReviews.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\ChattComponent.js",["653","654","655"],"import Avatar from '@material-ui/core/Avatar';\nimport moment from 'moment';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ScrollIntoView from 'react-scroll-into-view';\nimport io from 'socket.io-client';\nimport img from '../../assets/img/qrcode.png';\nimport { getData } from '../../routes/FetchData';\nimport '../css/chatt/chatt.css';\nimport Footer from './footer/Footer';\n\nconst ChattComponent = (props) => {\n  const { user } = useSelector((state) => state.auth);\n  const [socket, setSocket] = useState(null);\n  const [qrCode, setQrCode] = useState(false);\n  useEffect(() => {\n    const socket = io();\n    setSocket(socket);\n    return () => socket.close();\n  }, []);\n\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [replyId, setreplyId] = useState('');\n  const [replyName, setreplyName] = useState('');\n  const [replyComment, setreplyComment] = useState('');\n  const [page, setPage] = useState(1);\n  const pageEnd = useRef();\n  const currentDate = new Date();\n\n  useEffect(() => {\n    setLoading(true);\n    getData(`/api/v1/comments/?limit=${page * 5}`)\n      .then((res) => {\n        // console.log(`data is ${res}`);\n        // console.log(res.data.comments);\n        setComments((r) => (r = res.data.comments));\n        setLoading(false);\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  }, [page]);\n  const replyController = (val1, val2, val3) => {\n    if (replyComment === val2) {\n      setreplyName('');\n      setreplyComment('');\n      setreplyId('');\n    } else {\n      setreplyName(val1);\n      setreplyComment(val2);\n      setreplyId(val3);\n    }\n  };\n  // Realtime\n  // Join room\n  // useEffect(() => {\n  //   if (socket) {\n  //     socket.emit('joinRoom', id);\n  //   }\n  // }, [socket, id]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('sendCommentToClient', (msg) => {\n        setComments([msg, ...comments]);\n      });\n\n      return () => socket.off('sendCommentToClient');\n    }\n  }, [socket, comments]);\n\n  // infiniti scroll\n\n  // Reply Comments\n  useEffect(() => {\n    if (socket) {\n      socket.on('sendReplyCommentToClient', (msg) => {\n        setComments([msg, ...comments]);\n      });\n      setreplyId('');\n      setreplyName('');\n      setreplyComment('');\n      return () => socket.off('sendReplyCommentToClient');\n    }\n  }, [socket, comments]);\n  // const AlwaysScrollToBottom = () => {\n  //   const elementRef = useRef();\n  //   useEffect(() => {\n  //     elementRef.current.scrollIntoView();\n  //     window.scrollTo({\n  //       top: 90,\n  //       left: 0,\n  //       behavior: 'smooth',\n  //     });\n  //   });\n\n  //   return <div ref={elementRef} />;\n  // };\n  const AlwaysScrollToBottom = () => {\n    const elementRef = useRef();\n    useEffect(() => elementRef.current.scrollIntoView());\n    return <div ref={elementRef} />;\n  };\n  return (\n    <div className=\"chat\">\n      <div>\n        <span className=\"mb-2\">\n          <a\n            className=\"btn btn-success\"\n            href=\"https://chat.whatsapp.com/KBx7pEmlcXl0X1KrV9kzph\"\n          >\n            Wattsapp Group <i className=\"fa fa-whatsapp ml-1\"></i>\n          </a>\n          <button\n            className=\"btn btn-success ml-2\"\n            onClick={() => setQrCode(!qrCode)}\n          >\n            QR code <i className=\"fa fa-whatsapp ml-1\"></i>\n          </button>\n        </span>\n\n        {qrCode ? (\n          <img\n            className=\"rounded mx-auto d-block \"\n            data-aos=\"fade-up\"\n            data-aos-delay=\"50\"\n            src={img}\n            alt=\"Wattsapp-Group\"\n          />\n        ) : null}\n      </div>\n      {user ? (\n        <div data-aos=\"fade-up\" data-aos-delay=\"50\" className=\"my-2\">\n          <div id=\"chattok\" className=\"chatt-header\">\n            <Avatar\n              src={user.avatar && user.avatar.url}\n              alt={user && user.name}\n            />\n            <div className=\"chatt-header-Info \">\n              <h3 className=\"text-white\">{user && user.name}</h3>\n              <p className=\"text-white\">(Live discussion)</p>\n            </div>\n\n            {/* <div className=\"chatt-header-right\">\n              <IconButton>\n                <MoreVertIcon />\n              </IconButton>\n            </div> */}\n          </div>\n          {comments ? (\n            <>\n              <div className=\"chat-body\">\n                {comments\n                  .map((comment) => (\n                    <>\n                      {comment.userId === user._id ? (\n                        <p\n                          className=\"chat-message chat-reciver\"\n                          id={'comment' + comment._id}\n                        >\n                          {comment.replyName ? (\n                            // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                            <ScrollIntoView\n                              selector={'#comment' + comment.replyId}\n                              scrollOptions={{ block: 'center' }}\n                              className=\"cursor-pointer\"\n                            >\n                              <div className=\"d-flex mainReply\">\n                                <p className=\"mr-2 \">{comment.replyName}</p>\n                                <p>{comment.replyContent}</p>\n                              </div>\n                            </ScrollIntoView>\n                          ) : null}\n\n                          <div className=\"reply-btn\">\n                            <span\n                              className=\"dropDown ml-auto\"\n                              onClick={() =>\n                                replyController(\n                                  comment.username,\n                                  comment.content,\n                                  comment._id\n                                )\n                              }\n                            >\n                              Reply{' '}\n                              <i\n                                className=\"fa fa-angle-down\"\n                                aria-hidden=\"true\"\n                              ></i>\n                            </span>\n                          </div>\n\n                          <div className=\"navbar p-0\">\n                            <div className=\"mr-auto\">{comment.content}</div>\n                            <div className=\"px-2\"></div>\n                            <div className=\"chat-time ml-auto mt-auto\">\n                              {moment(comment.createdAt).fromNow() + ' '}\n                              {currentDate.getDate() ===\n                                new Date(comment.createdAt).getDate() &&\n                              currentDate.getMonth() ===\n                                new Date(comment.createdAt).getMonth() &&\n                              currentDate.getFullYear() ===\n                                new Date(comment.createdAt).getFullYear()\n                                ? new Date(\n                                    comment.createdAt\n                                  ).toLocaleTimeString('en-US')\n                                : new Date(comment.createdAt).toLocaleString()}\n                            </div>\n                          </div>\n                        </p>\n                      ) : (\n                        <div className=\"d-flex my-2\">\n                          <span className=\"my-auto\">\n                            <img\n                              className=\"mr-1\"\n                              style={{\n                                maxHeight: '30px',\n                                borderRadius: '50%',\n                                border: '1px solid #F8921C',\n                              }}\n                              src={comment.avatar}\n                              alt={comment.name}\n                            />\n                          </span>\n                          <p\n                            className=\"chat-message\"\n                            id={'comment' + comment._id}\n                          >\n                            <div className=\"text-danger mr-2\">\n                              {comment.username}\n                            </div>\n\n                            {comment.replyName ? (\n                              // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                              <ScrollIntoView\n                                selector={'#comment' + comment.replyId}\n                                scrollOptions={{ block: 'center' }}\n                                className=\"cursor-pointer\"\n                              >\n                                <div className=\"d-flex mainReply\">\n                                  <p className=\"mr-2 \">{comment.replyName}</p>\n                                  <p>{comment.replyContent}</p>\n                                </div>\n                              </ScrollIntoView>\n                            ) : null}\n\n                            <div className=\"reply-btn\">\n                              <span\n                                className=\"dropDown ml-auto\"\n                                onClick={() =>\n                                  replyController(\n                                    comment.username,\n                                    comment.content,\n                                    comment._id\n                                  )\n                                }\n                              >\n                                Reply{' '}\n                                <i\n                                  className=\"fa fa-angle-down\"\n                                  aria-hidden=\"true\"\n                                ></i>\n                              </span>\n                            </div>\n\n                            <div className=\"navbar p-0\">\n                              <div className=\"mr-auto\">{comment.content}</div>\n                              <div className=\"px-2\"></div>\n                              <div className=\"chat-time ml-auto mt-auto\">\n                                {moment(comment.createdAt).fromNow() + ' '}\n                                {currentDate.getDate() ===\n                                  new Date(comment.createdAt).getDate() &&\n                                currentDate.getMonth() ===\n                                  new Date(comment.createdAt).getMonth() &&\n                                currentDate.getFullYear() ===\n                                  new Date(comment.createdAt).getFullYear()\n                                  ? new Date(\n                                      comment.createdAt\n                                    ).toLocaleTimeString('en-US')\n                                  : new Date(\n                                      comment.createdAt\n                                    ).toLocaleString()}\n                              </div>\n                            </div>\n                          </p>\n                        </div>\n                      )}\n                      <AlwaysScrollToBottom />\n                    </>\n                  ))\n                  .reverse()}\n              </div>\n            </>\n          ) : null}\n          {replyName !== '' ? (\n            <div className=\"d-flex myReply px-4\">\n              <p className=\"mr-2 text-success\">{replyName}</p>\n              <p>{replyComment}</p>\n            </div>\n          ) : null}\n\n          <Footer\n            user={user}\n            socket={socket}\n            replyId={replyId}\n            replyName={replyName}\n            replyComment={replyComment}\n          />\n        </div>\n      ) : (\n        <div className=\"container my-5 text-center\">\n          <div className=\"messageLogin\" data-aos=\"fade-up\" data-aos-delay=\"50\">\n            <h3>Please Login First</h3>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChattComponent;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\ProductsBanner.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\WhychooseUS.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\AboutUs.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MySlider.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\LiveScoreCard.js",["656","657","658","659","660"],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\NotificationBox.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Search.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\footer\\Footer.jsx",["661","662","663"],"import SendIcon from '@material-ui/icons/Send';\nimport React, { useState } from 'react';\nimport '../../css/chatt/footer.css';\n\nconst Footer = (props) => {\n  const [cancel, setCancel] = useState(false);\n  const [text, setText] = useState('');\n\n  const onEmojiClick = (event, emojiObject) => {\n    if (emojiObject.emoji !== undefined) setText(text + emojiObject.emoji);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // alert(props.replyId);\n    const avatar = props.user.avatar.url;\n    const username = props.user.name;\n    const createdAt = new Date().toISOString();\n    const content = text;\n    const replyId = props.replyId;\n    const replyName = props.replyName;\n    const replyContent = props.replyComment;\n    const userId = props.user._id;\n    const socket = props.socket;\n    let send = null;\n\n    if (props.replyName !== '') {\n      send = 'replyComment';\n    }\n    socket.emit('createComment', {\n      username,\n      avatar,\n      content,\n      replyId,\n      replyName,\n      replyContent,\n      userId,\n      send,\n      createdAt,\n    });\n    setText('');\n  };\n  return (\n    <div className=\"chat-footer\">\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          placeholder=\"Type a message\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        ></input>\n\n        <button type=\"submit\" className=\"text-danger\"></button>\n      </form>\n      <SendIcon onClick={submitHandler} />\n    </div>\n  );\n};\n\nexport default Footer;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\StartIning\\Ining.js",["664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701"],"import { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport { getData, postData } from '../../../../routes/FetchData';\r\nimport '../../../css/liveScorePannel.css';\r\nimport LiveScoreIningCard from './LiveScoreIningCard';\r\nconst Ining = (props) => {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  //states\r\n\r\n  const [singleIningeLiveData, setsingleIningeLiveData] = useState([]);\r\n  const [ining, setining] = useState(true);\r\n  const [over, setover] = useState(0);\r\n  const [batsmanA, setbatsmanA] = useState('');\r\n  const [batsmanB, setbatsmanB] = useState('');\r\n  const [bowler, setbowler] = useState('');\r\n  const [bowlerName, setbowlerName] = useState('');\r\n  const [noBalls, setnoBalls] = useState(0);\r\n  const [wideBalls, setwideBalls] = useState(0);\r\n  const [batsman, setbatsman] = useState('');\r\n  const [batsmanName, setbatsmanName] = useState('');\r\n  const [previousPlayedBalls, setpreviousPlayedBalls] = useState(6);\r\n  const [playedBalls, setplayedBalls] = useState(1);\r\n  const [finishIningId, setfinishIningTeamId] = useState('');\r\n  const [sixs, setsixs] = useState(0);\r\n  const [running, setrunning] = useState(0);\r\n  const [fours, setfours] = useState(0);\r\n  const [out, setout] = useState(false);\r\n  const [batsmanScore, setbatsmanScore] = useState(0);\r\n  const [totalScore, settotalScore] = useState(0);\r\n  const [batingTeamID, setbatingTeamID] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  //Teams data\r\n  const [teams, setteams] = useState([]);\r\n  //Team Squad\r\n  const [teambatsmans, setteamBatsmans] = useState([]);\r\n  const [teamBowlers, setteamBowlers] = useState([]);\r\n\r\n  const formData = new FormData();\r\n\r\n  const getTeamsData = () => {\r\n    formData.set('teamA', props.Ining.schedule.team_A_id);\r\n    formData.set('teamB', props.Ining.schedule.team_B_id);\r\n    postData('/api/v1/get/match/teams', formData)\r\n      .then((res) => {\r\n        setteams(res.data.team);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n  const getTeamsBatsmanData = (id) => {\r\n    getData(`/api/v1/get/all/team/squad/${id}`)\r\n      .then((res) => {\r\n        setteamBatsmans(res.data.join);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n  const getTeamsBowlerData = (id) => {\r\n    getData(`/api/v1/get/all/team/squad/${id}`)\r\n      .then((res) => {\r\n        setteamBowlers(res.data.join);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n  const getSingleIningLiveData = (id) => {\r\n    getData(`/api/v1/get/all/tournament/match/single/live/inings/${id}`)\r\n      .then((res) => {\r\n        setsingleIningeLiveData(res.data.ining);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (teambatsmans && teambatsmans.length > 0)\r\n      teambatsmans.map((val, id) => {\r\n        if (val.user._id == batsman) setbatsmanName(val.user.name);\r\n      });\r\n    if (teamBowlers && teamBowlers.length > 0)\r\n      teamBowlers.map((val, id) => {\r\n        if (val.user._id == bowler) setbowlerName(val.user.name);\r\n      });\r\n    // setbatsmanName();\r\n    // setbowlerName();\r\n  }, [batsman, bowler]);\r\n\r\n  useEffect(() => {\r\n    getSingleIningLiveData(props.Ining._id);\r\n    if (\r\n      props.Ining.team_A_id == props.Ining.toss._id &&\r\n      props.Ining.tossDecision == 'bat' &&\r\n      props.Ining.teamA_Ining_Status == false &&\r\n      props.Ining.teamB_Ining_Status == false\r\n    ) {\r\n      setfinishIningTeamId('teamA');\r\n      getTeamsBatsmanData(props.Ining.team_A_id);\r\n      getTeamsBowlerData(props.Ining.team_B_id);\r\n      setbatingTeamID(props.Ining.team_A_id);\r\n      setining(true);\r\n    } else if (\r\n      props.Ining.team_A_id == props.Ining.toss._id &&\r\n      props.Ining.tossDecision == 'bowl' &&\r\n      props.Ining.teamB_Ining_Status == false &&\r\n      props.Ining.teamA_Ining_Status == false\r\n    ) {\r\n      setfinishIningTeamId('teamB');\r\n      getTeamsBatsmanData(props.Ining.team_B_id);\r\n      getTeamsBowlerData(props.Ining.team_A_id);\r\n      setbatingTeamID(props.Ining.team_B_id);\r\n      setining(true);\r\n    }\r\n    //2nd\r\n    if (\r\n      props.Ining.team_B_id == props.Ining.toss._id &&\r\n      props.Ining.tossDecision == 'bat' &&\r\n      props.Ining.teamA_Ining_Status == false &&\r\n      props.Ining.teamB_Ining_Status == false\r\n    ) {\r\n      setfinishIningTeamId('teamB');\r\n      getTeamsBatsmanData(props.Ining.team_B_id);\r\n      getTeamsBowlerData(props.Ining.team_A_id);\r\n      setbatingTeamID(props.Ining.team_B_id);\r\n      setining(true);\r\n    } else if (\r\n      props.Ining.team_B_id == props.Ining.toss._id &&\r\n      props.Ining.tossDecision == 'bowl' &&\r\n      props.Ining.teamB_Ining_Status == false &&\r\n      props.Ining.teamA_Ining_Status == false\r\n    ) {\r\n      setfinishIningTeamId('teamA');\r\n      getTeamsBatsmanData(props.Ining.team_A_id);\r\n      getTeamsBowlerData(props.Ining.team_B_id);\r\n      setbatingTeamID(props.Ining.team_A_id);\r\n      setining(true);\r\n    } else if (props.Ining.teamA_Ining_Status == true) {\r\n      setfinishIningTeamId('teamB');\r\n      getTeamsBatsmanData(props.Ining.team_B_id);\r\n      getTeamsBowlerData(props.Ining.team_A_id);\r\n      setbatingTeamID(props.Ining.team_B_id);\r\n      setining(false);\r\n    } else if (props.Ining.teamB_Ining_Status == true) {\r\n      setfinishIningTeamId('teamA');\r\n      getTeamsBatsmanData(props.Ining.team_A_id);\r\n      getTeamsBowlerData(props.Ining.team_B_id);\r\n      setbatingTeamID(props.Ining.team_A_id);\r\n      setining(false);\r\n    }\r\n\r\n    getTeamsData();\r\n\r\n    // socket live connection\r\n    const socket = io();\r\n    setSocket(socket);\r\n    return () => socket.close();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (noBalls + playedBalls < sixs + fours + running) {\r\n      setsixs(0);\r\n      setfours(0);\r\n      setrunning(0);\r\n    }\r\n    setbatsmanScore(running + sixs * 6 + fours * 4);\r\n  }, [sixs, fours]);\r\n  useEffect(() => {\r\n    setplayedBalls(1);\r\n    setsixs(0);\r\n    setfours(0);\r\n    setrunning(0);\r\n  }, [batsman]);\r\n  useEffect(() => {\r\n    if (previousPlayedBalls == 0) {\r\n      setover(over + 1);\r\n      setpreviousPlayedBalls(6);\r\n    }\r\n    setplayedBalls(1);\r\n  }, [previousPlayedBalls]);\r\n\r\n  useEffect(() => {\r\n    setbatsmanScore(running + sixs * 6 + fours * 4);\r\n    settotalScore(batsmanScore + wideBalls + noBalls);\r\n  }, [running, batsmanScore, noBalls, wideBalls]);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('sendLiveScore', (msg) => {\r\n        if (msg.success == true) {\r\n          setsixs(0);\r\n          setfours(0);\r\n          setrunning(0);\r\n          getSingleIningLiveData(props.Ining._id);\r\n          alert.success('Score Updated Successfully');\r\n        }\r\n      });\r\n\r\n      return () => socket.off('sendLiveScore');\r\n    }\r\n  }, [socket]);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('finishSuccess', (msg) => {\r\n        if (msg.success == true) {\r\n          history.goBack();\r\n          alert.success('Ining has Finished');\r\n        }\r\n      });\r\n\r\n      return () => socket.off('finishSuccess');\r\n    }\r\n  }, [socket]);\r\n  const socketFun = (toss, winnerTeam, loserTeam) => {\r\n    socket.emit('finishIning', {\r\n      toss,\r\n      finishIningId,\r\n      winnerTeam,\r\n      loserTeam,\r\n      tournament: props.Ining.tournament,\r\n      Ining: props.Ining._id,\r\n      _id: props.Ining.schedule._id,\r\n    });\r\n  };\r\n  const finishIning = (e) => {\r\n    if (\r\n      props.Ining.teamB_Ining_Status == true &&\r\n      props.Ining.teamA_Score > props.Ining.teamB_Score\r\n    )\r\n      socketFun(props.Ining._id, props.Ining.team_A_id, props.Ining.team_B_id);\r\n    else if (\r\n      props.Ining.teamB_Ining_Status == true &&\r\n      props.Ining.teamA_Score < props.Ining.teamB_Score\r\n    )\r\n      socketFun(props.Ining._id, props.Ining.team_B_id, props.Ining.team_A_id);\r\n    else if (\r\n      props.Ining.teamA_Ining_Status == true &&\r\n      props.Ining.teamA_Score < props.Ining.teamB_Score\r\n    )\r\n      socketFun(props.Ining._id, props.Ining.team_B_id, props.Ining.team_A_id);\r\n    else if (\r\n      props.Ining.teamA_Ining_Status == true &&\r\n      props.Ining.teamA_Score > props.Ining.teamB_Score\r\n    )\r\n      socketFun(props.Ining._id, props.Ining.team_A_id, props.Ining.team_B_id);\r\n    else {\r\n      socket.emit('finishIning', {\r\n        toss: props.Ining._id,\r\n        finishIningId,\r\n      });\r\n    }\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (props.Ining.overs > over) {\r\n      setpreviousPlayedBalls(previousPlayedBalls - playedBalls);\r\n      socket.emit('pushLiveTeamScore', {\r\n        toss: props.Ining._id,\r\n        ining,\r\n        over,\r\n        bowler,\r\n        noBalls,\r\n        wideBalls,\r\n        batsman,\r\n        batsmanName,\r\n        bowlerName,\r\n        playedBalls,\r\n        out,\r\n        previousPlayedBalls,\r\n        sixs,\r\n        fours,\r\n        batsmanScore,\r\n        totalScore,\r\n        batingTeamID,\r\n      });\r\n    } else {\r\n      alert.success('Overs are Finished');\r\n    }\r\n  };\r\n  console.log(props);\r\n  return (\r\n    <div className=\"main_live\">\r\n      <span className=\"\">\r\n        <LiveScoreIningCard payload={singleIningeLiveData} />\r\n      </span>\r\n      {props.Ining.schedule.MatchCompleted == false ? (\r\n        <div>\r\n          <form\r\n            id=\"reused_form\"\r\n            data-aos=\"fade-up\"\r\n            data-aos-delay=\"50\"\r\n            className=\"row \"\r\n            onSubmit={submitHandler}\r\n          >\r\n            <div className=\"col-12 row my-2 m-0 p-0\">\r\n              <div className=\"col-12 form-group my-2\">\r\n                <h5 className=\"text-center text-success\">\r\n                  Total Over Score ({totalScore})\r\n                </h5>\r\n              </div>\r\n              <div className=\"col-6 form-group\">\r\n                <label htmlFor=\"team_input\">Ining</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"team_input\"\r\n                  value={ining ? '1st' : '2nd'}\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-6 form-group\">\r\n                <label htmlFor=\"team_input\">Over</label>\r\n                <input\r\n                  type=\"Number\"\r\n                  className=\"form-control\"\r\n                  min=\"0\"\r\n                  max={props.Ining.overs}\r\n                  id=\"over\"\r\n                  value={over}\r\n                  onChange={(e) => {\r\n                    setover(Number(e.target.value));\r\n                  }}\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-6 form-group\">\r\n                <label htmlFor=\"team_input\">Batsman A</label>\r\n                <select\r\n                  value={batsmanA}\r\n                  onChange={(e) => setbatsmanA(e.target.value)}\r\n                  className=\"form-control\"\r\n                  id=\"team_input\"\r\n                >\r\n                  <option value=\"select\">Select</option>\r\n                  {teambatsmans &&\r\n                    teambatsmans.length > 0 &&\r\n                    teambatsmans.map((val, id) => {\r\n                      return (\r\n                        <option value={val.user._id} key={id}>\r\n                          {val.user.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-6 form-group\">\r\n                <label htmlFor=\"team_input\">Batsman B</label>\r\n                <select\r\n                  value={batsmanB}\r\n                  onChange={(e) => setbatsmanB(e.target.value)}\r\n                  className=\"form-control\"\r\n                  id=\"team_input\"\r\n                >\r\n                  <option value=\"select\">Select</option>\r\n                  {teambatsmans &&\r\n                    teambatsmans.length > 0 &&\r\n                    teambatsmans.map((val, id) => {\r\n                      return (\r\n                        <option value={val.user._id} key={id}>\r\n                          {val.user.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 row my-2 m-0 p-0\">\r\n              {' '}\r\n              <div className=\"col-6 col-md-4 col-lg-4 form-group\">\r\n                <label htmlFor=\"team_input\">Select Bowler</label>\r\n                <select\r\n                  value={bowler}\r\n                  onChange={(e) => setbowler(e.target.value)}\r\n                  className=\"form-control\"\r\n                  id=\"team_input\"\r\n                >\r\n                  <option value=\"select\">Select</option>\r\n                  {teamBowlers &&\r\n                    teamBowlers.length > 0 &&\r\n                    teamBowlers.map((val, id) => {\r\n                      return (\r\n                        <option value={val.user._id} key={id}>\r\n                          {val.user.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-6 col-md-4 col-lg-4 form-group\">\r\n                <label htmlFor=\"team_input\">No Balls</label>\r\n                <input\r\n                  type=\"Number\"\r\n                  className=\"form-control\"\r\n                  id=\"no_balls\"\r\n                  value={noBalls}\r\n                  onChange={(e) => setnoBalls(Number(e.target.value))}\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-6 col-md-4 col-lg-4 form-group\">\r\n                <label htmlFor=\"team_input\">Wide Balls</label>\r\n                <input\r\n                  type=\"Number\"\r\n                  className=\"form-control\"\r\n                  id=\"wide_balls\"\r\n                  value={wideBalls}\r\n                  onChange={(e) => setwideBalls(Number(e.target.value))}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 row my-2 m-0 p-0\">\r\n              <div className=\"col-6 col-md-3 col-lg-2 form-group\">\r\n                <label htmlFor=\"team_input\">Batsman</label>\r\n                <select\r\n                  value={batsman}\r\n                  onChange={(e) => setbatsman(e.target.value)}\r\n                  className=\"form-control\"\r\n                  id=\"team_input\"\r\n                >\r\n                  <option value=\"choose\">choose</option>\r\n\r\n                  <option value={batsmanA}>Batsman A</option>\r\n                  <option value={batsmanB}>Batsman B</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-6 col-md-3 col-lg-2 form-group\">\r\n                <label htmlFor=\"team_input\">Played Balls</label>\r\n                <input\r\n                  type=\"Number\"\r\n                  className=\"form-control\"\r\n                  id=\"wide_balls\"\r\n                  min={1}\r\n                  max={previousPlayedBalls}\r\n                  value={playedBalls}\r\n                  onChange={(e) => setplayedBalls(Number(e.target.value))}\r\n                ></input>\r\n              </div>\r\n\r\n              <div className=\"col-6 col-md-3 col-lg-2 form-group\">\r\n                <label htmlFor=\"team_input\">Sixs</label>\r\n                <input\r\n                  type=\"Number\"\r\n                  className=\"form-control\"\r\n                  id=\"wide_balls\"\r\n                  value={sixs}\r\n                  onChange={(e) => {\r\n                    noBalls + playedBalls > sixs + fours &&\r\n                      setsixs(Number(e.target.value));\r\n                  }}\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-6 col-md-3 col-lg-2 form-group\">\r\n                <label htmlFor=\"team_input\">Fours</label>\r\n                <input\r\n                  type=\"Number\"\r\n                  className=\"form-control\"\r\n                  id=\"wide_balls\"\r\n                  value={fours}\r\n                  onChange={(e) => {\r\n                    noBalls + playedBalls > sixs + fours &&\r\n                      setfours(Number(e.target.value));\r\n                  }}\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-6 col-md-3 col-lg-2 form-group\">\r\n                <label htmlFor=\"team_input\">Runing</label>\r\n                <input\r\n                  type=\"Number\"\r\n                  className=\"form-control\"\r\n                  id=\"batsman_score\"\r\n                  value={running}\r\n                  onChange={(e) => setrunning(Number(e.target.value))}\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-6 col-md-3 col-lg-2 form-group\">\r\n                <label htmlFor=\"team_input\">Batsman Score</label>\r\n                <span className=\"form-control\" id=\"batsman_score\">\r\n                  {batsmanScore}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-12 col-md-12 col-lg-12 form-group row mx-auto mt-2\">\r\n                <h5 className=\"outHeading mt-2 text-danger\">OUT</h5>\r\n                <input\r\n                  className=\"form-control rounded outCheck mx-1\"\r\n                  type=\"checkbox\"\r\n                  focus={false}\r\n                  value={out}\r\n                  onChange={(e) => setout(!out)}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6 form-group mb-5\">\r\n              <button\r\n                className=\"btn btn-raised btn-block btn-success\"\r\n                type=\"submit\"\r\n                id=\"post\"\r\n              >\r\n                Update Score\r\n              </button>\r\n            </div>\r\n            <div className=\"col-6 form-group mb-5\">\r\n              <button\r\n                className=\"btn btn-raised btn-block btn-danger\"\r\n                onClick={() => finishIning()}\r\n                id=\"post\"\r\n              >\r\n                Finish {ining ? '1st' : '2nd'} Ining\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ining;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\StartIning\\LiveScoreIningCard.js",["702","703","704","705"],"import '../../../css/scoreCard.css';\r\nconst LiveScoreIningCard = (props) => {\r\n  return (\r\n    <div className=\"col-12  p-4\" data-aos=\"fade-up\" data-aos-delay=\"50\">\r\n      {props && props.payload && props.payload.schedule ? (\r\n        <div className=\"score-card p-4 rounded\">\r\n          <div className=\"headingName\">\r\n            <h6>\r\n              {props.payload.schedule.team_A_name} VS{' '}\r\n              {props.payload.schedule.team_B_name}\r\n            </h6>\r\n          </div>\r\n          <div className=\"row headingDate px-3\">\r\n            <p>\r\n              Today(<b className=\"liveMatch\">Live</b>)\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\" middleTeams py-2\">\r\n            <div className=\"row text-white\">\r\n              <div className=\"col\">\r\n                <span className=\"card-img\">\r\n                  <img\r\n                    className=\"rounded float-left\"\r\n                    src={props.payload.team_A_id.image.url}\r\n                    alt=\"teamA\"\r\n                  />\r\n                </span>\r\n                <span className=\"text-center\">\r\n                  <p>\r\n                    {props.payload.teamA_Ining_Status == true &&\r\n                    props.payload.teamB_Ining_Status == false\r\n                      ? 'Target'\r\n                      : 'Score'}{' '}\r\n                    : {props.payload.teamA_Score}/{props.payload.teamA_out}\r\n                  </p>\r\n                  <p>\r\n                    Overs({props.payload.teamA_over}.{props.payload.teamA_balls}\r\n                    )\r\n                  </p>\r\n                </span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <span className=\"card-img\">\r\n                  <img\r\n                    className=\"rounded float-right\"\r\n                    src={props.payload.team_B_id.image.url}\r\n                    alt=\"teamA\"\r\n                  />\r\n                </span>\r\n                <span className=\"text-center\">\r\n                  <p>\r\n                    {props.payload.teamB_Ining_Status == true &&\r\n                    props.payload.teamA_Ining_Status == false\r\n                      ? 'Target'\r\n                      : 'Score'}{' '}\r\n                    : {props.payload.teamB_Score}/{props.payload.teamB_out}\r\n                  </p>\r\n                  <p>\r\n                    Overs({props.payload.teamB_over}.{props.payload.teamB_balls}\r\n                    )\r\n                  </p>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footerToss text-center\">\r\n            <p className=\"\">\r\n              {props.payload.toss.name} wins the toss and elected to{' '}\r\n              {props.payload.tossDecision} first\r\n            </p>\r\n            <h6 className=\"text-uppercase text-success\">\r\n              {' '}\r\n              {props.payload.schedule.MatchCompleted &&\r\n                props.payload.teamB_Score > props.payload.teamA_Score && (\r\n                  <>\r\n                    {props.payload.schedule.team_B_name} wins by\r\n                    {props.payload.teamB_Score - props.payload.teamA_Score}\r\n                  </>\r\n                )}\r\n              {props.payload.schedule.MatchCompleted &&\r\n                props.payload.teamB_Score < props.payload.teamA_Score && (\r\n                  <>\r\n                    {props.payload.schedule.team_A_name} wins by{' '}\r\n                    {props.payload.teamA_Score - props.payload.teamB_Score} Runs\r\n                  </>\r\n                )}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveScoreIningCard;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\Payment\\TournamentPayment.js",["706","707"],"import {\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postData } from '../../../../routes/FetchData';\r\n\r\nimport MetaData from '../../../layout/MetaData';\r\n\r\nconst options = {\r\n  style: {\r\n    base: {\r\n      fontSize: '16px',\r\n    },\r\n    invalid: {\r\n      color: '#9e2146',\r\n    },\r\n  },\r\n};\r\n\r\nconst Payment = ({ history }) => {\r\n  const alert = useAlert();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { cartItems, shippingInfo } = useSelector((state) => state.cart);\r\n  const { error } = useSelector((state) => state.newOrder);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n    }\r\n  }, [dispatch, alert, error]);\r\n  const Data = {\r\n    user: user._id,\r\n\r\n    paymentInfo: { id: '', status: false },\r\n    totalPrice: 2000,\r\n  };\r\n\r\n  const paymentData = {\r\n    amount: Math.round(2000 * 100),\r\n    name: user.name,\r\n    email: user.email,\r\n    address: user.address,\r\n    postalCode: 839873,\r\n    city: user.city,\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    document.querySelector('#pay_btn').disabled = true;\r\n\r\n    let res;\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      res = await axios.post('/api/v1/payment/process/v', paymentData, config);\r\n\r\n      const clientSecret = res.data.client_secret;\r\n\r\n      console.log(clientSecret);\r\n\r\n      if (!stripe || !elements) {\r\n        return;\r\n      }\r\n\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardNumberElement),\r\n          billing_details: {\r\n            name: user.name,\r\n            email: user.email,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (result.error) {\r\n        alert.error(result.error.message);\r\n        document.querySelector('#pay_btn').disabled = false;\r\n      } else {\r\n        // The payment is processed or not\r\n        if (result.paymentIntent.status === 'succeeded') {\r\n          Data.paymentInfo = {\r\n            id: result.paymentIntent.id,\r\n            status: result.paymentIntent.status,\r\n          };\r\n          postData(`/api/v1/user/subscription/buy`, Data)\r\n            .then((res) => {\r\n              history.push('/success/subscription');\r\n            })\r\n            .catch((err) => {\r\n              alert.show('somthing went wrong');\r\n            });\r\n          //dispatch(createOrder(order));\r\n\r\n          localStorage.removeItem('cartItems');\r\n        } else {\r\n          alert.error('There is some issue while payment processing');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      document.querySelector('#pay_btn').disabled = false;\r\n      alert.error(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\" data-aos=\"fade-up\" data-aos-delay=\"50\">\r\n        <MetaData title={'Payment'} />\r\n\r\n        <div className=\"row wrapper\">\r\n          <div className=\"col-10 col-lg-5\">\r\n            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n              <h3 className=\"mb-4\">Card Info</h3>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"card_num_field\">Card Number</label>\r\n                <CardNumberElement\r\n                  type=\"text\"\r\n                  id=\"card_num_field\"\r\n                  className=\"form-control\"\r\n                  options={options}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                <CardExpiryElement\r\n                  type=\"text\"\r\n                  id=\"card_exp_field\"\r\n                  className=\"form-control\"\r\n                  options={options}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                <CardCvcElement\r\n                  type=\"text\"\r\n                  id=\"card_cvc_field\"\r\n                  className=\"form-control\"\r\n                  options={options}\r\n                />\r\n              </div>\r\n\r\n              <button id=\"pay_btn\" type=\"submit\" className=\"btn btn-block py-3\">\r\n                Pay Rs. 2000\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\tournamentAdmin\\Tournaments\\Payment\\SubscriptionSuccess.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\TopPlayers.js",["708","709"],"import { useState } from 'react';\r\nimport TopBatsman from './TopBatsman';\r\nimport TopBowler from './TopBowler';\r\nconst TopPlayers = () => {\r\n  const [playerType, setplayerType] = useState(true);\r\n  return (\r\n    <div>\r\n      <TopBatsman />\r\n      <TopBowler />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPlayers;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\TopBatsman.js",["710"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { getData } from '../../routes/FetchData';\r\nimport MetaData from '../layout/MetaData';\r\nconst TopBatsman = ({ match }) => {\r\n  const [TopPlayers, setTopPlayers] = useState([]);\r\n  console.log(TopPlayers);\r\n  const getAllData = () => {\r\n    getData('/api/v1/get/all/top/players/batsmans/list')\r\n      .then((res) => {\r\n        setTopPlayers(res.data.liveScore);\r\n      })\r\n      .catch((err) => console.log(err.response.data.msg));\r\n  };\r\n  useEffect(() => {\r\n    getAllData();\r\n  }, []);\r\n\r\n  const setUsers = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Image',\r\n          field: 'image',\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n        },\r\n        {\r\n          label: 'SIXS',\r\n          field: 'sixs',\r\n        },\r\n        {\r\n          label: 'FOURS',\r\n          field: 'fours',\r\n        },\r\n        {\r\n          label: 'OUT',\r\n          field: 'out',\r\n        },\r\n        {\r\n          label: 'SCORE',\r\n          field: 'score',\r\n          sort: 'desc',\r\n        },\r\n        {\r\n          label: 'PLAYED BALLS',\r\n          field: 'playedballs',\r\n        },\r\n\r\n        {\r\n          label: 'Strike Rate',\r\n          field: 'strike',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    TopPlayers.forEach((user) => {\r\n      var bal = user.score;\r\n      var Out = user.out;\r\n      var avrg = bal / Out;\r\n      data.rows.push({\r\n        image: (\r\n          <>\r\n            <img\r\n              src={user.allplayers[0].imageLink}\r\n              alt={user.allplayers[0].name}\r\n              className=\"avatar2\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n            ></img>\r\n          </>\r\n        ),\r\n        name: user.allplayers[0].name,\r\n        sixs: user.sixs,\r\n        fours: user.fours,\r\n        out: user.out,\r\n        score: user.score,\r\n        playedballs: user.playedBalls,\r\n        strike: ((user.score / user.playedBalls) * 100).toFixed(1),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'TopPlayerss'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-12\">\r\n          <Fragment>\r\n            <div className=\"d-flex mx-3\">\r\n              <h3 className=\"my-5\">Top CrickHub Batsmans</h3>\r\n            </div>\r\n\r\n            <MDBDataTable\r\n              data={setUsers()}\r\n              className=\"px-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-delay=\"50\"\r\n              bordered\r\n              striped\r\n              hover\r\n            />\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TopBatsman;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\TopBowler.js",["711"],"import { MDBDataTable } from 'mdbreact';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { getData } from '../../routes/FetchData';\r\nimport MetaData from '../layout/MetaData';\r\nconst TopBowler = ({ match }) => {\r\n  const [TopPlayers, setTopPlayers] = useState([]);\r\n  console.log(TopPlayers);\r\n  const getAllData = () => {\r\n    getData('/api/v1/get/all/top/players/bowlers/list')\r\n      .then((res) => {\r\n        setTopPlayers(res.data.liveScore);\r\n      })\r\n      .catch((err) => console.log(err.response.data.msg));\r\n  };\r\n  useEffect(() => {\r\n    getAllData();\r\n  }, []);\r\n\r\n  const setUsers = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Image',\r\n          field: 'image',\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n        },\r\n        {\r\n          label: 'SIXS',\r\n          field: 'sixs',\r\n        },\r\n        {\r\n          label: 'FOURS',\r\n          field: 'fours',\r\n        },\r\n        {\r\n          label: 'OUT',\r\n          field: 'out',\r\n        },\r\n\r\n        {\r\n          label: 'NO BALLS',\r\n          field: 'noballs',\r\n        },\r\n        {\r\n          label: 'WIDE BALLS',\r\n          field: 'wideballs',\r\n        },\r\n        {\r\n          label: 'OVERS',\r\n          field: 'overs',\r\n        },\r\n        {\r\n          label: 'SCORE',\r\n          field: 'score',\r\n        },\r\n\r\n        {\r\n          label: 'ECONOMIC RATE',\r\n          field: 'eRate',\r\n          sort: 'Asc',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    TopPlayers.forEach((user) => {\r\n      var bal = user.score;\r\n      var Out = user.out;\r\n      var avrg = bal / Out;\r\n      data.rows.push({\r\n        image: (\r\n          <>\r\n            <img\r\n              src={user.allplayers[0].imageLink}\r\n              alt={user.allplayers[0].name}\r\n              className=\"avatar2\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n            ></img>\r\n          </>\r\n        ),\r\n        name: user.allplayers[0].name,\r\n        sixs: user.sixs,\r\n        fours: user.fours,\r\n        out: user.out,\r\n        score: user.score,\r\n        noballs: user.noBalls,\r\n        wideballs: user.wideBalls,\r\n        overs: (user.playedBalls / 6).toFixed(1),\r\n        eRate: (user.score / (user.playedBalls / 6)).toFixed(1),\r\n\r\n        // strike: ((user.score / user.playedBalls) * 100).toFixed(1),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'TopPlayerss'} />\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 col-md-12\">\r\n          <Fragment>\r\n            <div className=\"d-flex mx-3\">\r\n              <h3 className=\"my-5\">Top CrickHub Bowlers</h3>\r\n            </div>\r\n\r\n            <MDBDataTable\r\n              data={setUsers()}\r\n              className=\"px-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-delay=\"50\"\r\n              bordered\r\n              striped\r\n              hover\r\n            />\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TopBowler;\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Live\\PastMatches.js",["712"],{"ruleId":"713","replacedBy":"714"},{"ruleId":"715","replacedBy":"716"},{"ruleId":"717","severity":1,"message":"718","line":93,"column":23,"nodeType":"719","endLine":99,"endColumn":25},{"ruleId":"720","severity":1,"message":"721","line":12,"column":9,"nodeType":"722","messageId":"723","endLine":12,"endColumn":17},{"ruleId":"720","severity":1,"message":"721","line":12,"column":9,"nodeType":"722","messageId":"723","endLine":12,"endColumn":17},{"ruleId":"720","severity":1,"message":"724","line":14,"column":20,"nodeType":"722","messageId":"723","endLine":14,"endColumn":25},{"ruleId":"720","severity":1,"message":"725","line":14,"column":27,"nodeType":"722","messageId":"723","endLine":14,"endColumn":32},{"ruleId":"720","severity":1,"message":"726","line":15,"column":11,"nodeType":"722","messageId":"723","endLine":15,"endColumn":20},{"ruleId":"720","severity":1,"message":"727","line":34,"column":11,"nodeType":"722","messageId":"723","endLine":34,"endColumn":18},{"ruleId":"720","severity":1,"message":"728","line":15,"column":10,"nodeType":"722","messageId":"723","endLine":15,"endColumn":15},{"ruleId":"720","severity":1,"message":"729","line":15,"column":17,"nodeType":"722","messageId":"723","endLine":15,"endColumn":25},{"ruleId":"720","severity":1,"message":"730","line":16,"column":10,"nodeType":"722","messageId":"723","endLine":16,"endColumn":13},{"ruleId":"720","severity":1,"message":"731","line":22,"column":11,"nodeType":"722","messageId":"723","endLine":22,"endColumn":18},{"ruleId":"720","severity":1,"message":"732","line":106,"column":12,"nodeType":"722","messageId":"723","endLine":106,"endColumn":24},{"ruleId":"733","severity":1,"message":"734","line":125,"column":25,"nodeType":"735","messageId":"736","endLine":125,"endColumn":27},{"ruleId":"720","severity":1,"message":"737","line":10,"column":10,"nodeType":"722","messageId":"723","endLine":10,"endColumn":19},{"ruleId":"720","severity":1,"message":"738","line":10,"column":21,"nodeType":"722","messageId":"723","endLine":10,"endColumn":33},{"ruleId":"739","severity":1,"message":"740","line":29,"column":6,"nodeType":"741","endLine":29,"endColumn":8,"suggestions":"742"},{"ruleId":"717","severity":1,"message":"718","line":107,"column":23,"nodeType":"719","endLine":113,"endColumn":25},{"ruleId":"739","severity":1,"message":"740","line":27,"column":6,"nodeType":"741","endLine":27,"endColumn":8,"suggestions":"743"},{"ruleId":"720","severity":1,"message":"727","line":42,"column":5,"nodeType":"722","messageId":"723","endLine":42,"endColumn":12},{"ruleId":"720","severity":1,"message":"744","line":25,"column":10,"nodeType":"722","messageId":"723","endLine":25,"endColumn":22},{"ruleId":"720","severity":1,"message":"745","line":9,"column":11,"nodeType":"722","messageId":"723","endLine":9,"endColumn":15},{"ruleId":"720","severity":1,"message":"745","line":17,"column":11,"nodeType":"722","messageId":"723","endLine":17,"endColumn":15},{"ruleId":"713","replacedBy":"746"},{"ruleId":"715","replacedBy":"747"},{"ruleId":"720","severity":1,"message":"748","line":14,"column":7,"nodeType":"722","messageId":"723","endLine":14,"endColumn":12},{"ruleId":"720","severity":1,"message":"749","line":18,"column":17,"nodeType":"722","messageId":"723","endLine":18,"endColumn":25},{"ruleId":"720","severity":1,"message":"750","line":21,"column":18,"nodeType":"722","messageId":"723","endLine":21,"endColumn":27},{"ruleId":"720","severity":1,"message":"751","line":22,"column":18,"nodeType":"722","messageId":"723","endLine":22,"endColumn":27},{"ruleId":"739","severity":1,"message":"752","line":58,"column":6,"nodeType":"741","endLine":68,"endColumn":4,"suggestions":"753"},{"ruleId":"720","severity":1,"message":"754","line":78,"column":12,"nodeType":"722","messageId":"723","endLine":78,"endColumn":25},{"ruleId":"720","severity":1,"message":"751","line":20,"column":18,"nodeType":"722","messageId":"723","endLine":20,"endColumn":27},{"ruleId":"739","severity":1,"message":"752","line":56,"column":6,"nodeType":"741","endLine":66,"endColumn":4,"suggestions":"755"},{"ruleId":"733","severity":1,"message":"756","line":169,"column":38,"nodeType":"735","messageId":"736","endLine":169,"endColumn":40},{"ruleId":"739","severity":1,"message":"757","line":42,"column":6,"nodeType":"741","endLine":42,"endColumn":39,"suggestions":"758"},{"ruleId":"720","severity":1,"message":"759","line":44,"column":9,"nodeType":"722","messageId":"723","endLine":44,"endColumn":30},{"ruleId":"760","severity":1,"message":"761","line":86,"column":13,"nodeType":"719","messageId":"762","endLine":90,"endColumn":14,"fix":"763"},{"ruleId":"739","severity":1,"message":"764","line":51,"column":6,"nodeType":"741","endLine":51,"endColumn":72,"suggestions":"765"},{"ruleId":"720","severity":1,"message":"766","line":53,"column":9,"nodeType":"722","messageId":"723","endLine":53,"endColumn":26},{"ruleId":"720","severity":1,"message":"724","line":12,"column":20,"nodeType":"722","messageId":"723","endLine":12,"endColumn":25},{"ruleId":"720","severity":1,"message":"725","line":12,"column":27,"nodeType":"722","messageId":"723","endLine":12,"endColumn":32},{"ruleId":"739","severity":1,"message":"767","line":26,"column":6,"nodeType":"741","endLine":26,"endColumn":8,"suggestions":"768"},{"ruleId":"720","severity":1,"message":"769","line":39,"column":9,"nodeType":"722","messageId":"723","endLine":39,"endColumn":23},{"ruleId":"770","severity":1,"message":"771","line":14,"column":25,"nodeType":"772","messageId":"773","endLine":14,"endColumn":27},{"ruleId":"774","severity":1,"message":"775","line":78,"column":35,"nodeType":"719","endLine":78,"endColumn":47},{"ruleId":"774","severity":1,"message":"775","line":120,"column":45,"nodeType":"719","endLine":120,"endColumn":57},{"ruleId":"739","severity":1,"message":"776","line":50,"column":6,"nodeType":"741","endLine":50,"endColumn":8,"suggestions":"777"},{"ruleId":"739","severity":1,"message":"778","line":45,"column":6,"nodeType":"741","endLine":45,"endColumn":48,"suggestions":"779"},{"ruleId":"760","severity":1,"message":"761","line":154,"column":29,"nodeType":"719","messageId":"762","endLine":158,"endColumn":30,"fix":"780"},{"ruleId":"720","severity":1,"message":"781","line":11,"column":25,"nodeType":"722","messageId":"723","endLine":11,"endColumn":41},{"ruleId":"720","severity":1,"message":"727","line":18,"column":11,"nodeType":"722","messageId":"723","endLine":18,"endColumn":18},{"ruleId":"739","severity":1,"message":"782","line":49,"column":6,"nodeType":"741","endLine":49,"endColumn":48,"suggestions":"783"},{"ruleId":"720","severity":1,"message":"727","line":21,"column":11,"nodeType":"722","messageId":"723","endLine":21,"endColumn":18},{"ruleId":"720","severity":1,"message":"745","line":19,"column":11,"nodeType":"722","messageId":"723","endLine":19,"endColumn":15},{"ruleId":"739","severity":1,"message":"784","line":44,"column":6,"nodeType":"741","endLine":44,"endColumn":50,"suggestions":"785"},{"ruleId":"720","severity":1,"message":"786","line":46,"column":9,"nodeType":"722","messageId":"723","endLine":46,"endColumn":28},{"ruleId":"739","severity":1,"message":"787","line":29,"column":6,"nodeType":"741","endLine":29,"endColumn":34,"suggestions":"788"},{"ruleId":"789","severity":1,"message":"790","line":29,"column":6,"nodeType":"741","messageId":"791","endLine":29,"endColumn":34},{"ruleId":"739","severity":1,"message":"792","line":44,"column":6,"nodeType":"741","endLine":44,"endColumn":50,"suggestions":"793"},{"ruleId":"760","severity":1,"message":"761","line":93,"column":13,"nodeType":"719","messageId":"762","endLine":97,"endColumn":14,"fix":"794"},{"ruleId":"720","severity":1,"message":"745","line":22,"column":11,"nodeType":"722","messageId":"723","endLine":22,"endColumn":15},{"ruleId":"733","severity":1,"message":"734","line":37,"column":15,"nodeType":"735","messageId":"736","endLine":37,"endColumn":17},{"ruleId":"739","severity":1,"message":"795","line":73,"column":6,"nodeType":"741","endLine":73,"endColumn":69,"suggestions":"796"},{"ruleId":"720","severity":1,"message":"724","line":13,"column":20,"nodeType":"722","messageId":"723","endLine":13,"endColumn":25},{"ruleId":"720","severity":1,"message":"725","line":13,"column":27,"nodeType":"722","messageId":"723","endLine":13,"endColumn":32},{"ruleId":"739","severity":1,"message":"767","line":27,"column":6,"nodeType":"741","endLine":27,"endColumn":8,"suggestions":"797"},{"ruleId":"733","severity":1,"message":"734","line":108,"column":30,"nodeType":"735","messageId":"736","endLine":108,"endColumn":32},{"ruleId":"720","severity":1,"message":"727","line":27,"column":5,"nodeType":"722","messageId":"723","endLine":27,"endColumn":12},{"ruleId":"720","severity":1,"message":"798","line":28,"column":12,"nodeType":"722","messageId":"723","endLine":28,"endColumn":25},{"ruleId":"720","severity":1,"message":"799","line":59,"column":9,"nodeType":"722","messageId":"723","endLine":59,"endColumn":19},{"ruleId":"739","severity":1,"message":"800","line":90,"column":6,"nodeType":"741","endLine":90,"endColumn":73,"suggestions":"801"},{"ruleId":"760","severity":1,"message":"761","line":173,"column":27,"nodeType":"719","messageId":"762","endLine":177,"endColumn":28,"fix":"802"},{"ruleId":"720","severity":1,"message":"745","line":21,"column":11,"nodeType":"722","messageId":"723","endLine":21,"endColumn":15},{"ruleId":"733","severity":1,"message":"734","line":38,"column":15,"nodeType":"735","messageId":"736","endLine":38,"endColumn":17},{"ruleId":"739","severity":1,"message":"803","line":74,"column":6,"nodeType":"741","endLine":74,"endColumn":75,"suggestions":"804"},{"ruleId":"739","severity":1,"message":"776","line":26,"column":6,"nodeType":"741","endLine":26,"endColumn":12,"suggestions":"805"},{"ruleId":"720","severity":1,"message":"806","line":11,"column":10,"nodeType":"722","messageId":"723","endLine":11,"endColumn":20},{"ruleId":"720","severity":1,"message":"807","line":11,"column":22,"nodeType":"722","messageId":"723","endLine":11,"endColumn":35},{"ruleId":"720","severity":1,"message":"808","line":13,"column":9,"nodeType":"722","messageId":"723","endLine":13,"endColumn":14},{"ruleId":"739","severity":1,"message":"809","line":29,"column":6,"nodeType":"741","endLine":29,"endColumn":42,"suggestions":"810"},{"ruleId":"739","severity":1,"message":"811","line":34,"column":6,"nodeType":"741","endLine":34,"endColumn":8,"suggestions":"812"},{"ruleId":"739","severity":1,"message":"764","line":53,"column":6,"nodeType":"741","endLine":53,"endColumn":72,"suggestions":"813"},{"ruleId":"720","severity":1,"message":"808","line":44,"column":9,"nodeType":"722","messageId":"723","endLine":44,"endColumn":14},{"ruleId":"739","severity":1,"message":"814","line":48,"column":6,"nodeType":"741","endLine":48,"endColumn":50,"suggestions":"815"},{"ruleId":"720","severity":1,"message":"816","line":17,"column":10,"nodeType":"722","messageId":"723","endLine":17,"endColumn":15},{"ruleId":"720","severity":1,"message":"817","line":17,"column":17,"nodeType":"722","messageId":"723","endLine":17,"endColumn":25},{"ruleId":"720","severity":1,"message":"818","line":19,"column":10,"nodeType":"722","messageId":"723","endLine":19,"endColumn":22},{"ruleId":"720","severity":1,"message":"727","line":26,"column":5,"nodeType":"722","messageId":"723","endLine":26,"endColumn":12},{"ruleId":"720","severity":1,"message":"798","line":27,"column":12,"nodeType":"722","messageId":"723","endLine":27,"endColumn":25},{"ruleId":"720","severity":1,"message":"819","line":64,"column":9,"nodeType":"722","messageId":"723","endLine":64,"endColumn":17},{"ruleId":"739","severity":1,"message":"820","line":100,"column":6,"nodeType":"741","endLine":100,"endColumn":64,"suggestions":"821"},{"ruleId":"733","severity":1,"message":"734","line":129,"column":34,"nodeType":"735","messageId":"736","endLine":129,"endColumn":36},{"ruleId":"733","severity":1,"message":"734","line":129,"column":55,"nodeType":"735","messageId":"736","endLine":129,"endColumn":57},{"ruleId":"720","severity":1,"message":"822","line":14,"column":10,"nodeType":"722","messageId":"723","endLine":14,"endColumn":18},{"ruleId":"720","severity":1,"message":"823","line":14,"column":20,"nodeType":"722","messageId":"723","endLine":14,"endColumn":31},{"ruleId":"733","severity":1,"message":"734","line":25,"column":25,"nodeType":"735","messageId":"736","endLine":25,"endColumn":27},{"ruleId":"739","severity":1,"message":"824","line":39,"column":6,"nodeType":"741","endLine":39,"endColumn":14,"suggestions":"825"},{"ruleId":"739","severity":1,"message":"824","line":50,"column":6,"nodeType":"741","endLine":50,"endColumn":23,"suggestions":"826"},{"ruleId":"739","severity":1,"message":"827","line":31,"column":6,"nodeType":"741","endLine":31,"endColumn":19,"suggestions":"828"},{"ruleId":"733","severity":1,"message":"756","line":150,"column":33,"nodeType":"735","messageId":"736","endLine":150,"endColumn":35},{"ruleId":"739","severity":1,"message":"829","line":18,"column":9,"nodeType":"830","endLine":26,"endColumn":4},{"ruleId":"831","severity":1,"message":"832","line":4,"column":3,"nodeType":"833","messageId":"834","endLine":11,"endColumn":4},{"ruleId":"717","severity":1,"message":"718","line":17,"column":13,"nodeType":"719","endLine":17,"endColumn":50},{"ruleId":"835","severity":1,"message":"836","line":19,"column":17,"nodeType":"719","endLine":23,"endColumn":19},{"ruleId":"720","severity":1,"message":"727","line":23,"column":10,"nodeType":"722","messageId":"723","endLine":23,"endColumn":17},{"ruleId":"720","severity":1,"message":"837","line":27,"column":16,"nodeType":"722","messageId":"723","endLine":27,"endColumn":23},{"ruleId":"720","severity":1,"message":"838","line":28,"column":9,"nodeType":"722","messageId":"723","endLine":28,"endColumn":16},{"ruleId":"733","severity":1,"message":"734","line":15,"column":50,"nodeType":"735","messageId":"736","endLine":15,"endColumn":52},{"ruleId":"733","severity":1,"message":"734","line":36,"column":53,"nodeType":"735","messageId":"736","endLine":36,"endColumn":55},{"ruleId":"733","severity":1,"message":"734","line":37,"column":52,"nodeType":"735","messageId":"736","endLine":37,"endColumn":54},{"ruleId":"733","severity":1,"message":"734","line":57,"column":53,"nodeType":"735","messageId":"736","endLine":57,"endColumn":55},{"ruleId":"733","severity":1,"message":"734","line":58,"column":52,"nodeType":"735","messageId":"736","endLine":58,"endColumn":54},{"ruleId":"720","severity":1,"message":"839","line":6,"column":10,"nodeType":"722","messageId":"723","endLine":6,"endColumn":16},{"ruleId":"720","severity":1,"message":"840","line":6,"column":18,"nodeType":"722","messageId":"723","endLine":6,"endColumn":27},{"ruleId":"720","severity":1,"message":"841","line":9,"column":9,"nodeType":"722","messageId":"723","endLine":9,"endColumn":21},{"ruleId":"720","severity":1,"message":"842","line":36,"column":10,"nodeType":"722","messageId":"723","endLine":36,"endColumn":15},{"ruleId":"770","severity":1,"message":"771","line":83,"column":34,"nodeType":"772","messageId":"773","endLine":83,"endColumn":36},{"ruleId":"733","severity":1,"message":"734","line":84,"column":26,"nodeType":"735","messageId":"736","endLine":84,"endColumn":28},{"ruleId":"770","severity":1,"message":"771","line":87,"column":33,"nodeType":"772","messageId":"773","endLine":87,"endColumn":35},{"ruleId":"733","severity":1,"message":"734","line":88,"column":26,"nodeType":"735","messageId":"736","endLine":88,"endColumn":28},{"ruleId":"739","severity":1,"message":"843","line":92,"column":6,"nodeType":"741","endLine":92,"endColumn":23,"suggestions":"844"},{"ruleId":"733","severity":1,"message":"734","line":97,"column":29,"nodeType":"735","messageId":"736","endLine":97,"endColumn":31},{"ruleId":"733","severity":1,"message":"734","line":98,"column":32,"nodeType":"735","messageId":"736","endLine":98,"endColumn":34},{"ruleId":"733","severity":1,"message":"734","line":99,"column":38,"nodeType":"735","messageId":"736","endLine":99,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":100,"column":38,"nodeType":"735","messageId":"736","endLine":100,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":108,"column":29,"nodeType":"735","messageId":"736","endLine":108,"endColumn":31},{"ruleId":"733","severity":1,"message":"734","line":109,"column":32,"nodeType":"735","messageId":"736","endLine":109,"endColumn":34},{"ruleId":"733","severity":1,"message":"734","line":110,"column":38,"nodeType":"735","messageId":"736","endLine":110,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":111,"column":38,"nodeType":"735","messageId":"736","endLine":111,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":121,"column":29,"nodeType":"735","messageId":"736","endLine":121,"endColumn":31},{"ruleId":"733","severity":1,"message":"734","line":122,"column":32,"nodeType":"735","messageId":"736","endLine":122,"endColumn":34},{"ruleId":"733","severity":1,"message":"734","line":123,"column":38,"nodeType":"735","messageId":"736","endLine":123,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":124,"column":38,"nodeType":"735","messageId":"736","endLine":124,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":132,"column":29,"nodeType":"735","messageId":"736","endLine":132,"endColumn":31},{"ruleId":"733","severity":1,"message":"734","line":133,"column":32,"nodeType":"735","messageId":"736","endLine":133,"endColumn":34},{"ruleId":"733","severity":1,"message":"734","line":134,"column":38,"nodeType":"735","messageId":"736","endLine":134,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":135,"column":38,"nodeType":"735","messageId":"736","endLine":135,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":142,"column":47,"nodeType":"735","messageId":"736","endLine":142,"endColumn":49},{"ruleId":"733","severity":1,"message":"734","line":148,"column":47,"nodeType":"735","messageId":"736","endLine":148,"endColumn":49},{"ruleId":"739","severity":1,"message":"845","line":162,"column":6,"nodeType":"741","endLine":162,"endColumn":8,"suggestions":"846"},{"ruleId":"739","severity":1,"message":"847","line":171,"column":6,"nodeType":"741","endLine":171,"endColumn":19,"suggestions":"848"},{"ruleId":"733","severity":1,"message":"734","line":179,"column":29,"nodeType":"735","messageId":"736","endLine":179,"endColumn":31},{"ruleId":"739","severity":1,"message":"849","line":184,"column":6,"nodeType":"741","endLine":184,"endColumn":27,"suggestions":"850"},{"ruleId":"739","severity":1,"message":"851","line":189,"column":6,"nodeType":"741","endLine":189,"endColumn":49,"suggestions":"852"},{"ruleId":"733","severity":1,"message":"734","line":193,"column":25,"nodeType":"735","messageId":"736","endLine":193,"endColumn":27},{"ruleId":"739","severity":1,"message":"853","line":204,"column":6,"nodeType":"741","endLine":204,"endColumn":14,"suggestions":"854"},{"ruleId":"733","severity":1,"message":"734","line":208,"column":25,"nodeType":"735","messageId":"736","endLine":208,"endColumn":27},{"ruleId":"739","severity":1,"message":"855","line":216,"column":6,"nodeType":"741","endLine":216,"endColumn":14,"suggestions":"856"},{"ruleId":"733","severity":1,"message":"734","line":230,"column":38,"nodeType":"735","messageId":"736","endLine":230,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":235,"column":38,"nodeType":"735","messageId":"736","endLine":235,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":240,"column":38,"nodeType":"735","messageId":"736","endLine":240,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":245,"column":38,"nodeType":"735","messageId":"736","endLine":245,"endColumn":40},{"ruleId":"733","severity":1,"message":"734","line":290,"column":44,"nodeType":"735","messageId":"736","endLine":290,"endColumn":46},{"ruleId":"733","severity":1,"message":"734","line":31,"column":55,"nodeType":"735","messageId":"736","endLine":31,"endColumn":57},{"ruleId":"733","severity":1,"message":"734","line":32,"column":54,"nodeType":"735","messageId":"736","endLine":32,"endColumn":56},{"ruleId":"733","severity":1,"message":"734","line":53,"column":55,"nodeType":"735","messageId":"736","endLine":53,"endColumn":57},{"ruleId":"733","severity":1,"message":"734","line":54,"column":54,"nodeType":"735","messageId":"736","endLine":54,"endColumn":56},{"ruleId":"720","severity":1,"message":"857","line":34,"column":11,"nodeType":"722","messageId":"723","endLine":34,"endColumn":20},{"ruleId":"720","severity":1,"message":"858","line":34,"column":22,"nodeType":"722","messageId":"723","endLine":34,"endColumn":34},{"ruleId":"720","severity":1,"message":"859","line":5,"column":10,"nodeType":"722","messageId":"723","endLine":5,"endColumn":20},{"ruleId":"720","severity":1,"message":"860","line":5,"column":22,"nodeType":"722","messageId":"723","endLine":5,"endColumn":35},{"ruleId":"720","severity":1,"message":"861","line":63,"column":11,"nodeType":"722","messageId":"723","endLine":63,"endColumn":15},{"ruleId":"720","severity":1,"message":"861","line":72,"column":11,"nodeType":"722","messageId":"723","endLine":72,"endColumn":15},{"ruleId":"739","severity":1,"message":"824","line":24,"column":6,"nodeType":"741","endLine":24,"endColumn":23,"suggestions":"862"},"no-native-reassign",["863"],"no-negated-in-lhs",["864"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'users' is assigned a value but never used.","'isDeleted' is assigned a value but never used.","'loading' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'err' is assigned a value but never used.","'product' is assigned a value but never used.","'cancelHandle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'blogsData' is assigned a value but never used.","'setblogsData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alert' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["865"],["866"],"'weeklyProfit' is assigned a value but never used.","'user' is assigned a value but never used.",["863"],["864"],"'Range' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setRating' is assigned a value but never used.","'setstatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["867"],"'filterHandler' is defined but never used.",["868"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'deleteError', 'isDeleted', 'schedules', and 'tournamentId'. Either include them or remove the dependency array.",["869"],"'deletescheduleHandler' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"870","text":"871"},"React Hook useEffect has missing dependencies: 'errorDetail', 'tournament', and 'tournamentId'. Either include them or remove the dependency array.",["872"],"'deleteteamHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array.",["873"],"'requestHandler' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getProfileData'. Either include it or remove the dependency array.",["874"],"React Hook useEffect has missing dependencies: 'schedualError' and 'tournamentId'. Either include them or remove the dependency array.",["875"],{"range":"876","text":"871"},"'setTournament_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'teamId'. Either include it or remove the dependency array.",["877"],"React Hook useEffect has a missing dependency: 'deleteError'. Either include it or remove the dependency array.",["878"],"'deletePlayerHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'scheduleId' and 'toss'. Either include them or remove the dependency array. You can also do a functional update 'setToss(t => ...)' if you only need 'toss' in the 'setToss' call.",["879"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","React Hook useEffect has missing dependencies: 'deleteError', 'schedules', and 'tournamentId'. Either include them or remove the dependency array.",["880"],{"range":"881","text":"871"},"React Hook useEffect has missing dependencies: 'teamId' and 'tournament_id'. Either include them or remove the dependency array.",["882"],["883"],"'schedualError' is assigned a value but never used.","'UpdateData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'scheduleId' and 'tournamentId'. Either include them or remove the dependency array.",["884"],{"range":"885","text":"871"},"React Hook useEffect has a missing dependency: 'tournamentId'. Either include it or remove the dependency array.",["886"],["887"],"'validation' is assigned a value but never used.","'setValidation' is assigned a value but never used.","'alert' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["888"],"React Hook useEffect has missing dependencies: 'dispatch' and 'error'. Either include them or remove the dependency array.",["889"],["890"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["891"],"'image' is assigned a value but never used.","'setimage' is assigned a value but never used.","'tournamentId' is assigned a value but never used.","'SendData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.scheduleId'. Either include it or remove the dependency array.",["892"],"'liveLoad' is assigned a value but never used.","'setliveLoad' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'load'. Either include it or remove the dependency array. You can also do a functional update 'setLoad(l => ...)' if you only need 'load' in the 'setLoad' call.",["893"],["894"],"React Hook useEffect has a missing dependency: 'heading'. Either include it or remove the dependency array.",["895"],"The 'handleScroll' function makes the dependencies of useEffect Hook (at line 31) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleScroll' in its own useCallback() Hook.","VariableDeclarator","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setPage' is assigned a value but never used.","'pageEnd' is assigned a value but never used.","'cancel' is assigned a value but never used.","'setCancel' is assigned a value but never used.","'onEmojiClick' is assigned a value but never used.","'teams' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'teamBowlers' and 'teambatsmans'. Either include them or remove the dependency array.",["896"],"React Hook useEffect has missing dependencies: 'getTeamsData', 'props.Ining._id', 'props.Ining.teamA_Ining_Status', 'props.Ining.teamB_Ining_Status', 'props.Ining.team_A_id', 'props.Ining.team_B_id', 'props.Ining.toss._id', and 'props.Ining.tossDecision'. Either include them or remove the dependency array. If 'setbatingTeamID' needs the current value of 'props.Ining.team_A_id', you can also switch to useReducer instead of useState and read 'props.Ining.team_A_id' in the reducer.",["897"],"React Hook useEffect has missing dependencies: 'noBalls', 'playedBalls', and 'running'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setbatsmanScore' needs the current value of 'running'.",["898"],"React Hook useEffect has a missing dependency: 'over'. Either include it or remove the dependency array. You can also do a functional update 'setover(o => ...)' if you only need 'over' in the 'setover' call.",["899"],"React Hook useEffect has missing dependencies: 'fours' and 'sixs'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setbatsmanScore' needs the current value of 'sixs'.",["900"],"React Hook useEffect has missing dependencies: 'alert' and 'props.Ining._id'. Either include them or remove the dependency array.",["901"],"React Hook useEffect has missing dependencies: 'alert' and 'history'. Either include them or remove the dependency array.",["902"],"'cartItems' is assigned a value but never used.","'shippingInfo' is assigned a value but never used.","'playerType' is assigned a value but never used.","'setplayerType' is assigned a value but never used.","'avrg' is assigned a value but never used.",["903"],"no-global-assign","no-unsafe-negation",{"desc":"904","fix":"905"},{"desc":"904","fix":"906"},{"desc":"907","fix":"908"},{"desc":"907","fix":"909"},{"desc":"910","fix":"911"},[2421,2421]," rel=\"noreferrer\"",{"desc":"912","fix":"913"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},[6524,6524],{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},[2600,2600],{"desc":"928","fix":"929"},{"desc":"914","fix":"930"},{"desc":"931","fix":"932"},[6855,6855],{"desc":"933","fix":"934"},{"desc":"935","fix":"936"},{"desc":"937","fix":"938"},{"desc":"939","fix":"940"},{"desc":"912","fix":"941"},{"desc":"942","fix":"943"},{"desc":"944","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"960","fix":"961"},{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"948","fix":"966"},"Update the dependencies array to be: [alert, props.match.params.id]",{"range":"967","text":"968"},{"range":"969","text":"968"},"Update the dependencies array to be: [dispatch, alert, error, keyword, currentPage, range, category, rating, status, price]",{"range":"970","text":"971"},{"range":"972","text":"971"},"Update the dependencies array to be: [dispatch, alert, error, history, schedules, tournamentId, deleteError, isDeleted]",{"range":"973","text":"974"},"Update the dependencies array to be: [dispatch, alert, error, deleteError, isDeleted, history, noTeams, tournament, tournamentId, errorDetail]",{"range":"975","text":"976"},"Update the dependencies array to be: [getAllData]",{"range":"977","text":"978"},"Update the dependencies array to be: [getProfileData]",{"range":"979","text":"980"},"Update the dependencies array to be: [dispatch, alert, error, history, success, tournamentId, schedualError]",{"range":"981","text":"982"},"Update the dependencies array to be: [dispatch, alert, error, success, history, teamId]",{"range":"983","text":"984"},"Update the dependencies array to be: [dispatch, alert, error, isDeleted, history, deleteError]",{"range":"985","text":"986"},"Update the dependencies array to be: [dispatch, alert, history, scheduleId, toss]",{"range":"987","text":"988"},"Update the dependencies array to be: [dispatch, alert, error, isDeleted, history, schedules, tournamentId, deleteError]",{"range":"989","text":"990"},"Update the dependencies array to be: [dispatch, alert, error, isUpdated, updateError, team, history, teamId, tournament_id]",{"range":"991","text":"992"},{"range":"993","text":"978"},"Update the dependencies array to be: [dispatch, alert, error, isUpdated, updateError, schedule, history, scheduleId, tournamentId]",{"range":"994","text":"995"},"Update the dependencies array to be: [dispatch, alert, error, isUpdated, updateError, tournament, history, tournamentId]",{"range":"996","text":"997"},"Update the dependencies array to be: [getProfileData, user]",{"range":"998","text":"999"},"Update the dependencies array to be: [dispatch, isAuthenticated, history, redirect]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [dispatch, error]",{"range":"1002","text":"1003"},{"range":"1004","text":"976"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"1005","text":"1006"},"Update the dependencies array to be: [dispatch, alert, error, isUpdated, updateError, schedule, props.scheduleId]",{"range":"1007","text":"1008"},"Update the dependencies array to be: [load, socket]",{"range":"1009","text":"1010"},"Update the dependencies array to be: [dispatch, alert, load]",{"range":"1011","text":"1012"},"Update the dependencies array to be: [valid, user, heading]",{"range":"1013","text":"1014"},"Update the dependencies array to be: [batsman, bowler, teamBowlers, teambatsmans]",{"range":"1015","text":"1016"},"Update the dependencies array to be: [getTeamsData, props.Ining._id, props.Ining.teamA_Ining_Status, props.Ining.teamB_Ining_Status, props.Ining.team_A_id, props.Ining.team_B_id, props.Ining.toss._id, props.Ining.tossDecision]",{"range":"1017","text":"1018"},"Update the dependencies array to be: [sixs, fours, noBalls, playedBalls, running]",{"range":"1019","text":"1020"},"Update the dependencies array to be: [over, previousPlayedBalls]",{"range":"1021","text":"1022"},"Update the dependencies array to be: [running, batsmanScore, noBalls, wideBalls, sixs, fours]",{"range":"1023","text":"1024"},"Update the dependencies array to be: [alert, props.Ining._id, socket]",{"range":"1025","text":"1026"},"Update the dependencies array to be: [alert, history, socket]",{"range":"1027","text":"1028"},{"range":"1029","text":"1012"},[1022,1024],"[alert, props.match.params.id]",[847,849],[1742,1872],"[dispatch, alert, error, keyword, currentPage, range, category, rating, status, price]",[1662,1792],[1345,1378],"[dispatch, alert, error, history, schedules, tournamentId, deleteError, isDeleted]",[1727,1793],"[dispatch, alert, error, deleteError, isDeleted, history, noTeams, tournament, tournamentId, errorDetail]",[960,962],"[getAllData]",[1489,1491],"[getProfileData]",[1603,1645],"[dispatch, alert, error, history, success, tournamentId, schedualError]",[1548,1590],"[dispatch, alert, error, success, history, teamId]",[1295,1339],"[dispatch, alert, error, isDeleted, history, deleteError]",[883,911],"[dispatch, alert, history, scheduleId, toss]",[1430,1474],"[dispatch, alert, error, isDeleted, history, schedules, tournamentId, deleteError]",[2206,2269],"[dispatch, alert, error, isUpdated, updateError, team, history, teamId, tournament_id]",[985,987],[2855,2922],"[dispatch, alert, error, isUpdated, updateError, schedule, history, scheduleId, tournamentId]",[2433,2502],"[dispatch, alert, error, isUpdated, updateError, tournament, history, tournamentId]",[1019,1025],"[getProfileData, user]",[995,1031],"[dispatch, isAuthenticated, history, redirect]",[1113,1115],"[dispatch, error]",[1794,1860],[1235,1279],"[dispatch, alert, error, history, isUpdated, user]",[3233,3291],"[dispatch, alert, error, isUpdated, updateError, schedule, props.scheduleId]",[1296,1304],"[load, socket]",[1583,1600],"[dispatch, alert, load]",[1212,1225],"[valid, user, heading]",[3309,3326],"[batsman, bowler, teamBowlers, teambatsmans]",[5821,5823],"[getTeamsData, props.Ining._id, props.Ining.teamA_Ining_Status, props.Ining.teamB_Ining_Status, props.Ining.team_A_id, props.Ining.team_B_id, props.Ining.toss._id, props.Ining.tossDecision]",[6036,6049],"[sixs, fours, noBalls, playedBalls, running]",[6325,6346],"[over, previousPlayedBalls]",[6488,6531],"[running, batsmanScore, noBalls, wideBalls, sixs, fours]",[6922,6930],"[alert, props.Ining._id, socket]",[7217,7225],"[alert, history, socket]",[776,793]]